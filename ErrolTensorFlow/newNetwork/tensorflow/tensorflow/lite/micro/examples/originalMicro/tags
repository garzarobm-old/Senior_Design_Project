!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ARM_MATH_CM4	apollo3/pushbutton_main.c	23;"	d	file:
AT_NONCACHEABLE_SECTION_ALIGN	nxp_k66f/audio_provider.cc	36;"	d	file:
AT_NONCACHEABLE_SECTION_ALIGN	nxp_k66f/audio_provider.cc	39;"	d	file:
AT_NONCACHEABLE_SECTION_ALIGN	nxp_k66f/audio_provider.cc	46;"	d	file:
AT_NONCACHEABLE_SECTION_ALIGN	nxp_k66f/audio_provider.cc	50;"	d	file:
AT_NONCACHEABLE_SECTION_ALIGN	nxp_k66f/audio_provider.cc	57;"	d	file:
AT_NONCACHEABLE_SECTION_ALIGN	nxp_k66f/audio_provider.cc	61;"	d	file:
AT_NONCACHEABLE_SECTION_ALIGN	nxp_k66f/audio_provider.cc	66;"	d	file:
AUDIO_BLOCK_SIZE	disco_f746ng/audio_provider.cc	42;"	d	file:
AUDIO_BUFFER_IN	disco_f746ng/audio_provider.cc	43;"	d	file:
AUDIO_BUFFER_OUT	disco_f746ng/audio_provider.cc	44;"	d	file:
BIT_REVERSE_FLAG	simple_features/CMSIS/simple_features_generator.cc	20;"	d	file:
BSP_AUDIO_IN_HalfTransfer_CallBack	disco_f746ng/audio_provider.cc	/^void BSP_AUDIO_IN_HalfTransfer_CallBack(void) {$/;"	f
BSP_AUDIO_IN_TransferComplete_CallBack	disco_f746ng/audio_provider.cc	/^void BSP_AUDIO_IN_TransferComplete_CallBack(void) {$/;"	f
BUFFER_OFFSET_FULL	disco_f746ng/audio_provider.cc	/^  BUFFER_OFFSET_FULL = 2,$/;"	e	enum:__anon5::__anon6	file:
BUFFER_OFFSET_HALF	disco_f746ng/audio_provider.cc	/^  BUFFER_OFFSET_HALF = 1,$/;"	e	enum:__anon5::__anon6	file:
BUFFER_OFFSET_NONE	disco_f746ng/audio_provider.cc	/^  BUFFER_OFFSET_NONE = 0,$/;"	e	enum:__anon5::__anon6	file:
BUFFER_StateTypeDef	disco_f746ng/audio_provider.cc	/^} BUFFER_StateTypeDef;$/;"	t	namespace:__anon5	typeref:enum:__anon5::__anon6	file:
CalculateDiscreteFourierTransform	simple_features/fixed_point/simple_features_generator.cc	/^void CalculateDiscreteFourierTransform(int32_t* time_series,$/;"	f	namespace:__anon12
CalculateDiscreteFourierTransform	simple_features/simple_features_generator.cc	/^void CalculateDiscreteFourierTransform(float* time_series, int time_series_size,$/;"	f	namespace:__anon13
CalculatePeriodicHann	simple_features/fixed_point/simple_features_generator.cc	/^void CalculatePeriodicHann(int window_length, int16_t* window_function) {$/;"	f	namespace:__anon12
CalculatePeriodicHann	simple_features/simple_features_generator.cc	/^void CalculatePeriodicHann(int window_length, float* window_function) {$/;"	f	namespace:__anon13
CaptureSamples	arduino/audio_provider.cc	/^void CaptureSamples() {$/;"	f
CaptureSamples	disco_f746ng/audio_provider.cc	/^void CaptureSamples(const int16_t* sample_data) {$/;"	f	namespace:__anon5
CaptureSamples	esp/audio_provider.cc	/^static void CaptureSamples(void *arg) {$/;"	f	file:
CaptureSamples	nxp_k66f/audio_provider.cc	/^void CaptureSamples(const int16_t *sample_data) {$/;"	f	namespace:__anon16
DATA_ALIGN_ATTRIBUTE	micro_features/tiny_conv_micro_features_model_data.cc	/^    g_tiny_conv_micro_features_model_data[] DATA_ALIGN_ATTRIBUTE = {$/;"	v
DATA_ALIGN_ATTRIBUTE	micro_features/tiny_conv_micro_features_model_data.cc	26;"	d	file:
DATA_ALIGN_ATTRIBUTE	micro_features/tiny_conv_micro_features_model_data.cc	28;"	d	file:
Da7212Initialize	nxp_k66f/audio_provider.cc	/^void Da7212Initialize(void) {$/;"	f	namespace:__anon16
Da7212WriteRegister	nxp_k66f/audio_provider.cc	/^status_t Da7212WriteRegister(uint8_t register_address, uint8_t register_data) {$/;"	f	namespace:__anon16
DebugLog	apollo3/_main.c	/^void DebugLog(const char* s) { am_util_stdio_printf("%s", s); }$/;"	f
DebugLog	apollo3/pushbutton_main.c	/^void DebugLog(const char* s) { am_util_stdio_printf("%s", s); }$/;"	f
DebugLogFloat	apollo3/_main.c	/^void DebugLogFloat(float i) { am_util_stdio_printf("%f", i); }$/;"	f
DebugLogFloat	apollo3/pushbutton_main.c	/^void DebugLogFloat(float i) { am_util_stdio_printf("%f", i); }$/;"	f
DebugLogHex	apollo3/_main.c	/^void DebugLogHex(uint32_t i) { am_util_stdio_printf("0x%8x", i); }$/;"	f
DebugLogHex	apollo3/pushbutton_main.c	/^void DebugLogHex(uint32_t i) { am_util_stdio_printf("0x%8x", i); }$/;"	f
DebugLogInt32	apollo3/_main.c	/^void DebugLogInt32(int32_t i) { am_util_stdio_printf("%d", i); }$/;"	f
DebugLogInt32	apollo3/pushbutton_main.c	/^void DebugLogInt32(int32_t i) { am_util_stdio_printf("%d", i); }$/;"	f
DebugLogUInt32	apollo3/_main.c	/^void DebugLogUInt32(uint32_t i) { am_util_stdio_printf("%d", i); }$/;"	f
DebugLogUInt32	apollo3/pushbutton_main.c	/^void DebugLogUInt32(uint32_t i) { am_util_stdio_printf("%d", i); }$/;"	f
FFT_SIZE	simple_features/CMSIS/simple_features_generator.cc	21;"	d	file:
FFT_SIZE_DIV2	simple_features/CMSIS/simple_features_generator.cc	22;"	d	file:
FIXED_POINT	micro_features/micro_features_generator.cc	26;"	d	file:
FRAME_SIZE	apollo3/pushbutton_main.c	32;"	d	file:
FeatureProvider	feature_provider.cc	/^FeatureProvider::FeatureProvider(int feature_size, uint8_t* feature_data)$/;"	f	class:FeatureProvider
FeatureProvider	feature_provider.h	/^class FeatureProvider {$/;"	c
FloatToFixed_Q2_30	simple_features/fixed_point/simple_features_generator.cc	/^inline int32_t FloatToFixed_Q2_30(float input) {$/;"	f	namespace:__anon12
GenerateMicroFeatures	micro_features/micro_features_generator.cc	/^TfLiteStatus GenerateMicroFeatures(tflite::ErrorReporter* error_reporter,$/;"	f
GenerateSimpleFeatures	simple_features/CMSIS/simple_features_generator.cc	/^TfLiteStatus GenerateSimpleFeatures(tflite::ErrorReporter* error_reporter,$/;"	f
GenerateSimpleFeatures	simple_features/fixed_point/simple_features_generator.cc	/^TfLiteStatus GenerateSimpleFeatures(tflite::ErrorReporter* error_reporter,$/;"	f
GenerateSimpleFeatures	simple_features/simple_features_generator.cc	/^TfLiteStatus GenerateSimpleFeatures(tflite::ErrorReporter* error_reporter,$/;"	f
GenerateSimpleFeatures_1sec	apollo3/pushbutton_test.cc	/^TfLiteStatus GenerateSimpleFeatures_1sec(tflite::ErrorReporter* error_reporter,$/;"	f	namespace:__anon9
GetAudioSamples	apollo3evb/audio_provider.cc	/^TfLiteStatus GetAudioSamples(tflite::ErrorReporter* error_reporter,$/;"	f
GetAudioSamples	arduino/audio_provider.cc	/^TfLiteStatus GetAudioSamples(tflite::ErrorReporter* error_reporter,$/;"	f
GetAudioSamples	audio_provider.cc	/^TfLiteStatus GetAudioSamples(tflite::ErrorReporter* error_reporter,$/;"	f
GetAudioSamples	audio_provider_mock.cc	/^TfLiteStatus GetAudioSamples(tflite::ErrorReporter* error_reporter,$/;"	f
GetAudioSamples	disco_f746ng/audio_provider.cc	/^TfLiteStatus GetAudioSamples(tflite::ErrorReporter* error_reporter,$/;"	f
GetAudioSamples	esp/audio_provider.cc	/^TfLiteStatus GetAudioSamples(tflite::ErrorReporter *error_reporter,$/;"	f
GetAudioSamples	nxp_k66f/audio_provider.cc	/^TfLiteStatus GetAudioSamples(tflite::ErrorReporter *error_reporter,$/;"	f
GetAudioSamples	osx/audio_provider.cc	/^TfLiteStatus GetAudioSamples(tflite::ErrorReporter* error_reporter,$/;"	f
GetAudioSamples	sparkfun_edge/audio_provider.cc	/^TfLiteStatus GetAudioSamples(tflite::ErrorReporter* error_reporter,$/;"	f
HAVE_ATTRIBUTE	micro_features/tiny_conv_micro_features_model_data.cc	21;"	d	file:
HAVE_ATTRIBUTE	micro_features/tiny_conv_micro_features_model_data.cc	23;"	d	file:
IFFT_FLAG_R	simple_features/CMSIS/simple_features_generator.cc	19;"	d	file:
InitAudioRecording	apollo3evb/audio_provider.cc	/^TfLiteStatus InitAudioRecording(tflite::ErrorReporter* error_reporter) {$/;"	f
InitAudioRecording	arduino/audio_provider.cc	/^TfLiteStatus InitAudioRecording(tflite::ErrorReporter* error_reporter) {$/;"	f
InitAudioRecording	disco_f746ng/audio_provider.cc	/^TfLiteStatus InitAudioRecording(tflite::ErrorReporter* error_reporter) {$/;"	f	namespace:__anon5
InitAudioRecording	esp/audio_provider.cc	/^TfLiteStatus InitAudioRecording(tflite::ErrorReporter *error_reporter) {$/;"	f
InitAudioRecording	nxp_k66f/audio_provider.cc	/^TfLiteStatus InitAudioRecording(tflite::ErrorReporter *error_reporter) {$/;"	f	namespace:__anon16
InitAudioRecording	osx/audio_provider.cc	/^TfLiteStatus InitAudioRecording(tflite::ErrorReporter* error_reporter) {$/;"	f	namespace:__anon2
InitAudioRecording	sparkfun_edge/audio_provider.cc	/^TfLiteStatus InitAudioRecording(tflite::ErrorReporter* error_reporter) {$/;"	f
InitializeMicroFeatures	micro_features/micro_features_generator.cc	/^TfLiteStatus InitializeMicroFeatures(tflite::ErrorReporter* error_reporter) {$/;"	f
LatestAudioTimestamp	apollo3evb/audio_provider.cc	/^int32_t LatestAudioTimestamp() { return g_latest_audio_timestamp; }$/;"	f
LatestAudioTimestamp	arduino/audio_provider.cc	/^int32_t LatestAudioTimestamp() { return g_latest_audio_timestamp; }$/;"	f
LatestAudioTimestamp	audio_provider.cc	/^int32_t LatestAudioTimestamp() {$/;"	f
LatestAudioTimestamp	audio_provider_mock.cc	/^int32_t LatestAudioTimestamp() {$/;"	f
LatestAudioTimestamp	disco_f746ng/audio_provider.cc	/^int32_t LatestAudioTimestamp() { return g_latest_audio_timestamp; }$/;"	f
LatestAudioTimestamp	esp/audio_provider.cc	/^int32_t LatestAudioTimestamp() { return g_latest_audio_timestamp; }$/;"	f
LatestAudioTimestamp	nxp_k66f/audio_provider.cc	/^int32_t LatestAudioTimestamp() { return g_latest_audio_timestamp; }$/;"	f
LatestAudioTimestamp	osx/audio_provider.cc	/^int32_t LatestAudioTimestamp() { return g_latest_audio_timestamp; }$/;"	f
LatestAudioTimestamp	sparkfun_edge/audio_provider.cc	/^int32_t LatestAudioTimestamp() { return g_latest_audio_timestamp; }$/;"	f
McuInitializePins	nxp_k66f/audio_provider.cc	/^void McuInitializePins(void) {$/;"	f	namespace:__anon16
NUM_FRAMES	apollo3/pushbutton_main.c	33;"	d	file:
OnAudioBufferFilledCallback	osx/audio_provider.cc	/^void OnAudioBufferFilledCallback($/;"	f	namespace:__anon2
PDMHandle	apollo3/pushbutton_main.c	/^void* PDMHandle;$/;"	v
PopulateFeatureData	feature_provider.cc	/^TfLiteStatus FeatureProvider::PopulateFeatureData($/;"	f	class:FeatureProvider
PreviousResultsQueue	recognize_commands.h	/^  PreviousResultsQueue(tflite::ErrorReporter* error_reporter)$/;"	f	class:PreviousResultsQueue
PreviousResultsQueue	recognize_commands.h	/^class PreviousResultsQueue {$/;"	c
ProcessLatestResults	recognize_commands.cc	/^TfLiteStatus RecognizeCommands::ProcessLatestResults($/;"	f	class:RecognizeCommands
Q10_22_FixedMultiply_Q10_22	simple_features/fixed_point/simple_features_generator.cc	/^inline int32_t Q10_22_FixedMultiply_Q10_22(int32_t a, int32_t b) {$/;"	f	namespace:__anon12
Q1_15_FixedMultiply_Q2_30	simple_features/fixed_point/simple_features_generator.cc	/^inline int32_t Q1_15_FixedMultiply_Q2_30(int16_t a, int16_t b) {$/;"	f	namespace:__anon12
Q2_30_FixedMultiply_Q10_22	simple_features/fixed_point/simple_features_generator.cc	/^inline int32_t Q2_30_FixedMultiply_Q10_22(int32_t a, int32_t b) {$/;"	f	namespace:__anon12
RB_ABORT	esp/ringbuf.h	28;"	d
RB_FAIL	esp/ringbuf.h	27;"	d
RB_READER_UNBLOCK	esp/ringbuf.h	30;"	d
RB_TAG	esp/ringbuf.c	33;"	d	file:
RB_WRITER_FINISHED	esp/ringbuf.h	29;"	d
RETURN_IF_OS_ERROR	osx/audio_provider.cc	32;"	d	file:
RecognizeCommands	recognize_commands.cc	/^RecognizeCommands::RecognizeCommands(tflite::ErrorReporter* error_reporter,$/;"	f	class:RecognizeCommands
RecognizeCommands	recognize_commands.h	/^class RecognizeCommands {$/;"	c
RespondToCommand	apollo3evb/command_responder.cc	/^void RespondToCommand(tflite::ErrorReporter* error_reporter,$/;"	f
RespondToCommand	arduino/command_responder.cc	/^void RespondToCommand(tflite::ErrorReporter* error_reporter,$/;"	f
RespondToCommand	command_responder.cc	/^void RespondToCommand(tflite::ErrorReporter* error_reporter,$/;"	f
RespondToCommand	disco_f746ng/command_responder.cc	/^void RespondToCommand(tflite::ErrorReporter *error_reporter,$/;"	f
RespondToCommand	sparkfun_edge/command_responder.cc	/^void RespondToCommand(tflite::ErrorReporter* error_reporter,$/;"	f
Result	recognize_commands.h	/^    Result() : time_(0), scores_() {}$/;"	f	struct:PreviousResultsQueue::Result
Result	recognize_commands.h	/^    Result(int32_t time, uint8_t* scores) : time_(time) {$/;"	f	struct:PreviousResultsQueue::Result
Result	recognize_commands.h	/^  struct Result {$/;"	s	class:PreviousResultsQueue
SELFTEST_TIMERNUM	apollo3evb/audio_provider.cc	72;"	d	file:
STATIC_ALLOC_ENSURE_ARRAY_SIZE	micro_features/static_alloc.h	23;"	d
S_arm_fft	simple_features/CMSIS/simple_features_generator.cc	/^arm_rfft_instance_q15 S_arm_fft;$/;"	v
SaiRxCallback	nxp_k66f/audio_provider.cc	/^static void SaiRxCallback(I2S_Type *base, sai_edma_handle_t *handle,$/;"	f	namespace:__anon16
SaiTxCallback	nxp_k66f/audio_provider.cc	/^static void SaiTxCallback(I2S_Type *base, sai_edma_handle_t *handle,$/;"	f	namespace:__anon16
SetMicroFeaturesNoiseEstimates	micro_features/micro_features_generator.cc	/^void SetMicroFeaturesNoiseEstimates(const uint32_t* estimate_presets) {$/;"	f
SetSysClock_PLL_HSE_200MHz	disco_f746ng/audio_provider.cc	/^uint8_t SetSysClock_PLL_HSE_200MHz() {$/;"	f	namespace:__anon5
SetTimeInMilliseconds	disco_f746ng/timer.cc	/^void SetTimeInMilliseconds(int32_t time) { g_current_time = time; }$/;"	f
TAG	esp/audio_provider.cc	/^static const char *TAG = "TF_LITE_AUDIO_PROVIDER";$/;"	v	file:
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_AUDIO_PROVIDER_H_	audio_provider.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_CMSIS_HANNING_H_	CMSIS/hanning.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_CMSIS_SIN_1K_H_	CMSIS/sin_1k.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_COMMAND_RESPONDER_H_	command_responder.h	19;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_ESP_RINGBUF_H_	esp/ringbuf.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_FEATURE_PROVIDER_H_	feature_provider.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_MAIN_FUNCTIONS_H_	main_functions.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_MICRO_FEATURES_MICRO_FEATURES_GENERATOR_H_	micro_features/micro_features_generator.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_MICRO_FEATURES_MICRO_MODEL_SETTINGS_H_	micro_features/micro_model_settings.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_MICRO_FEATURES_NO_FEATURE_DATA_SLICE_H_	micro_features/no_feature_data_slice.h	22;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_MICRO_FEATURES_NO_MICRO_FEATURES_DATA_H_	micro_features/no_micro_features_data.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_MICRO_FEATURES_STATIC_ALLOC_H_	micro_features/static_alloc.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_MICRO_FEATURES_TINY_CONV_MICRO_FEATURES_MODEL_DATA_H_	micro_features/tiny_conv_micro_features_model_data.h	22;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_MICRO_FEATURES_YES_FEATURE_DATA_SLICE_H_	micro_features/yes_feature_data_slice.h	22;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_MICRO_FEATURES_YES_MICRO_FEATURES_DATA_H_	micro_features/yes_micro_features_data.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_NO_1000MS_SAMPLE_DATA_H_	no_1000ms_sample_data.h	22;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_NO_30MS_SAMPLE_DATA_H_	no_30ms_sample_data.h	25;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_RECOGNIZE_COMMANDS_H_	recognize_commands.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_SIMPLE_FEATURES_NO_POWER_SPECTRUM_DATA_H_	simple_features/no_power_spectrum_data.h	22;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_SIMPLE_FEATURES_NO_SIMPLE_FEATURES_DATA_H_	simple_features/no_simple_features_data.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_SIMPLE_FEATURES_SIMPLE_FEATURES_GENERATOR_H_	simple_features/simple_features_generator.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_SIMPLE_FEATURES_SIMPLE_MODEL_SETTINGS_H_	simple_features/simple_model_settings.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_SIMPLE_FEATURES_TINY_CONV_SIMPLE_FEATURES_MODEL_DATA_H_	simple_features/tiny_conv_simple_features_model_data.h	22;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_SIMPLE_FEATURES_YES_POWER_SPECTRUM_DATA_H_	simple_features/yes_power_spectrum_data.h	22;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_SIMPLE_FEATURES_YES_SIMPLE_FEATURES_DATA_H_	simple_features/yes_simple_features_data.h	17;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_YES_1000MS_SAMPLE_DATA_H_	yes_1000ms_sample_data.h	22;"	d
TENSORFLOW_LITE_MICRO_EXAMPLES_MICRO_SPEECH_YES_30MS_SAMPLE_DATA_H_	yes_30ms_sample_data.h	25;"	d
TF_LITE_MICRO_TEST	apollo3/preprocessor_1k.cc	/^TF_LITE_MICRO_TEST(TestPreprocessor) {$/;"	f
TF_LITE_MICRO_TEST	apollo3/pushbutton_test.cc	/^TF_LITE_MICRO_TEST(TestSimpleFeaturesGenerator) {$/;"	f
TF_LITE_MICRO_TEST	audio_provider_mock_test.cc	/^TF_LITE_MICRO_TEST(TestAudioProviderMock) {$/;"	f
TF_LITE_MICRO_TEST	audio_provider_test.cc	/^TF_LITE_MICRO_TEST(TestAudioProvider) {$/;"	f
TF_LITE_MICRO_TEST	audio_provider_test.cc	/^TF_LITE_MICRO_TEST(TestTimer) {$/;"	f
TF_LITE_MICRO_TEST	command_responder_test.cc	/^TF_LITE_MICRO_TEST(TestCallability) {$/;"	f
TF_LITE_MICRO_TEST	feature_provider_mock_test.cc	/^TF_LITE_MICRO_TEST(TestFeatureProviderMockNo) {$/;"	f
TF_LITE_MICRO_TEST	feature_provider_mock_test.cc	/^TF_LITE_MICRO_TEST(TestFeatureProviderMockYes) {$/;"	f
TF_LITE_MICRO_TEST	feature_provider_test.cc	/^TF_LITE_MICRO_TEST(TestFeatureProvider) {$/;"	f
TF_LITE_MICRO_TEST	micro_features/micro_features_generator_test.cc	/^TF_LITE_MICRO_TEST(TestMicroFeaturesGeneratorNo) {$/;"	f
TF_LITE_MICRO_TEST	micro_features/micro_features_generator_test.cc	/^TF_LITE_MICRO_TEST(TestMicroFeaturesGeneratorYes) {$/;"	f
TF_LITE_MICRO_TEST	micro_speech_test.cc	/^TF_LITE_MICRO_TEST(TestInvoke) {$/;"	f
TF_LITE_MICRO_TEST	recognize_commands_test.cc	/^TF_LITE_MICRO_TEST(PreviousResultsQueueBasic) {$/;"	f
TF_LITE_MICRO_TEST	recognize_commands_test.cc	/^TF_LITE_MICRO_TEST(PreviousResultsQueuePushPop) {$/;"	f
TF_LITE_MICRO_TEST	recognize_commands_test.cc	/^TF_LITE_MICRO_TEST(RecognizeCommandsTestBadInputLength) {$/;"	f
TF_LITE_MICRO_TEST	recognize_commands_test.cc	/^TF_LITE_MICRO_TEST(RecognizeCommandsTestBadInputTimes) {$/;"	f
TF_LITE_MICRO_TEST	recognize_commands_test.cc	/^TF_LITE_MICRO_TEST(RecognizeCommandsTestBasic) {$/;"	f
TF_LITE_MICRO_TEST	recognize_commands_test.cc	/^TF_LITE_MICRO_TEST(RecognizeCommandsTestFindCommands) {$/;"	f
TF_LITE_MICRO_TEST	recognize_commands_test.cc	/^TF_LITE_MICRO_TEST(RecognizeCommandsTestTooFewInputs) {$/;"	f
TF_LITE_MICRO_TEST	simple_features/simple_features_generator_test.cc	/^TF_LITE_MICRO_TEST(TestSimpleFeaturesGenerator) {$/;"	f
TimeInMilliseconds	disco_f746ng/timer.cc	/^int32_t TimeInMilliseconds() { return g_current_time; }$/;"	f
_main	apollo3/_main.c	/^int _main(void) {$/;"	f
_main	apollo3/pushbutton_main.c	/^int _main(void) {$/;"	f
_rb_reset	esp/ringbuf.c	/^static void _rb_reset(ringbuf_t *rb, int abort_read, int abort_write) {$/;"	f	file:
abort_read	esp/ringbuf.h	/^  int abort_read;$/;"	m	struct:ringbuf
abort_write	esp/ringbuf.h	/^  int abort_write;$/;"	m	struct:ringbuf
adc_config0	sparkfun_edge/audio_provider.cc	/^void adc_config0(tflite::ErrorReporter* error_reporter) {$/;"	f	namespace:__anon8
adc_start_dma	sparkfun_edge/audio_provider.cc	/^void adc_start_dma(tflite::ErrorReporter* error_reporter) {$/;"	f	namespace:__anon8
am_adc_isr	sparkfun_edge/audio_provider.cc	/^extern "C" void am_adc_isr(void) {$/;"	f
am_gpio_isr	apollo3/pushbutton_main.c	/^void am_gpio_isr(void) {$/;"	f
am_gpio_isr	apollo3evb/audio_provider.cc	/^extern "C" void am_gpio_isr(void) {$/;"	f
am_pdm0_isr	apollo3/pushbutton_main.c	/^void am_pdm0_isr(void) {$/;"	f
am_pdm0_isr	apollo3evb/audio_provider.cc	/^extern "C" void am_pdm0_isr(void) {$/;"	f
app_main	esp/main.cc	/^extern "C" void app_main() {$/;"	f
arm_math_status	simple_features/CMSIS/simple_features_generator.cc	/^arm_status arm_math_status;$/;"	v
average_window_duration_ms_	recognize_commands.h	/^  int32_t average_window_duration_ms_;$/;"	m	class:RecognizeCommands
back	recognize_commands.h	/^  Result& back() {$/;"	f	class:PreviousResultsQueue
base	esp/ringbuf.h	/^  uint8_t *base; \/**< Original pointer *\/$/;"	m	struct:ringbuf
bufA	simple_features/CMSIS/simple_features_generator.cc	/^q15_t bufA[FFT_SIZE];$/;"	v
bufB	simple_features/CMSIS/simple_features_generator.cc	/^q15_t bufB[FFT_SIZE];$/;"	v
can_read	esp/ringbuf.h	/^  xSemaphoreHandle can_read;$/;"	m	struct:ringbuf
can_write	esp/ringbuf.h	/^  xSemaphoreHandle can_write;$/;"	m	struct:ringbuf
captured_data	apollo3/pushbutton_main.c	/^    captured_data[FRAME_SIZE * NUM_FRAMES];  \/\/ Location of 1-second data buffer$/;"	v
cmsis_dft	apollo3/compare_1k.py	/^cmsis_dft = new_data_to_array('cmsis_dft.txt', datatype='int16')$/;"	v
cmsis_power	apollo3/compare_1k.py	/^cmsis_power = new_data_to_array('cmsis_power.txt', datatype='int16')$/;"	v
cmsis_power_avg	apollo3/compare_1k.py	/^cmsis_power_avg = new_data_to_array('cmsis_power_avg.txt', datatype='uint8')$/;"	v
cmsis_windowed_input	apollo3/compare_1k.py	/^cmsis_windowed_input = new_data_to_array($/;"	v
count	apollo3/preprocessor_1k.cc	/^int count;$/;"	v
custom_am_bsp_low_power_init	apollo3evb/audio_provider.cc	/^void custom_am_bsp_low_power_init(void) {$/;"	f	namespace:__anon3
da7212ConfigurationSize	nxp_k66f/audio_provider.cc	/^constexpr int da7212ConfigurationSize = 48;$/;"	m	namespace:__anon16	file:
da7212I2cAddress	nxp_k66f/audio_provider.cc	/^constexpr int da7212I2cAddress = 0x1A;$/;"	m	namespace:__anon16	file:
data	apollo3/captured_data_to_wav.py	/^data = 'captured_data.txt'$/;"	v
detection_threshold_	recognize_commands.h	/^  uint8_t detection_threshold_;$/;"	m	class:RecognizeCommands
empty	recognize_commands.h	/^  bool empty() { return size_ == 0; }$/;"	f	class:PreviousResultsQueue
enable_burst_mode	apollo3evb/audio_provider.cc	/^void enable_burst_mode(tflite::ErrorReporter* error_reporter) {$/;"	f	namespace:__anon3
enable_burst_mode	sparkfun_edge/audio_provider.cc	/^void enable_burst_mode(tflite::ErrorReporter* error_reporter) {$/;"	f	namespace:__anon8
error_reporter	main_functions.cc	/^tflite::ErrorReporter* error_reporter = nullptr;$/;"	m	namespace:__anon15	file:
error_reporter_	recognize_commands.h	/^  tflite::ErrorReporter* error_reporter_;$/;"	m	class:PreviousResultsQueue
error_reporter_	recognize_commands.h	/^  tflite::ErrorReporter* error_reporter_;$/;"	m	class:RecognizeCommands
feature_buffer	main_functions.cc	/^uint8_t feature_buffer[kFeatureElementCount];$/;"	m	namespace:__anon15	file:
feature_data_	feature_provider.h	/^  uint8_t* feature_data_;$/;"	m	class:FeatureProvider
feature_provider	main_functions.cc	/^FeatureProvider* feature_provider = nullptr;$/;"	m	namespace:__anon15	file:
feature_size_	feature_provider.h	/^  int feature_size_;$/;"	m	class:FeatureProvider
fill_cnt	esp/ringbuf.h	/^  volatile ssize_t fill_cnt;  \/**< Number of filled slots *\/$/;"	m	struct:ringbuf
from_front	recognize_commands.h	/^  Result& from_front(int offset) {$/;"	f	class:PreviousResultsQueue
front	recognize_commands.h	/^  Result& front() { return results_[front_index_]; }$/;"	f	class:PreviousResultsQueue
front_index_	recognize_commands.h	/^  int front_index_;$/;"	m	class:PreviousResultsQueue
g_PowerOff	apollo3evb/audio_provider.cc	/^uint32_t g_PowerOff = 0;$/;"	m	namespace:__anon3	file:
g_PreviousCommandTimestamp	apollo3evb/command_responder.cc	/^int32_t g_PreviousCommandTimestamp = 0;$/;"	v
g_adc_dma_error	sparkfun_edge/audio_provider.cc	/^volatile bool g_adc_dma_error;$/;"	m	namespace:__anon8	file:
g_adc_dma_error_reporter	sparkfun_edge/audio_provider.cc	/^tflite::ErrorReporter* g_adc_dma_error_reporter = nullptr;$/;"	m	namespace:__anon8	file:
g_adc_handle	sparkfun_edge/audio_provider.cc	/^static void* g_adc_handle;$/;"	m	namespace:__anon8	file:
g_audio_capture_buffer	apollo3evb/audio_provider.cc	/^int16_t g_audio_capture_buffer[kAudioCaptureBufferSize] = {};$/;"	m	namespace:__anon3	file:
g_audio_capture_buffer	arduino/audio_provider.cc	/^int16_t g_audio_capture_buffer[kAudioCaptureBufferSize];$/;"	m	namespace:__anon1	file:
g_audio_capture_buffer	disco_f746ng/audio_provider.cc	/^int16_t g_audio_capture_buffer[kAudioCaptureBufferSize];$/;"	m	namespace:__anon5	file:
g_audio_capture_buffer	esp/audio_provider.cc	/^ringbuf_t *g_audio_capture_buffer;$/;"	v
g_audio_capture_buffer	nxp_k66f/audio_provider.cc	/^int16_t g_audio_capture_buffer[kAudioCaptureBufferSize];$/;"	m	namespace:__anon16	file:
g_audio_capture_buffer	osx/audio_provider.cc	/^int16_t g_audio_capture_buffer[kAudioCaptureBufferSize];$/;"	m	namespace:__anon2	file:
g_audio_capture_buffer	sparkfun_edge/audio_provider.cc	/^int16_t g_audio_capture_buffer[kAudioCaptureBufferSize] = {};$/;"	m	namespace:__anon8	file:
g_audio_capture_buffer_start	apollo3evb/audio_provider.cc	/^int g_audio_capture_buffer_start = 0;$/;"	m	namespace:__anon3	file:
g_audio_capture_buffer_start	sparkfun_edge/audio_provider.cc	/^int g_audio_capture_buffer_start = 0;$/;"	m	namespace:__anon8	file:
g_audio_device	disco_f746ng/audio_provider.cc	/^AUDIO_DISCO_F746NG g_audio_device;$/;"	m	namespace:__anon5	file:
g_audio_output_buffer	apollo3evb/audio_provider.cc	/^int16_t g_audio_output_buffer[kMaxAudioSampleSize];$/;"	m	namespace:__anon3	file:
g_audio_output_buffer	arduino/audio_provider.cc	/^int16_t g_audio_output_buffer[kMaxAudioSampleSize];$/;"	m	namespace:__anon1	file:
g_audio_output_buffer	disco_f746ng/audio_provider.cc	/^int16_t g_audio_output_buffer[kMaxAudioSampleSize];$/;"	m	namespace:__anon5	file:
g_audio_output_buffer	esp/audio_provider.cc	/^int16_t g_audio_output_buffer[kMaxAudioSampleSize];$/;"	m	namespace:__anon11	file:
g_audio_output_buffer	nxp_k66f/audio_provider.cc	/^int16_t g_audio_output_buffer[kMaxAudioSampleSize];$/;"	m	namespace:__anon16	file:
g_audio_output_buffer	osx/audio_provider.cc	/^int16_t g_audio_output_buffer[kMaxAudioSampleSize];$/;"	m	namespace:__anon2	file:
g_audio_output_buffer	sparkfun_edge/audio_provider.cc	/^int16_t g_audio_output_buffer[kMaxAudioSampleSize];$/;"	m	namespace:__anon8	file:
g_audio_rec_buffer_state	disco_f746ng/audio_provider.cc	/^__IO uint32_t g_audio_rec_buffer_state = BUFFER_OFFSET_NONE;$/;"	m	namespace:__anon5	file:
g_bPDMDataReady	apollo3/pushbutton_main.c	/^volatile bool g_bPDMDataReady = false;$/;"	v
g_current_time	disco_f746ng/timer.cc	/^int32_t g_current_time = 0;$/;"	m	namespace:__anon4	file:
g_da7212_register_config	nxp_k66f/audio_provider.cc	/^volatile uint8_t g_da7212_register_config[da7212ConfigurationSize][2] = {$/;"	m	namespace:__anon16	file:
g_deepsleep_button0	apollo3/pushbutton_main.c	/^const am_hal_gpio_pincfg_t g_deepsleep_button0 = {$/;"	v
g_dma_destination_index	apollo3evb/audio_provider.cc	/^int g_dma_destination_index = 0;$/;"	m	namespace:__anon3	file:
g_dma_destination_index	sparkfun_edge/audio_provider.cc	/^int g_dma_destination_index = 0;$/;"	m	namespace:__anon8	file:
g_dummy_audio_data	audio_provider.cc	/^int16_t g_dummy_audio_data[kMaxAudioSampleSize];$/;"	m	namespace:__anon10	file:
g_dummy_audio_data	audio_provider_mock.cc	/^int16_t g_dummy_audio_data[kMaxAudioSampleSize];$/;"	m	namespace:__anon7	file:
g_hanning	CMSIS/hanning.cc	/^const int16_t g_hanning[480] = {$/;"	v
g_hanning_size	CMSIS/hanning.cc	/^const int g_hanning_size = 480;$/;"	v
g_history_buffer	esp/audio_provider.cc	/^int16_t g_history_buffer[history_samples_to_keep];$/;"	m	namespace:__anon11	file:
g_is_audio_initialized	apollo3evb/audio_provider.cc	/^bool g_is_audio_initialized = false;$/;"	m	namespace:__anon3	file:
g_is_audio_initialized	arduino/audio_provider.cc	/^bool g_is_audio_initialized = false;$/;"	m	namespace:__anon1	file:
g_is_audio_initialized	disco_f746ng/audio_provider.cc	/^bool g_is_audio_initialized = false;$/;"	m	namespace:__anon5	file:
g_is_audio_initialized	esp/audio_provider.cc	/^bool g_is_audio_initialized = false;$/;"	m	namespace:__anon11	file:
g_is_audio_initialized	nxp_k66f/audio_provider.cc	/^bool g_is_audio_initialized = false;$/;"	m	namespace:__anon16	file:
g_is_audio_initialized	osx/audio_provider.cc	/^bool g_is_audio_initialized = false;$/;"	m	namespace:__anon2	file:
g_is_audio_initialized	sparkfun_edge/audio_provider.cc	/^bool g_is_audio_initialized = false;$/;"	m	namespace:__anon8	file:
g_is_first_time	micro_features/micro_features_generator.cc	/^bool g_is_first_time = true;$/;"	m	namespace:__anon17	file:
g_latest_audio_timestamp	apollo3evb/audio_provider.cc	/^int32_t g_latest_audio_timestamp = 0;$/;"	m	namespace:__anon3	file:
g_latest_audio_timestamp	arduino/audio_provider.cc	/^volatile int32_t g_latest_audio_timestamp = 0;$/;"	m	namespace:__anon1	file:
g_latest_audio_timestamp	audio_provider.cc	/^int32_t g_latest_audio_timestamp = 0;$/;"	m	namespace:__anon10	file:
g_latest_audio_timestamp	audio_provider_mock.cc	/^int32_t g_latest_audio_timestamp = 0;$/;"	m	namespace:__anon7	file:
g_latest_audio_timestamp	disco_f746ng/audio_provider.cc	/^int32_t g_latest_audio_timestamp = 0;$/;"	m	namespace:__anon5	file:
g_latest_audio_timestamp	esp/audio_provider.cc	/^volatile int32_t g_latest_audio_timestamp = 0;$/;"	v
g_latest_audio_timestamp	nxp_k66f/audio_provider.cc	/^int32_t g_latest_audio_timestamp = 0;$/;"	m	namespace:__anon16	file:
g_latest_audio_timestamp	osx/audio_provider.cc	/^int32_t g_latest_audio_timestamp = 0;$/;"	m	namespace:__anon2	file:
g_latest_audio_timestamp	sparkfun_edge/audio_provider.cc	/^int32_t g_latest_audio_timestamp = 0;$/;"	m	namespace:__anon8	file:
g_micro_features_state	micro_features/micro_features_generator.cc	/^FrontendState g_micro_features_state;$/;"	m	namespace:__anon17	file:
g_no_1000ms_sample_data	no_1000ms_sample_data.cc	/^const int16_t g_no_1000ms_sample_data[16000] = {$/;"	v
g_no_1000ms_sample_data_size	no_1000ms_sample_data.cc	/^const int g_no_1000ms_sample_data_size = 16000;$/;"	v
g_no_30ms_sample_data	no_30ms_sample_data.cc	/^const int16_t g_no_30ms_sample_data[480] = {$/;"	v
g_no_30ms_sample_data_size	no_30ms_sample_data.cc	/^const int g_no_30ms_sample_data_size = 480;$/;"	v
g_no_feature_data_slice	micro_features/no_feature_data_slice.cc	/^const uint8_t g_no_feature_data_slice[g_no_feature_data_slice_size] = {$/;"	v
g_no_feature_data_slice_size	micro_features/no_feature_data_slice.h	/^constexpr int g_no_feature_data_slice_size = 40;$/;"	v
g_no_micro_f9643d42_nohash_4_data	micro_features/no_micro_features_data.cc	/^const unsigned char g_no_micro_f9643d42_nohash_4_data[] = {$/;"	v
g_no_micro_f9643d42_nohash_4_height	micro_features/no_micro_features_data.cc	/^const int g_no_micro_f9643d42_nohash_4_height = 49;$/;"	v
g_no_micro_f9643d42_nohash_4_width	micro_features/no_micro_features_data.cc	/^const int g_no_micro_f9643d42_nohash_4_width = 40;$/;"	v
g_no_power_spectrum_data	simple_features/no_power_spectrum_data.cc	/^const uint8_t g_no_power_spectrum_data[g_no_power_spectrum_data_size] = {$/;"	v
g_no_power_spectrum_data_size	simple_features/no_power_spectrum_data.h	/^constexpr int g_no_power_spectrum_data_size = 43;$/;"	v
g_no_score	apollo3/pushbutton_test.cc	/^uint8_t g_no_score = 0;$/;"	v
g_no_simple_f9643d42_nohash_4_data	simple_features/no_simple_features_data.cc	/^const unsigned char g_no_simple_f9643d42_nohash_4_data[] = {$/;"	v
g_no_simple_f9643d42_nohash_4_height	simple_features/no_simple_features_data.cc	/^const int g_no_simple_f9643d42_nohash_4_height = 49;$/;"	v
g_no_simple_f9643d42_nohash_4_width	simple_features/no_simple_features_data.cc	/^const int g_no_simple_f9643d42_nohash_4_width = 43;$/;"	v
g_numFramesCaptured	apollo3/pushbutton_main.c	/^volatile int16_t g_numFramesCaptured = 0;$/;"	v
g_pdm_dma_error	apollo3evb/audio_provider.cc	/^volatile bool g_pdm_dma_error;$/;"	m	namespace:__anon3	file:
g_pdm_dma_error_reporter	apollo3evb/audio_provider.cc	/^tflite::ErrorReporter* g_pdm_dma_error_reporter = nullptr;$/;"	m	namespace:__anon3	file:
g_pdm_handle	apollo3evb/audio_provider.cc	/^static void* g_pdm_handle;$/;"	m	namespace:__anon3	file:
g_rx_dma_handle	nxp_k66f/audio_provider.cc	/^edma_handle_t g_rx_dma_handle = {0};$/;"	m	namespace:__anon16	file:
g_rx_index	nxp_k66f/audio_provider.cc	/^static volatile uint32_t g_rx_index = 0;$/;"	m	namespace:__anon16	file:
g_rx_sai_handle	nxp_k66f/audio_provider.cc	/^sai_edma_handle_t g_rx_sai_handle;$/;"	m	namespace:__anon16	file:
g_sContTimer	apollo3evb/audio_provider.cc	/^static am_hal_ctimer_config_t g_sContTimer = {$/;"	m	namespace:__anon3	file:
g_sPdmConfig	apollo3/pushbutton_main.c	/^am_hal_pdm_config_t g_sPdmConfig = {$/;"	v
g_sai_transfer	nxp_k66f/audio_provider.cc	/^sai_transfer_t g_sai_transfer;$/;"	m	namespace:__anon16	file:
g_scores	apollo3/pushbutton_main.c	/^q7_t g_scores[4] = {0};$/;"	v
g_sdram_device	disco_f746ng/audio_provider.cc	/^SDRAM_DISCO_F746NG g_sdram_device;$/;"	m	namespace:__anon5	file:
g_silence_score	apollo3/pushbutton_test.cc	/^uint8_t g_silence_score = 0;$/;"	v
g_sin_1k	CMSIS/sin_1k.cc	/^const int16_t g_sin_1k[480] = {$/;"	v
g_sin_1k_size	CMSIS/sin_1k.cc	/^const int g_sin_1k_size = 480;$/;"	v
g_tiny_conv_micro_features_model_data_len	micro_features/tiny_conv_micro_features_model_data.cc	/^const int g_tiny_conv_micro_features_model_data_len = 18208;$/;"	v
g_tiny_conv_simple_features_model_data	simple_features/tiny_conv_simple_features_model_data.cc	/^const unsigned char g_tiny_conv_simple_features_model_data[] = {$/;"	v
g_tiny_conv_simple_features_model_data_len	simple_features/tiny_conv_simple_features_model_data.cc	/^const int g_tiny_conv_simple_features_model_data_len = 82288;$/;"	v
g_total_samples_captured	apollo3evb/audio_provider.cc	/^int64_t g_total_samples_captured = 0;$/;"	m	namespace:__anon3	file:
g_total_samples_captured	sparkfun_edge/audio_provider.cc	/^int64_t g_total_samples_captured = 0;$/;"	m	namespace:__anon8	file:
g_tx_dma_handle	nxp_k66f/audio_provider.cc	/^edma_handle_t g_tx_dma_handle = {0};$/;"	m	namespace:__anon16	file:
g_tx_index	nxp_k66f/audio_provider.cc	/^static volatile uint32_t g_tx_index = 0;$/;"	m	namespace:__anon16	file:
g_tx_sai_handle	nxp_k66f/audio_provider.cc	/^sai_edma_handle_t g_tx_sai_handle;$/;"	m	namespace:__anon16	file:
g_ui32ADCSampleBuffer0	sparkfun_edge/audio_provider.cc	/^uint32_t g_ui32ADCSampleBuffer0[kAdcSampleBufferSize];$/;"	m	namespace:__anon8	file:
g_ui32ADCSampleBuffer1	sparkfun_edge/audio_provider.cc	/^uint32_t g_ui32ADCSampleBuffer1[kAdcSampleBufferSize];$/;"	m	namespace:__anon8	file:
g_ui32PDMSampleBuffer0	apollo3evb/audio_provider.cc	/^uint32_t g_ui32PDMSampleBuffer0[kPdmSampleBufferSize];$/;"	m	namespace:__anon3	file:
g_ui32PDMSampleBuffer1	apollo3evb/audio_provider.cc	/^uint32_t g_ui32PDMSampleBuffer1[kPdmSampleBufferSize];$/;"	m	namespace:__anon3	file:
g_unknown_score	apollo3/pushbutton_test.cc	/^uint8_t g_unknown_score = 0;$/;"	v
g_yes_1000ms_sample_data	yes_1000ms_sample_data.cc	/^const int16_t g_yes_1000ms_sample_data[16000] = {$/;"	v
g_yes_1000ms_sample_data_size	yes_1000ms_sample_data.cc	/^const int g_yes_1000ms_sample_data_size = 16000;$/;"	v
g_yes_30ms_sample_data	yes_30ms_sample_data.cc	/^const int16_t g_yes_30ms_sample_data[480] = {$/;"	v
g_yes_30ms_sample_data_size	yes_30ms_sample_data.cc	/^const int g_yes_30ms_sample_data_size = 480;$/;"	v
g_yes_feature_data_slice	micro_features/yes_feature_data_slice.cc	/^const uint8_t g_yes_feature_data_slice[g_yes_feature_data_slice_size] = {$/;"	v
g_yes_feature_data_slice_size	micro_features/yes_feature_data_slice.h	/^constexpr int g_yes_feature_data_slice_size = 40;$/;"	v
g_yes_micro_f2e59fea_nohash_1_data	micro_features/yes_micro_features_data.cc	/^const unsigned char g_yes_micro_f2e59fea_nohash_1_data[] = {$/;"	v
g_yes_micro_f2e59fea_nohash_1_height	micro_features/yes_micro_features_data.cc	/^const int g_yes_micro_f2e59fea_nohash_1_height = 49;$/;"	v
g_yes_micro_f2e59fea_nohash_1_width	micro_features/yes_micro_features_data.cc	/^const int g_yes_micro_f2e59fea_nohash_1_width = 40;$/;"	v
g_yes_power_spectrum_data	simple_features/yes_power_spectrum_data.cc	/^const uint8_t g_yes_power_spectrum_data[g_yes_power_spectrum_data_size] = {$/;"	v
g_yes_power_spectrum_data_size	simple_features/yes_power_spectrum_data.h	/^constexpr int g_yes_power_spectrum_data_size = 43;$/;"	v
g_yes_score	apollo3/pushbutton_test.cc	/^uint8_t g_yes_score = 0;$/;"	v
g_yes_simple_f2e59fea_nohash_1_data	simple_features/yes_simple_features_data.cc	/^const unsigned char g_yes_simple_f2e59fea_nohash_1_data[] = {$/;"	v
g_yes_simple_f2e59fea_nohash_1_height	simple_features/yes_simple_features_data.cc	/^const int g_yes_simple_f2e59fea_nohash_1_height = 49;$/;"	v
g_yes_simple_f2e59fea_nohash_1_width	simple_features/yes_simple_features_data.cc	/^const int g_yes_simple_f2e59fea_nohash_1_width = 43;$/;"	v
hann	CMSIS/create_constants.py	/^hann = np.hanning(int(16000 * 0.03))  # Window 30ms of data$/;"	v
history_samples_to_keep	esp/audio_provider.cc	/^constexpr int32_t history_samples_to_keep =$/;"	v
i2s_bytes_to_read	esp/audio_provider.cc	/^const int32_t i2s_bytes_to_read = 3200;$/;"	v
i2s_init	esp/audio_provider.cc	/^static void i2s_init(void) {$/;"	f	file:
init_timerA3_for_ADC	sparkfun_edge/audio_provider.cc	/^void init_timerA3_for_ADC() {$/;"	f	namespace:__anon8
interpreter	main_functions.cc	/^tflite::MicroInterpreter* interpreter = nullptr;$/;"	m	namespace:__anon15	file:
is_first_run_	feature_provider.h	/^  bool is_first_run_;$/;"	m	class:FeatureProvider
kAdcNumSlots	sparkfun_edge/audio_provider.cc	/^constexpr int kAdcNumSlots = 2;$/;"	m	namespace:__anon8	file:
kAdcSampleBufferSize	sparkfun_edge/audio_provider.cc	/^constexpr int kAdcSampleBufferSize = (kAdcNumSlots * kAdcSamplesPerSlot);$/;"	m	namespace:__anon8	file:
kAdcSamplesPerSlot	sparkfun_edge/audio_provider.cc	/^constexpr int kAdcSamplesPerSlot = 1024;$/;"	m	namespace:__anon8	file:
kAudioCaptureBufferSize	apollo3evb/audio_provider.cc	/^constexpr int kAudioCaptureBufferSize = 16000;$/;"	m	namespace:__anon3	file:
kAudioCaptureBufferSize	arduino/audio_provider.cc	/^constexpr int kAudioCaptureBufferSize = DEFAULT_PDM_BUFFER_SIZE * 16;$/;"	m	namespace:__anon1	file:
kAudioCaptureBufferSize	disco_f746ng/audio_provider.cc	/^constexpr int kAudioCaptureBufferSize = kAudioSampleFrequency * 0.5;$/;"	m	namespace:__anon5	file:
kAudioCaptureBufferSize	esp/audio_provider.cc	/^const int32_t kAudioCaptureBufferSize = 80000;$/;"	v
kAudioCaptureBufferSize	nxp_k66f/audio_provider.cc	/^constexpr int kAudioCaptureBufferSize = kAudioSampleFrequency * 0.5;$/;"	m	namespace:__anon16	file:
kAudioCaptureBufferSize	osx/audio_provider.cc	/^constexpr int kAudioCaptureBufferSize = kAudioSampleFrequency * 0.5;$/;"	m	namespace:__anon2	file:
kAudioCaptureBufferSize	sparkfun_edge/audio_provider.cc	/^constexpr int kAudioCaptureBufferSize = 16000;$/;"	m	namespace:__anon8	file:
kAudioSampleFrequency	micro_features/micro_model_settings.h	/^constexpr int kAudioSampleFrequency = 16000;$/;"	v
kAudioSampleFrequency	simple_features/simple_model_settings.h	/^constexpr int kAudioSampleFrequency = 16000;$/;"	v
kAverageWindowSize	simple_features/CMSIS/simple_features_generator.cc	/^constexpr int kAverageWindowSize = 6;$/;"	m	namespace:__anon14	file:
kAverageWindowSize	simple_features/simple_model_settings.h	/^constexpr int kAverageWindowSize = 6;$/;"	v
kBufferSize	nxp_k66f/audio_provider.cc	/^constexpr int kBufferSize = kNoOfSamples * 2;$/;"	m	namespace:__anon16	file:
kCategoryCount	micro_features/micro_model_settings.h	/^constexpr int kCategoryCount = 4;$/;"	v
kCategoryCount	simple_features/simple_model_settings.h	/^constexpr int kCategoryCount = 4;$/;"	v
kCategoryLabels	micro_features/micro_model_settings.cc	/^const char* kCategoryLabels[kCategoryCount] = {$/;"	v
kCategoryLabels	simple_features/simple_model_settings.cc	/^const char* kCategoryLabels[kCategoryCount] = {$/;"	v
kFeatureElementCount	micro_features/micro_model_settings.h	/^constexpr int kFeatureElementCount = (kFeatureSliceSize * kFeatureSliceCount);$/;"	v
kFeatureElementCount	simple_features/simple_model_settings.h	/^constexpr int kFeatureElementCount = (kFeatureSliceSize * kFeatureSliceCount);$/;"	v
kFeatureSliceCount	micro_features/micro_model_settings.h	/^constexpr int kFeatureSliceCount = 49;$/;"	v
kFeatureSliceCount	simple_features/simple_model_settings.h	/^constexpr int kFeatureSliceCount = 49;$/;"	v
kFeatureSliceDurationMs	micro_features/micro_model_settings.h	/^constexpr int kFeatureSliceDurationMs = 30;$/;"	v
kFeatureSliceDurationMs	simple_features/simple_model_settings.h	/^constexpr int kFeatureSliceDurationMs = 30;$/;"	v
kFeatureSliceSize	micro_features/micro_model_settings.h	/^constexpr int kFeatureSliceSize = 40;$/;"	v
kFeatureSliceSize	simple_features/simple_model_settings.h	/^constexpr int kFeatureSliceSize =$/;"	v
kFeatureSliceStrideMs	micro_features/micro_model_settings.h	/^constexpr int kFeatureSliceStrideMs = 20;$/;"	v
kFeatureSliceStrideMs	simple_features/simple_model_settings.h	/^constexpr int kFeatureSliceStrideMs = 20;$/;"	v
kInputSize	simple_features/CMSIS/simple_features_generator.cc	/^constexpr int kInputSize = 512;$/;"	m	namespace:__anon14	file:
kMaxAudioSampleSize	micro_features/micro_model_settings.h	/^constexpr int kMaxAudioSampleSize = 512;$/;"	v
kMaxAudioSampleSize	simple_features/simple_model_settings.h	/^constexpr int kMaxAudioSampleSize = 512;$/;"	v
kMaxResults	recognize_commands.h	/^  static constexpr int kMaxResults = 50;$/;"	m	class:PreviousResultsQueue
kNoOfBuffers	nxp_k66f/audio_provider.cc	/^constexpr int kNoOfBuffers = 4;$/;"	m	namespace:__anon16	file:
kNoOfSamples	nxp_k66f/audio_provider.cc	/^constexpr int kNoOfSamples = 512;$/;"	m	namespace:__anon16	file:
kNumberRecordBuffers	osx/audio_provider.cc	/^constexpr int kNumberRecordBuffers = 3;$/;"	m	namespace:__anon2	file:
kOutputSize	simple_features/CMSIS/simple_features_generator.cc	/^constexpr int kOutputSize =$/;"	m	namespace:__anon14	file:
kOverSampleRate	nxp_k66f/audio_provider.cc	/^constexpr int kOverSampleRate = 384;$/;"	m	namespace:__anon16	file:
kPdmNumSlots	apollo3evb/audio_provider.cc	/^constexpr int kPdmNumSlots = 1;$/;"	m	namespace:__anon3	file:
kPdmSampleBufferSize	apollo3evb/audio_provider.cc	/^constexpr int kPdmSampleBufferSize = (kPdmNumSlots * kPdmSamplesPerSlot);$/;"	m	namespace:__anon3	file:
kPdmSamplesPerSlot	apollo3evb/audio_provider.cc	/^constexpr int kPdmSamplesPerSlot = 256;$/;"	m	namespace:__anon3	file:
kPi	simple_features/simple_features_generator.cc	/^constexpr float kPi = 3.14159265358979323846f;$/;"	m	namespace:__anon13	file:
kSilenceIndex	micro_features/micro_model_settings.h	/^constexpr int kSilenceIndex = 0;$/;"	v
kSilenceIndex	simple_features/simple_model_settings.h	/^constexpr int kSilenceIndex = 0;$/;"	v
kTensorArenaSize	main_functions.cc	/^constexpr int kTensorArenaSize = 10 * 1024;$/;"	m	namespace:__anon15	file:
kUnknownIndex	micro_features/micro_model_settings.h	/^constexpr int kUnknownIndex = 1;$/;"	v
kUnknownIndex	simple_features/simple_model_settings.h	/^constexpr int kUnknownIndex = 1;$/;"	v
lcd	disco_f746ng/command_responder.cc	/^LCD_DISCO_F746NG lcd;$/;"	v
lock	esp/ringbuf.h	/^  xSemaphoreHandle lock;$/;"	m	struct:ringbuf
loop	main_functions.cc	/^void loop() {$/;"	f
main	main.cc	/^int main(int argc, char* argv[]) {$/;"	f
micro_dft	apollo3/compare_1k.py	/^micro_dft = new_data_to_array('micro_dft.txt', datatype='int32')$/;"	v
micro_power	apollo3/compare_1k.py	/^micro_power = new_data_to_array('micro_power.txt', datatype='int32')$/;"	v
micro_power_avg	apollo3/compare_1k.py	/^micro_power_avg = new_data_to_array('micro_power_avg.txt', datatype='uint8')$/;"	v
micro_windowed_input	apollo3/compare_1k.py	/^micro_windowed_input = new_data_to_array($/;"	v
minimum_count_	recognize_commands.h	/^  int32_t minimum_count_;$/;"	m	class:RecognizeCommands
model	main_functions.cc	/^const tflite::Model* model = nullptr;$/;"	m	namespace:__anon15	file:
model_input	main_functions.cc	/^TfLiteTensor* model_input = nullptr;$/;"	m	namespace:__anon15	file:
model_input_buffer	main_functions.cc	/^uint8_t* model_input_buffer = nullptr;$/;"	m	namespace:__anon15	file:
name	esp/ringbuf.h	/^  char *name;$/;"	m	struct:ringbuf
new_data_to_array	apollo3/captured_data_to_wav.py	/^def new_data_to_array(fn):$/;"	f
new_data_to_array	apollo3/compare_1k.py	/^def new_data_to_array(fn, datatype='int16'):$/;"	f
new_samples_to_get	esp/audio_provider.cc	/^constexpr int32_t new_samples_to_get =$/;"	v
output_data_size	apollo3/preprocessor_1k.cc	29;"	d	file:
pdm_data_get	apollo3/pushbutton_main.c	/^void pdm_data_get(void) {$/;"	f
pdm_init	apollo3/pushbutton_main.c	/^void pdm_init(void) {$/;"	f
pdm_init	apollo3evb/audio_provider.cc	/^extern "C" void pdm_init(void) {$/;"	f
pdm_start_dma	apollo3evb/audio_provider.cc	/^void pdm_start_dma(tflite::ErrorReporter* error_reporter) {$/;"	f
pop_front	recognize_commands.h	/^  Result pop_front() {$/;"	f	class:PreviousResultsQueue
power_button_handler	apollo3evb/audio_provider.cc	/^extern "C" void power_button_handler(void) { g_PowerOff = 1; }$/;"	f
power_down_sequence	apollo3evb/audio_provider.cc	/^extern "C" void power_down_sequence(void) {$/;"	f
previous_results_	recognize_commands.h	/^  PreviousResultsQueue previous_results_;$/;"	m	class:RecognizeCommands
previous_time	main_functions.cc	/^int32_t previous_time = 0;$/;"	m	namespace:__anon15	file:
previous_top_label_	recognize_commands.h	/^  const char* previous_top_label_;$/;"	m	class:RecognizeCommands
previous_top_label_time_	recognize_commands.h	/^  int32_t previous_top_label_time_;$/;"	m	class:RecognizeCommands
push_back	recognize_commands.h	/^  void push_back(const Result& entry) {$/;"	f	class:PreviousResultsQueue
py_dft	apollo3/compare_1k.py	/^py_dft = np.fft.rfft(to_float(cmsis_windowed_input, 15), n=512)$/;"	v
py_power	apollo3/compare_1k.py	/^py_power = np.square(np.abs(py_dft))$/;"	v
py_result	apollo3/compare_1k.py	/^py_result = np.empty((2 * py_dft.size), dtype=np.float)$/;"	v
quantize	simple_features/CMSIS/simple_features_generator.cc	/^void quantize(q15_t* bufA, q15_t* bufB, uint8_t* output) {$/;"	f
rb_abort	esp/ringbuf.c	/^void rb_abort(ringbuf_t *rb) {$/;"	f
rb_abort_read	esp/ringbuf.c	/^void rb_abort_read(ringbuf_t *rb) {$/;"	f
rb_abort_write	esp/ringbuf.c	/^void rb_abort_write(ringbuf_t *rb) {$/;"	f
rb_available	esp/ringbuf.c	/^ssize_t rb_available(ringbuf_t *rb) {$/;"	f
rb_cleanup	esp/ringbuf.c	/^void rb_cleanup(ringbuf_t *rb) {$/;"	f
rb_filled	esp/ringbuf.c	/^ssize_t rb_filled(ringbuf_t *rb) { return rb->fill_cnt; }$/;"	f
rb_init	esp/ringbuf.c	/^ringbuf_t *rb_init(const char *name, uint32_t size) {$/;"	f
rb_is_writer_finished	esp/ringbuf.c	/^int rb_is_writer_finished(ringbuf_t *rb) {$/;"	f
rb_read	esp/ringbuf.c	/^int rb_read(ringbuf_t *rb, uint8_t *buf, int buf_len, uint32_t ticks_to_wait) {$/;"	f
rb_reset	esp/ringbuf.c	/^void rb_reset(ringbuf_t *rb) { _rb_reset(rb, 0, 0); }$/;"	f
rb_reset_and_abort_write	esp/ringbuf.c	/^void rb_reset_and_abort_write(ringbuf_t *rb) {$/;"	f
rb_signal_writer_finished	esp/ringbuf.c	/^void rb_signal_writer_finished(ringbuf_t *rb) {$/;"	f
rb_stat	esp/ringbuf.c	/^void rb_stat(ringbuf_t *rb) {$/;"	f
rb_wakeup_reader	esp/ringbuf.c	/^void rb_wakeup_reader(ringbuf_t *rb) {$/;"	f
rb_write	esp/ringbuf.c	/^int rb_write(ringbuf_t *rb, const uint8_t *buf, int buf_len,$/;"	f
reader_unblock	esp/ringbuf.h	/^  int reader_unblock;$/;"	m	struct:ringbuf
readptr	esp/ringbuf.h	/^  uint8_t *volatile readptr;  \/**< Read pointer *\/$/;"	m	struct:ringbuf
recognizer	main_functions.cc	/^RecognizeCommands* recognizer = nullptr;$/;"	m	namespace:__anon15	file:
results_	recognize_commands.h	/^  Result results_[kMaxResults];$/;"	m	class:PreviousResultsQueue
ringbuf	esp/ringbuf.h	/^typedef struct ringbuf {$/;"	s
ringbuf_t	esp/ringbuf.h	/^} ringbuf_t;$/;"	t	typeref:struct:ringbuf
scores_	recognize_commands.h	/^    uint8_t scores_[kCategoryCount];$/;"	m	struct:PreviousResultsQueue::Result
setup	main_functions.cc	/^void setup() {$/;"	f
sin1k	CMSIS/create_constants.py	/^sin1k = np.sin($/;"	v
size	esp/ringbuf.h	/^  ssize_t size;               \/**< Buffer size *\/$/;"	m	struct:ringbuf
size	recognize_commands.h	/^  int size() { return size_; }$/;"	f	class:PreviousResultsQueue
size_	recognize_commands.h	/^  int size_;$/;"	m	class:PreviousResultsQueue
suppression_ms_	recognize_commands.h	/^  int32_t suppression_ms_;$/;"	m	class:RecognizeCommands
t	CMSIS/create_constants.py	/^t = np.arange(16000. * 0.03) \/ 16000.$/;"	v
tensor_arena	main_functions.cc	/^uint8_t tensor_arena[kTensorArenaSize];$/;"	m	namespace:__anon15	file:
tf_main	esp/main.cc	/^int tf_main(int argc, char* argv[]) {$/;"	f
time_	recognize_commands.h	/^    int32_t time_;$/;"	m	struct:PreviousResultsQueue::Result
to_cc	CMSIS/create_constants.py	/^def to_cc(x, varname, directory='', scale_factor=1):$/;"	f
to_float	apollo3/compare_1k.py	/^def to_float(x, n):$/;"	f
to_h	CMSIS/create_constants.py	/^def to_h(_, varname, directory=''):$/;"	f
values	apollo3/captured_data_to_wav.py	/^values = np.array(new_data_to_array(data)).astype(float)$/;"	v
wav	apollo3/captured_data_to_wav.py	/^wav = values \/ np.max(np.abs(values))$/;"	v
writeptr	esp/ringbuf.h	/^  uint8_t *volatile writeptr; \/**< Write pointer *\/$/;"	m	struct:ringbuf
writer_finished	esp/ringbuf.h	/^  int writer_finished;  \/\/ to prevent infinite blocking for buffer read$/;"	m	struct:ringbuf
~FeatureProvider	feature_provider.cc	/^FeatureProvider::~FeatureProvider() {}$/;"	f	class:FeatureProvider
