
bin/example1_edge_test.axf:     file format elf32-littlearm


Disassembly of section .text:

0000c000 <g_am_pfnVectors>:
    c000:	00 10 00 10 f5 d2 00 00 ed d2 00 00 9d c4 00 00     ................
    c010:	9d c4 00 00 9d c4 00 00 9d c4 00 00 00 00 00 00     ................
	...
    c02c:	f1 d2 00 00 f1 d2 00 00 00 00 00 00 f1 d2 00 00     ................
    c03c:	f1 d2 00 00 f1 d2 00 00 f1 d2 00 00 f1 d2 00 00     ................
    c04c:	f1 d2 00 00 f1 d2 00 00 f1 d2 00 00 f1 d2 00 00     ................
    c05c:	f1 d2 00 00 f1 d2 00 00 f1 d2 00 00 f1 d2 00 00     ................
    c06c:	f1 d2 00 00 f1 d2 00 00 f1 d2 00 00 5d d3 00 00     ............]...
    c07c:	f1 d2 00 00 f1 d2 00 00 f1 d2 00 00 2d d4 00 00     ............-...
    c08c:	f1 d2 00 00 f1 d2 00 00 f1 d2 00 00 f1 d2 00 00     ................
    c09c:	f1 d2 00 00 f1 d2 00 00 f1 d2 00 00 f1 d2 00 00     ................
    c0ac:	f1 d2 00 00 f1 d2 00 00 f1 d2 00 00 f1 d2 00 00     ................
    c0bc:	f1 d2 00 00 f1 d2 00 00 f1 d2 00 00 f1 d2 00 00     ................
    c0cc:	f1 d2 00 00                                         ....

0000c0d0 <__Patchable>:
	...

0000c100 <__aeabi_d2f>:
    c100:	ea4f 0241 	mov.w	r2, r1, lsl #1
    c104:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
    c108:	bf24      	itt	cs
    c10a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
    c10e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
    c112:	d90d      	bls.n	c130 <__aeabi_d2f+0x30>
    c114:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    c118:	ea4f 02c0 	mov.w	r2, r0, lsl #3
    c11c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
    c120:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
    c124:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
    c128:	bf08      	it	eq
    c12a:	f020 0001 	biceq.w	r0, r0, #1
    c12e:	4770      	bx	lr
    c130:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
    c134:	d121      	bne.n	c17a <__aeabi_d2f+0x7a>
    c136:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
    c13a:	bfbc      	itt	lt
    c13c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
    c140:	4770      	bxlt	lr
    c142:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    c146:	ea4f 5252 	mov.w	r2, r2, lsr #21
    c14a:	f1c2 0218 	rsb	r2, r2, #24
    c14e:	f1c2 0c20 	rsb	ip, r2, #32
    c152:	fa10 f30c 	lsls.w	r3, r0, ip
    c156:	fa20 f002 	lsr.w	r0, r0, r2
    c15a:	bf18      	it	ne
    c15c:	f040 0001 	orrne.w	r0, r0, #1
    c160:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    c164:	ea4f 23d3 	mov.w	r3, r3, lsr #11
    c168:	fa03 fc0c 	lsl.w	ip, r3, ip
    c16c:	ea40 000c 	orr.w	r0, r0, ip
    c170:	fa23 f302 	lsr.w	r3, r3, r2
    c174:	ea4f 0343 	mov.w	r3, r3, lsl #1
    c178:	e7cc      	b.n	c114 <__aeabi_d2f+0x14>
    c17a:	ea7f 5362 	mvns.w	r3, r2, asr #21
    c17e:	d107      	bne.n	c190 <__aeabi_d2f+0x90>
    c180:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
    c184:	bf1e      	ittt	ne
    c186:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
    c18a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
    c18e:	4770      	bxne	lr
    c190:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
    c194:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    c198:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    c19c:	4770      	bx	lr
    c19e:	bf00      	nop

0000c1a0 <memcpy>:
    c1a0:	4684      	mov	ip, r0
    c1a2:	ea41 0300 	orr.w	r3, r1, r0
    c1a6:	f013 0303 	ands.w	r3, r3, #3
    c1aa:	d16d      	bne.n	c288 <memcpy+0xe8>
    c1ac:	3a40      	subs	r2, #64	; 0x40
    c1ae:	d341      	bcc.n	c234 <memcpy+0x94>
    c1b0:	f851 3b04 	ldr.w	r3, [r1], #4
    c1b4:	f840 3b04 	str.w	r3, [r0], #4
    c1b8:	f851 3b04 	ldr.w	r3, [r1], #4
    c1bc:	f840 3b04 	str.w	r3, [r0], #4
    c1c0:	f851 3b04 	ldr.w	r3, [r1], #4
    c1c4:	f840 3b04 	str.w	r3, [r0], #4
    c1c8:	f851 3b04 	ldr.w	r3, [r1], #4
    c1cc:	f840 3b04 	str.w	r3, [r0], #4
    c1d0:	f851 3b04 	ldr.w	r3, [r1], #4
    c1d4:	f840 3b04 	str.w	r3, [r0], #4
    c1d8:	f851 3b04 	ldr.w	r3, [r1], #4
    c1dc:	f840 3b04 	str.w	r3, [r0], #4
    c1e0:	f851 3b04 	ldr.w	r3, [r1], #4
    c1e4:	f840 3b04 	str.w	r3, [r0], #4
    c1e8:	f851 3b04 	ldr.w	r3, [r1], #4
    c1ec:	f840 3b04 	str.w	r3, [r0], #4
    c1f0:	f851 3b04 	ldr.w	r3, [r1], #4
    c1f4:	f840 3b04 	str.w	r3, [r0], #4
    c1f8:	f851 3b04 	ldr.w	r3, [r1], #4
    c1fc:	f840 3b04 	str.w	r3, [r0], #4
    c200:	f851 3b04 	ldr.w	r3, [r1], #4
    c204:	f840 3b04 	str.w	r3, [r0], #4
    c208:	f851 3b04 	ldr.w	r3, [r1], #4
    c20c:	f840 3b04 	str.w	r3, [r0], #4
    c210:	f851 3b04 	ldr.w	r3, [r1], #4
    c214:	f840 3b04 	str.w	r3, [r0], #4
    c218:	f851 3b04 	ldr.w	r3, [r1], #4
    c21c:	f840 3b04 	str.w	r3, [r0], #4
    c220:	f851 3b04 	ldr.w	r3, [r1], #4
    c224:	f840 3b04 	str.w	r3, [r0], #4
    c228:	f851 3b04 	ldr.w	r3, [r1], #4
    c22c:	f840 3b04 	str.w	r3, [r0], #4
    c230:	3a40      	subs	r2, #64	; 0x40
    c232:	d2bd      	bcs.n	c1b0 <memcpy+0x10>
    c234:	3230      	adds	r2, #48	; 0x30
    c236:	d311      	bcc.n	c25c <memcpy+0xbc>
    c238:	f851 3b04 	ldr.w	r3, [r1], #4
    c23c:	f840 3b04 	str.w	r3, [r0], #4
    c240:	f851 3b04 	ldr.w	r3, [r1], #4
    c244:	f840 3b04 	str.w	r3, [r0], #4
    c248:	f851 3b04 	ldr.w	r3, [r1], #4
    c24c:	f840 3b04 	str.w	r3, [r0], #4
    c250:	f851 3b04 	ldr.w	r3, [r1], #4
    c254:	f840 3b04 	str.w	r3, [r0], #4
    c258:	3a10      	subs	r2, #16
    c25a:	d2ed      	bcs.n	c238 <memcpy+0x98>
    c25c:	320c      	adds	r2, #12
    c25e:	d305      	bcc.n	c26c <memcpy+0xcc>
    c260:	f851 3b04 	ldr.w	r3, [r1], #4
    c264:	f840 3b04 	str.w	r3, [r0], #4
    c268:	3a04      	subs	r2, #4
    c26a:	d2f9      	bcs.n	c260 <memcpy+0xc0>
    c26c:	3204      	adds	r2, #4
    c26e:	d008      	beq.n	c282 <memcpy+0xe2>
    c270:	07d2      	lsls	r2, r2, #31
    c272:	bf1c      	itt	ne
    c274:	f811 3b01 	ldrbne.w	r3, [r1], #1
    c278:	f800 3b01 	strbne.w	r3, [r0], #1
    c27c:	d301      	bcc.n	c282 <memcpy+0xe2>
    c27e:	880b      	ldrh	r3, [r1, #0]
    c280:	8003      	strh	r3, [r0, #0]
    c282:	4660      	mov	r0, ip
    c284:	4770      	bx	lr
    c286:	bf00      	nop
    c288:	2a08      	cmp	r2, #8
    c28a:	d313      	bcc.n	c2b4 <memcpy+0x114>
    c28c:	078b      	lsls	r3, r1, #30
    c28e:	d08d      	beq.n	c1ac <memcpy+0xc>
    c290:	f010 0303 	ands.w	r3, r0, #3
    c294:	d08a      	beq.n	c1ac <memcpy+0xc>
    c296:	f1c3 0304 	rsb	r3, r3, #4
    c29a:	1ad2      	subs	r2, r2, r3
    c29c:	07db      	lsls	r3, r3, #31
    c29e:	bf1c      	itt	ne
    c2a0:	f811 3b01 	ldrbne.w	r3, [r1], #1
    c2a4:	f800 3b01 	strbne.w	r3, [r0], #1
    c2a8:	d380      	bcc.n	c1ac <memcpy+0xc>
    c2aa:	f831 3b02 	ldrh.w	r3, [r1], #2
    c2ae:	f820 3b02 	strh.w	r3, [r0], #2
    c2b2:	e77b      	b.n	c1ac <memcpy+0xc>
    c2b4:	3a04      	subs	r2, #4
    c2b6:	d3d9      	bcc.n	c26c <memcpy+0xcc>
    c2b8:	3a01      	subs	r2, #1
    c2ba:	f811 3b01 	ldrb.w	r3, [r1], #1
    c2be:	f800 3b01 	strb.w	r3, [r0], #1
    c2c2:	d2f9      	bcs.n	c2b8 <memcpy+0x118>
    c2c4:	780b      	ldrb	r3, [r1, #0]
    c2c6:	7003      	strb	r3, [r0, #0]
    c2c8:	784b      	ldrb	r3, [r1, #1]
    c2ca:	7043      	strb	r3, [r0, #1]
    c2cc:	788b      	ldrb	r3, [r1, #2]
    c2ce:	7083      	strb	r3, [r0, #2]
    c2d0:	4660      	mov	r0, ip
    c2d2:	4770      	bx	lr

0000c2d4 <initializeNVIC>:
    //triggerAdc();

    return 0;
}
/*miguel functions*/
void initializeNVIC(void){
    c2d4:	b510      	push	{r4, lr}
    am_hal_ble_int_clear(BLE, (AM_HAL_BLE_INT_CMDCMP |
    c2d6:	4c09      	ldr	r4, [pc, #36]	; (c2fc <initializeNVIC+0x28>)
    c2d8:	f240 3181 	movw	r1, #897	; 0x381
    c2dc:	6820      	ldr	r0, [r4, #0]
    c2de:	f002 fa9f 	bl	e820 <am_hal_ble_int_clear>
                               AM_HAL_BLE_INT_DCMP |
                               AM_HAL_BLE_INT_BLECIRQ |
                               AM_HAL_BLE_INT_BLECSSTAT));

    am_hal_ble_int_enable(BLE, (AM_HAL_BLE_INT_CMDCMP |
    c2e2:	6820      	ldr	r0, [r4, #0]
    c2e4:	f240 3181 	movw	r1, #897	; 0x381
    c2e8:	f002 fa7a 	bl	e7e0 <am_hal_ble_int_enable>
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    c2ec:	4b04      	ldr	r3, [pc, #16]	; (c300 <initializeNVIC+0x2c>)
    c2ee:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    c2f2:	601a      	str	r2, [r3, #0]
                                AM_HAL_BLE_INT_DCMP |
                                AM_HAL_BLE_INT_BLECIRQ |
                                AM_HAL_BLE_INT_BLECSSTAT));
	NVIC_EnableIRQ(BLE_IRQn);	
	am_hal_interrupt_master_enable();
}
    c2f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	am_hal_interrupt_master_enable();
    c2f8:	f003 bb0a 	b.w	f910 <am_hal_interrupt_master_enable>
    c2fc:	10001b10 	.word	0x10001b10
    c300:	e000e100 	.word	0xe000e100

0000c304 <main>:
{
    c304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    am_hal_clkgen_control(AM_HAL_CLKGEN_CONTROL_SYSCLK_MAX, 0);
    c308:	2100      	movs	r1, #0
{
    c30a:	b08d      	sub	sp, #52	; 0x34
    am_hal_clkgen_control(AM_HAL_CLKGEN_CONTROL_SYSCLK_MAX, 0);
    c30c:	4608      	mov	r0, r1
    c30e:	f003 f85d 	bl	f3cc <am_hal_clkgen_control>
    am_hal_cachectrl_config(&am_hal_cachectrl_defaults);
    c312:	4850      	ldr	r0, [pc, #320]	; (c454 <main+0x150>)
	debug = am_hal_ble_initialize(0, &BLE);
    c314:	4d50      	ldr	r5, [pc, #320]	; (c458 <main+0x154>)
        am_hal_ble_config_t sBleConfig =
    c316:	4f51      	ldr	r7, [pc, #324]	; (c45c <main+0x158>)
	interruptCounter = 0;	
    c318:	4e51      	ldr	r6, [pc, #324]	; (c460 <main+0x15c>)
    	am_util_stdio_printf("debug = %d powerdebug = %d configDebug = %d bootDebug = %d powerset = %d \r\n", debug, powerDebug, configDebug, bootDebug, powerSetDebug);
    c31a:	f8df a178 	ldr.w	sl, [pc, #376]	; c494 <main+0x190>
    	am_util_stdio_printf("interruptCounter = %d", interruptCounter);
    c31e:	f8df b178 	ldr.w	fp, [pc, #376]	; c498 <main+0x194>
    am_hal_cachectrl_config(&am_hal_cachectrl_defaults);
    c322:	f002 feb1 	bl	f088 <am_hal_cachectrl_config>
    am_hal_cachectrl_enable();
    c326:	f002 fed5 	bl	f0d4 <am_hal_cachectrl_enable>
    am_bsp_low_power_init();
    c32a:	f001 f8fd 	bl	d528 <am_bsp_low_power_init>
    am_bsp_uart_printf_enable(); // Enable UART - will set debug output to UART
    c32e:	f001 f963 	bl	d5f8 <am_bsp_uart_printf_enable>
    am_hal_gpio_pinconfig(AM_BSP_GPIO_LED_RED, g_AM_HAL_GPIO_OUTPUT_12);
    c332:	4b4c      	ldr	r3, [pc, #304]	; (c464 <main+0x160>)
    c334:	681c      	ldr	r4, [r3, #0]
    c336:	202e      	movs	r0, #46	; 0x2e
    c338:	4621      	mov	r1, r4
    c33a:	f003 f937 	bl	f5ac <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(AM_BSP_GPIO_LED_BLUE, g_AM_HAL_GPIO_OUTPUT_12);
    c33e:	4621      	mov	r1, r4
    c340:	2025      	movs	r0, #37	; 0x25
    c342:	f003 f933 	bl	f5ac <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(AM_BSP_GPIO_LED_GREEN, g_AM_HAL_GPIO_OUTPUT_12);
    c346:	4621      	mov	r1, r4
    c348:	202c      	movs	r0, #44	; 0x2c
    c34a:	f003 f92f 	bl	f5ac <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(AM_BSP_GPIO_LED_YELLOW, g_AM_HAL_GPIO_OUTPUT_12);
    c34e:	4621      	mov	r1, r4
    c350:	202f      	movs	r0, #47	; 0x2f
    c352:	f003 f92b 	bl	f5ac <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(AM_BSP_GPIO_14, g_AM_HAL_GPIO_INPUT);
    c356:	4b44      	ldr	r3, [pc, #272]	; (c468 <main+0x164>)
    c358:	200e      	movs	r0, #14
    c35a:	6819      	ldr	r1, [r3, #0]
    c35c:	f003 f926 	bl	f5ac <am_hal_gpio_pinconfig>
    am_hal_gpio_output_set(AM_BSP_GPIO_LED_RED);
    c360:	4b42      	ldr	r3, [pc, #264]	; (c46c <main+0x168>)
    am_hal_gpio_output_set(AM_BSP_GPIO_LED_GREEN);
    c362:	f44f 5180 	mov.w	r1, #4096	; 0x1000
    am_hal_gpio_output_set(AM_BSP_GPIO_LED_YELLOW);
    c366:	f44f 4200 	mov.w	r2, #32768	; 0x8000
    am_hal_gpio_output_set(AM_BSP_GPIO_LED_BLUE);
    c36a:	2020      	movs	r0, #32
    am_hal_gpio_output_set(AM_BSP_GPIO_LED_RED);
    c36c:	f44f 4480 	mov.w	r4, #16384	; 0x4000
    c370:	601c      	str	r4, [r3, #0]
    am_hal_gpio_output_set(AM_BSP_GPIO_LED_BLUE);
    c372:	6018      	str	r0, [r3, #0]
    am_hal_gpio_output_set(AM_BSP_GPIO_LED_GREEN);
    c374:	6019      	str	r1, [r3, #0]
    am_hal_gpio_output_set(AM_BSP_GPIO_LED_YELLOW);
    c376:	601a      	str	r2, [r3, #0]
    am_util_stdio_terminal_clear();
    c378:	f000 ffb2 	bl	d2e0 <am_util_stdio_terminal_clear>
    am_util_stdio_printf("SparkFun Edge Board Test\n");
    c37c:	483c      	ldr	r0, [pc, #240]	; (c470 <main+0x16c>)
    c37e:	f000 ff93 	bl	d2a8 <am_util_stdio_printf>
    am_util_stdio_printf("Compiled on %s, %s\n\n", __DATE__, __TIME__);
    c382:	4a3c      	ldr	r2, [pc, #240]	; (c474 <main+0x170>)
    c384:	493c      	ldr	r1, [pc, #240]	; (c478 <main+0x174>)
    c386:	483d      	ldr	r0, [pc, #244]	; (c47c <main+0x178>)
    c388:	f000 ff8e 	bl	d2a8 <am_util_stdio_printf>
    am_util_stdio_printf("SparkFun Tensorflow Debug Output (UART)\r\n");
    c38c:	483c      	ldr	r0, [pc, #240]	; (c480 <main+0x17c>)
    c38e:	f000 ff8b 	bl	d2a8 <am_util_stdio_printf>
    am_bsp_uart_string_print("Hello, UART!\r\n");
    c392:	483c      	ldr	r0, [pc, #240]	; (c484 <main+0x180>)
    c394:	f001 f8a4 	bl	d4e0 <am_bsp_uart_string_print>
	debug = am_hal_ble_initialize(0, &BLE);
    c398:	4629      	mov	r1, r5
    c39a:	2000      	movs	r0, #0
    c39c:	f001 fe0e 	bl	dfbc <am_hal_ble_initialize>
	powerDebug = am_hal_ble_power_control(BLE, AM_HAL_BLE_POWER_ACTIVE);
    c3a0:	2100      	movs	r1, #0
	debug = am_hal_ble_initialize(0, &BLE);
    c3a2:	4681      	mov	r9, r0
	powerDebug = am_hal_ble_power_control(BLE, AM_HAL_BLE_POWER_ACTIVE);
    c3a4:	6828      	ldr	r0, [r5, #0]
    c3a6:	f001 fecd 	bl	e144 <am_hal_ble_power_control>
    c3aa:	4680      	mov	r8, r0
        am_hal_ble_config_t sBleConfig =
    c3ac:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
    c3ae:	ac05      	add	r4, sp, #20
    c3b0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    c3b2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
    c3b6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
	configDebug = am_hal_ble_config(BLE, &sBleConfig);
    c3ba:	a905      	add	r1, sp, #20
    c3bc:	6828      	ldr	r0, [r5, #0]
    c3be:	f001 fe39 	bl	e034 <am_hal_ble_config>
    c3c2:	4607      	mov	r7, r0
	bootDebug = am_hal_ble_boot(BLE);	
    c3c4:	6828      	ldr	r0, [r5, #0]
    c3c6:	f002 fd47 	bl	ee58 <am_hal_ble_boot>
	powerSetDebug = am_hal_ble_tx_power_set(BLE,0x8);
    c3ca:	2108      	movs	r1, #8
	bootDebug = am_hal_ble_boot(BLE);	
    c3cc:	9002      	str	r0, [sp, #8]
	powerSetDebug = am_hal_ble_tx_power_set(BLE,0x8);
    c3ce:	6828      	ldr	r0, [r5, #0]
    c3d0:	f002 fe16 	bl	f000 <am_hal_ble_tx_power_set>
    c3d4:	4604      	mov	r4, r0
	initializeNVIC();	
    c3d6:	f7ff ff7d 	bl	c2d4 <initializeNVIC>
  	am_hal_queue_from_array(&writeQueue, writeBuffers);
    c3da:	f44f 6302 	mov.w	r3, #2080	; 0x820
    c3de:	f44f 7282 	mov.w	r2, #260	; 0x104
    c3e2:	4929      	ldr	r1, [pc, #164]	; (c488 <main+0x184>)
    c3e4:	4829      	ldr	r0, [pc, #164]	; (c48c <main+0x188>)
    c3e6:	f003 fc53 	bl	fc90 <am_hal_queue_init>
	interruptCounter = 0;	
    c3ea:	2300      	movs	r3, #0
    c3ec:	6033      	str	r3, [r6, #0]
        uint32_t pin14Val = 1; 
    c3ee:	2501      	movs	r5, #1
    c3f0:	9403      	str	r4, [sp, #12]
    c3f2:	e009      	b.n	c408 <main+0x104>
    	am_util_stdio_printf("debug = %d powerdebug = %d configDebug = %d bootDebug = %d powerset = %d \r\n", debug, powerDebug, configDebug, bootDebug, powerSetDebug);
    c3f4:	9c03      	ldr	r4, [sp, #12]
    c3f6:	9401      	str	r4, [sp, #4]
    c3f8:	9c02      	ldr	r4, [sp, #8]
    c3fa:	9400      	str	r4, [sp, #0]
    c3fc:	f000 ff54 	bl	d2a8 <am_util_stdio_printf>
    	am_util_stdio_printf("interruptCounter = %d", interruptCounter);
    c400:	6831      	ldr	r1, [r6, #0]
    c402:	4658      	mov	r0, fp
    c404:	f000 ff50 	bl	d2a8 <am_util_stdio_printf>
        am_hal_gpio_state_read( AM_BSP_GPIO_14, AM_HAL_GPIO_INPUT_READ, &pin14Val);
    c408:	aa04      	add	r2, sp, #16
    c40a:	2100      	movs	r1, #0
    c40c:	200e      	movs	r0, #14
        uint32_t pin14Val = 1; 
    c40e:	9504      	str	r5, [sp, #16]
        am_hal_gpio_state_read( AM_BSP_GPIO_14, AM_HAL_GPIO_INPUT_READ, &pin14Val);
    c410:	f003 fa08 	bl	f824 <am_hal_gpio_state_read>
        if( pin14Val == 0 ){ break; }
    c414:	f8dd e010 	ldr.w	lr, [sp, #16]
    	am_util_stdio_printf("debug = %d powerdebug = %d configDebug = %d bootDebug = %d powerset = %d \r\n", debug, powerDebug, configDebug, bootDebug, powerSetDebug);
    c418:	4649      	mov	r1, r9
    c41a:	463b      	mov	r3, r7
    c41c:	4642      	mov	r2, r8
    c41e:	4650      	mov	r0, sl
        if( pin14Val == 0 ){ break; }
    c420:	f1be 0f00 	cmp.w	lr, #0
    c424:	d1e6      	bne.n	c3f4 <main+0xf0>
    am_hal_gpio_output_clear(AM_BSP_GPIO_LED_RED);
    c426:	4b1a      	ldr	r3, [pc, #104]	; (c490 <main+0x18c>)
    am_hal_gpio_output_clear(AM_BSP_GPIO_LED_GREEN);
    c428:	f44f 5180 	mov.w	r1, #4096	; 0x1000
    am_hal_gpio_output_clear(AM_BSP_GPIO_LED_YELLOW);
    c42c:	f44f 4200 	mov.w	r2, #32768	; 0x8000
    am_hal_gpio_output_clear(AM_BSP_GPIO_LED_BLUE);
    c430:	2020      	movs	r0, #32
    am_hal_gpio_output_clear(AM_BSP_GPIO_LED_RED);
    c432:	f44f 4580 	mov.w	r5, #16384	; 0x4000
    c436:	601d      	str	r5, [r3, #0]
    am_hal_gpio_output_clear(AM_BSP_GPIO_LED_BLUE);
    c438:	6018      	str	r0, [r3, #0]
    am_hal_gpio_output_clear(AM_BSP_GPIO_LED_GREEN);
    c43a:	6019      	str	r1, [r3, #0]
    am_hal_gpio_output_clear(AM_BSP_GPIO_LED_YELLOW);
    c43c:	601a      	str	r2, [r3, #0]
    c43e:	4674      	mov	r4, lr
    am_bsp_debug_printf_disable();
    c440:	f001 f8a4 	bl	d58c <am_bsp_debug_printf_disable>
    am_hal_sysctrl_sleep(AM_HAL_SYSCTRL_SLEEP_DEEP);
    c444:	2001      	movs	r0, #1
    c446:	f003 fcb1 	bl	fdac <am_hal_sysctrl_sleep>
}
    c44a:	4620      	mov	r0, r4
    c44c:	b00d      	add	sp, #52	; 0x34
    c44e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c452:	bf00      	nop
    c454:	000121d8 	.word	0x000121d8
    c458:	10001b10 	.word	0x10001b10
    c45c:	00010684 	.word	0x00010684
    c460:	10001b14 	.word	0x10001b14
    c464:	0001234c 	.word	0x0001234c
    c468:	000121dc 	.word	0x000121dc
    c46c:	40010094 	.word	0x40010094
    c470:	000106a0 	.word	0x000106a0
    c474:	000106bc 	.word	0x000106bc
    c478:	000106c8 	.word	0x000106c8
    c47c:	000106d4 	.word	0x000106d4
    c480:	000106ec 	.word	0x000106ec
    c484:	00010718 	.word	0x00010718
    c488:	10001c44 	.word	0x10001c44
    c48c:	10002464 	.word	0x10002464
    c490:	4001009c 	.word	0x4001009c
    c494:	00010728 	.word	0x00010728
    c498:	00010774 	.word	0x00010774

0000c49c <HardFault_Handler>:
HardFault_Handler(void)
#else // AM_CMSIS_REGS
am_fault_isr(void)
#endif // AM_CMSIS_REGS
{
    __asm("    push    {r0,lr}");       // Always pushes to MSP stack
    c49c:	b501      	push	{r0, lr}
    __asm("    tst     lr, #4");        // Check if we should use MSP or PSP
    c49e:	f01e 0f04 	tst.w	lr, #4
    __asm("    itet    eq");            // Instrs executed when: eq,ne,eq
    c4a2:	bf0a      	itet	eq
    __asm("    mrseq   r0, msp");       //    bit2=0 indicating MSP stack
    c4a4:	f3ef 8008 	mrseq	r0, MSP
    __asm("    mrsne   r0, psp");       // e: bit2=1 indicating PSP stack
    c4a8:	f3ef 8009 	mrsne	r0, PSP
    __asm("    addseq  r0, r0, #8");    // t: bit2=0, adjust for pushes to MSP stack
    c4ac:	f110 0008 	addseq.w	r0, r0, #8
    __asm("    bl      am_util_faultisr_collect_data");
    c4b0:	f000 f806 	bl	c4c0 <am_util_faultisr_collect_data>
    __asm("    pop     {r0,pc}");       // Restore from MSP stack
    c4b4:	bd01      	pop	{r0, pc}
    c4b6:	bf00      	nop

0000c4b8 <getStackedReg>:
}

uint32_t __attribute__((naked))
getStackedReg(uint32_t regnum, uint32_t u32SP)
{
    __asm("    lsls    r0, r0, #2");
    c4b8:	0080      	lsls	r0, r0, #2
    __asm("    adds    r0, r1");
    c4ba:	1840      	adds	r0, r0, r1
    __asm("    ldr     r0, [r0]");
    c4bc:	6800      	ldr	r0, [r0, #0]
    __asm("    bx      lr");
    c4be:	4770      	bx	lr

0000c4c0 <am_util_faultisr_collect_data>:
// HardFault_Handler() was called.
//
//*****************************************************************************
void
am_util_faultisr_collect_data(uint32_t u32IsrSP)
{
    c4c0:	b500      	push	{lr}
    c4c2:	b093      	sub	sp, #76	; 0x4c
    volatile am_fault_t sFaultData;
    am_hal_mcuctrl_fault_t sHalFaultData = {0};
    c4c4:	2300      	movs	r3, #0
    // a breakpoint at the end of the routine.  If the printing is not used,
    // we'll get a compiler warning; so to avoid that warning, we'll use it
    // in a dummy assignment here.
    //
    sFaultData.u32CFSR = u32Mask;       // Avoid compiler warning
    sFaultData.u32CFSR = AM_REGVAL(AM_REG_SYSCTRL_CFSR_O);
    c4c6:	4a2e      	ldr	r2, [pc, #184]	; (c580 <am_util_faultisr_collect_data+0xc0>)
    sFaultData.u32CFSR = u32Mask;       // Avoid compiler warning
    c4c8:	9310      	str	r3, [sp, #64]	; 0x40
    am_hal_mcuctrl_fault_t sHalFaultData = {0};
    c4ca:	9301      	str	r3, [sp, #4]
    c4cc:	9300      	str	r3, [sp, #0]
    c4ce:	9302      	str	r3, [sp, #8]
    c4d0:	9303      	str	r3, [sp, #12]
    c4d2:	9304      	str	r3, [sp, #16]
    c4d4:	9305      	str	r3, [sp, #20]
    sFaultData.u32CFSR = AM_REGVAL(AM_REG_SYSCTRL_CFSR_O);
    c4d6:	6813      	ldr	r3, [r2, #0]
    c4d8:	9310      	str	r3, [sp, #64]	; 0x40
    sFaultData.u8MMSR  = (sFaultData.u32CFSR >> 0)  & 0xff;
    c4da:	9b10      	ldr	r3, [sp, #64]	; 0x40
    c4dc:	b2db      	uxtb	r3, r3
    c4de:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
    sFaultData.u8BFSR  = (sFaultData.u32CFSR >> 8)  & 0xff;
    c4e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
    c4e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
    c4e8:	f88d 3045 	strb.w	r3, [sp, #69]	; 0x45
    sFaultData.u16UFSR = (sFaultData.u32CFSR >> 16) & 0xffff;
    c4ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
    c4ee:	0c1b      	lsrs	r3, r3, #16
    c4f0:	f8ad 3046 	strh.w	r3, [sp, #70]	; 0x46

    //
    // The address of the location that caused the fault.  e.g. if accessing an
    // invalid data location caused the fault, that address will appear here.
    //
    sFaultData.u32BFAR = AM_REGVAL(AM_REG_SYSCTRL_BFAR_O);
    c4f4:	6913      	ldr	r3, [r2, #16]
    c4f6:	930f      	str	r3, [sp, #60]	; 0x3c

    //
    // The address of the instruction that caused the fault is the stacked PC
    // if BFSR bit1 is set.
    //
    sFaultData.u32FaultAddr = (sFaultData.u8BFSR & 0x02) ? getStackedReg(6, u32IsrSP) : 0xffffffff;
    c4f8:	f89d 2045 	ldrb.w	r2, [sp, #69]	; 0x45
    c4fc:	0792      	lsls	r2, r2, #30
{
    c4fe:	4603      	mov	r3, r0
    sFaultData.u32FaultAddr = (sFaultData.u8BFSR & 0x02) ? getStackedReg(6, u32IsrSP) : 0xffffffff;
    c500:	d437      	bmi.n	c572 <am_util_faultisr_collect_data+0xb2>
    c502:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff

    //
    // Get the stacked registers.
    // Note - the address of the instruction that caused the fault is u32PC.
    //
    sFaultData.u32R0  = getStackedReg(0, u32IsrSP);
    c506:	4619      	mov	r1, r3
    c508:	2000      	movs	r0, #0
    sFaultData.u32FaultAddr = (sFaultData.u8BFSR & 0x02) ? getStackedReg(6, u32IsrSP) : 0xffffffff;
    c50a:	920e      	str	r2, [sp, #56]	; 0x38
    sFaultData.u32R0  = getStackedReg(0, u32IsrSP);
    c50c:	f7ff ffd4 	bl	c4b8 <getStackedReg>
    sFaultData.u32R1  = getStackedReg(1, u32IsrSP);
    c510:	4619      	mov	r1, r3
    sFaultData.u32R0  = getStackedReg(0, u32IsrSP);
    c512:	4602      	mov	r2, r0
    sFaultData.u32R1  = getStackedReg(1, u32IsrSP);
    c514:	2001      	movs	r0, #1
    sFaultData.u32R0  = getStackedReg(0, u32IsrSP);
    c516:	9206      	str	r2, [sp, #24]
    sFaultData.u32R1  = getStackedReg(1, u32IsrSP);
    c518:	f7ff ffce 	bl	c4b8 <getStackedReg>
    sFaultData.u32R2  = getStackedReg(2, u32IsrSP);
    c51c:	4619      	mov	r1, r3
    sFaultData.u32R1  = getStackedReg(1, u32IsrSP);
    c51e:	4602      	mov	r2, r0
    sFaultData.u32R2  = getStackedReg(2, u32IsrSP);
    c520:	2002      	movs	r0, #2
    sFaultData.u32R1  = getStackedReg(1, u32IsrSP);
    c522:	9207      	str	r2, [sp, #28]
    sFaultData.u32R2  = getStackedReg(2, u32IsrSP);
    c524:	f7ff ffc8 	bl	c4b8 <getStackedReg>
    sFaultData.u32R3  = getStackedReg(3, u32IsrSP);
    c528:	4619      	mov	r1, r3
    sFaultData.u32R2  = getStackedReg(2, u32IsrSP);
    c52a:	4602      	mov	r2, r0
    sFaultData.u32R3  = getStackedReg(3, u32IsrSP);
    c52c:	2003      	movs	r0, #3
    sFaultData.u32R2  = getStackedReg(2, u32IsrSP);
    c52e:	9208      	str	r2, [sp, #32]
    sFaultData.u32R3  = getStackedReg(3, u32IsrSP);
    c530:	f7ff ffc2 	bl	c4b8 <getStackedReg>
    sFaultData.u32R12 = getStackedReg(4, u32IsrSP);
    c534:	4619      	mov	r1, r3
    sFaultData.u32R3  = getStackedReg(3, u32IsrSP);
    c536:	4602      	mov	r2, r0
    sFaultData.u32R12 = getStackedReg(4, u32IsrSP);
    c538:	2004      	movs	r0, #4
    sFaultData.u32R3  = getStackedReg(3, u32IsrSP);
    c53a:	9209      	str	r2, [sp, #36]	; 0x24
    sFaultData.u32R12 = getStackedReg(4, u32IsrSP);
    c53c:	f7ff ffbc 	bl	c4b8 <getStackedReg>
    sFaultData.u32LR  = getStackedReg(5, u32IsrSP);
    c540:	4619      	mov	r1, r3
    sFaultData.u32R12 = getStackedReg(4, u32IsrSP);
    c542:	4602      	mov	r2, r0
    sFaultData.u32LR  = getStackedReg(5, u32IsrSP);
    c544:	2005      	movs	r0, #5
    sFaultData.u32R12 = getStackedReg(4, u32IsrSP);
    c546:	920a      	str	r2, [sp, #40]	; 0x28
    sFaultData.u32LR  = getStackedReg(5, u32IsrSP);
    c548:	f7ff ffb6 	bl	c4b8 <getStackedReg>
    c54c:	4602      	mov	r2, r0
    sFaultData.u32PC  = getStackedReg(6, u32IsrSP);
    c54e:	4619      	mov	r1, r3
    c550:	2006      	movs	r0, #6
    sFaultData.u32LR  = getStackedReg(5, u32IsrSP);
    c552:	920b      	str	r2, [sp, #44]	; 0x2c
    sFaultData.u32PC  = getStackedReg(6, u32IsrSP);
    c554:	f7ff ffb0 	bl	c4b8 <getStackedReg>
    c558:	4602      	mov	r2, r0
    sFaultData.u32PSR = getStackedReg(7, u32IsrSP);
    c55a:	4619      	mov	r1, r3
    c55c:	2007      	movs	r0, #7
    sFaultData.u32PC  = getStackedReg(6, u32IsrSP);
    c55e:	920c      	str	r2, [sp, #48]	; 0x30
    sFaultData.u32PSR = getStackedReg(7, u32IsrSP);
    c560:	f7ff ffaa 	bl	c4b8 <getStackedReg>

    //
    // Use the HAL MCUCTRL functions to read the fault data.
    //
#if AM_APOLLO3_MCUCTRL
    am_hal_mcuctrl_info_get(AM_HAL_MCUCTRL_INFO_FAULT_STATUS, &sHalFaultData);
    c564:	4669      	mov	r1, sp
    sFaultData.u32PSR = getStackedReg(7, u32IsrSP);
    c566:	4603      	mov	r3, r0
    am_hal_mcuctrl_info_get(AM_HAL_MCUCTRL_INFO_FAULT_STATUS, &sHalFaultData);
    c568:	2002      	movs	r0, #2
    sFaultData.u32PSR = getStackedReg(7, u32IsrSP);
    c56a:	930d      	str	r3, [sp, #52]	; 0x34
    am_hal_mcuctrl_info_get(AM_HAL_MCUCTRL_INFO_FAULT_STATUS, &sHalFaultData);
    c56c:	f003 fa32 	bl	f9d4 <am_hal_mcuctrl_info_get>
    c570:	e7fe      	b.n	c570 <am_util_faultisr_collect_data+0xb0>
    sFaultData.u32FaultAddr = (sFaultData.u8BFSR & 0x02) ? getStackedReg(6, u32IsrSP) : 0xffffffff;
    c572:	4601      	mov	r1, r0
    c574:	2006      	movs	r0, #6
    c576:	f7ff ff9f 	bl	c4b8 <getStackedReg>
    c57a:	4602      	mov	r2, r0
    c57c:	e7c3      	b.n	c506 <am_util_faultisr_collect_data+0x46>
    c57e:	bf00      	nop
    c580:	e000ed28 	.word	0xe000ed28

0000c584 <uint64_to_str>:
// written).
//
//*****************************************************************************
static int
uint64_to_str(uint64_t ui64Val, char *pcBuf)
{
    c584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c588:	b095      	sub	sp, #84	; 0x54
    c58a:	ae0d      	add	r6, sp, #52	; 0x34
    c58c:	4604      	mov	r4, r0
        //
        // Get modulus
        //
        uMod = ui64Val - (u64Tmp * 10);

        tbuf[ix++] = uMod + '0';
    c58e:	2001      	movs	r0, #1
{
    c590:	460d      	mov	r5, r1
    c592:	4696      	mov	lr, r2
    c594:	4637      	mov	r7, r6
    c596:	4684      	mov	ip, r0
    c598:	e008      	b.n	c5ac <uint64_to_str+0x28>
        tbuf[ix++] = uMod + '0';
    c59a:	703a      	strb	r2, [r7, #0]
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    c59c:	461c      	mov	r4, r3
    c59e:	2500      	movs	r5, #0
        ui64Val = u64Tmp;
    } while ( ui64Val );
    c5a0:	2b00      	cmp	r3, #0
    c5a2:	f000 8087 	beq.w	c6b4 <uint64_to_str+0x130>
    c5a6:	f10c 0c01 	add.w	ip, ip, #1
    c5aa:	3701      	adds	r7, #1
        q32 = (ui32Val>>1) + (ui32Val>>2);
    c5ac:	08a3      	lsrs	r3, r4, #2
    c5ae:	eb03 0354 	add.w	r3, r3, r4, lsr #1
        q32 += (q32 >> 4);
    c5b2:	eb03 1313 	add.w	r3, r3, r3, lsr #4
        q32 += (q32 >> 8);
    c5b6:	eb03 2313 	add.w	r3, r3, r3, lsr #8
        q32 += (q32 >> 16);
    c5ba:	eb03 4313 	add.w	r3, r3, r3, lsr #16
        q32 >>= 3;
    c5be:	08da      	lsrs	r2, r3, #3
        r32 = ui32Val - q32*10;
    c5c0:	eb02 0182 	add.w	r1, r2, r2, lsl #2
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    c5c4:	1da3      	adds	r3, r4, #6
    c5c6:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
    c5ca:	eb02 1313 	add.w	r3, r2, r3, lsr #4
        uMod = ui64Val - (u64Tmp * 10);
    c5ce:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    if ( ui64Val >> 32 )
    c5d2:	46aa      	mov	sl, r5
    c5d4:	f04f 0b00 	mov.w	fp, #0
        uMod = ui64Val - (u64Tmp * 10);
    c5d8:	eba4 0241 	sub.w	r2, r4, r1, lsl #1
    if ( ui64Val >> 32 )
    c5dc:	ea5a 010b 	orrs.w	r1, sl, fp
        tbuf[ix++] = uMod + '0';
    c5e0:	f102 0230 	add.w	r2, r2, #48	; 0x30
    if ( ui64Val >> 32 )
    c5e4:	d0d9      	beq.n	c59a <uint64_to_str+0x16>
        q64 = (ui64Val>>1) + (ui64Val>>2);
    c5e6:	08a3      	lsrs	r3, r4, #2
    c5e8:	ea43 7385 	orr.w	r3, r3, r5, lsl #30
    c5ec:	9306      	str	r3, [sp, #24]
    c5ee:	08ab      	lsrs	r3, r5, #2
    c5f0:	9307      	str	r3, [sp, #28]
    c5f2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    c5f6:	086b      	lsrs	r3, r5, #1
    c5f8:	ea4f 0234 	mov.w	r2, r4, rrx
    c5fc:	1880      	adds	r0, r0, r2
    c5fe:	4159      	adcs	r1, r3
    c600:	460b      	mov	r3, r1
        q64 += (q64 >> 4);
    c602:	0901      	lsrs	r1, r0, #4
    c604:	ea41 7103 	orr.w	r1, r1, r3, lsl #28
    c608:	9100      	str	r1, [sp, #0]
    c60a:	0919      	lsrs	r1, r3, #4
    c60c:	9101      	str	r1, [sp, #4]
        q64 = (ui64Val>>1) + (ui64Val>>2);
    c60e:	4602      	mov	r2, r0
        q64 += (q64 >> 4);
    c610:	e9dd 0100 	ldrd	r0, r1, [sp]
    c614:	1880      	adds	r0, r0, r2
    c616:	4159      	adcs	r1, r3
    c618:	460b      	mov	r3, r1
        q64 += (q64 >> 8);
    c61a:	0a01      	lsrs	r1, r0, #8
    c61c:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
    c620:	9102      	str	r1, [sp, #8]
    c622:	0a19      	lsrs	r1, r3, #8
    c624:	9103      	str	r1, [sp, #12]
        q64 += (q64 >> 4);
    c626:	4602      	mov	r2, r0
        q64 += (q64 >> 8);
    c628:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    c62c:	1880      	adds	r0, r0, r2
    c62e:	4159      	adcs	r1, r3
    c630:	460b      	mov	r3, r1
        q64 += (q64 >> 16);
    c632:	0c01      	lsrs	r1, r0, #16
    c634:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    c638:	9104      	str	r1, [sp, #16]
    c63a:	0c19      	lsrs	r1, r3, #16
    c63c:	9105      	str	r1, [sp, #20]
        q64 += (q64 >> 8);
    c63e:	4602      	mov	r2, r0
        q64 += (q64 >> 16);
    c640:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    c644:	1880      	adds	r0, r0, r2
    c646:	4159      	adcs	r1, r3
        q64 += (q64 >> 32);
    c648:	910a      	str	r1, [sp, #40]	; 0x28
    c64a:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
        q64 += (q64 >> 16);
    c64e:	4602      	mov	r2, r0
    c650:	460b      	mov	r3, r1
        q64 += (q64 >> 32);
    c652:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    c656:	1880      	adds	r0, r0, r2
    c658:	4159      	adcs	r1, r3
        q64 >>= 3;
    c65a:	ea4f 08d0 	mov.w	r8, r0, lsr #3
    c65e:	ea48 7841 	orr.w	r8, r8, r1, lsl #29
    c662:	ea4f 09d1 	mov.w	r9, r1, lsr #3
        r64 = ui64Val - q64*10;
    c666:	ea4f 0189 	mov.w	r1, r9, lsl #2
    c66a:	ea4f 0288 	mov.w	r2, r8, lsl #2
    c66e:	ea41 7398 	orr.w	r3, r1, r8, lsr #30
    c672:	eb12 0208 	adds.w	r2, r2, r8
    c676:	eb43 0309 	adc.w	r3, r3, r9
    c67a:	1892      	adds	r2, r2, r2
    c67c:	415b      	adcs	r3, r3
        return q64 + ((r64 + 6) >> 4);
    c67e:	1da0      	adds	r0, r4, #6
    c680:	f145 0100 	adc.w	r1, r5, #0
    c684:	1a82      	subs	r2, r0, r2
    c686:	eb61 0303 	sbc.w	r3, r1, r3
    c68a:	0911      	lsrs	r1, r2, #4
    c68c:	ea41 7103 	orr.w	r1, r1, r3, lsl #28
    c690:	091b      	lsrs	r3, r3, #4
    c692:	9108      	str	r1, [sp, #32]
    c694:	9309      	str	r3, [sp, #36]	; 0x24
    c696:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    c69a:	eb12 0208 	adds.w	r2, r2, r8
        uMod = ui64Val - (u64Tmp * 10);
    c69e:	eb02 0182 	add.w	r1, r2, r2, lsl #2
    c6a2:	eba4 0141 	sub.w	r1, r4, r1, lsl #1
        return q64 + ((r64 + 6) >> 4);
    c6a6:	eb43 0309 	adc.w	r3, r3, r9
        tbuf[ix++] = uMod + '0';
    c6aa:	3130      	adds	r1, #48	; 0x30
    c6ac:	7039      	strb	r1, [r7, #0]
    c6ae:	4614      	mov	r4, r2
    c6b0:	461d      	mov	r5, r3
    c6b2:	e778      	b.n	c5a6 <uint64_to_str+0x22>
    c6b4:	4660      	mov	r0, ip
    iNumDig = ix;

    //
    // Now, reverse the buffer when saving to the caller's buffer.
    //
    if ( pcBuf )
    c6b6:	f1be 0f00 	cmp.w	lr, #0
    c6ba:	d00b      	beq.n	c6d4 <uint64_to_str+0x150>
    c6bc:	1833      	adds	r3, r6, r0
    c6be:	f10e 32ff 	add.w	r2, lr, #4294967295	; 0xffffffff
    {
        while ( ix-- )
        {
            *pcBuf++ = tbuf[ix];
    c6c2:	f813 1d01 	ldrb.w	r1, [r3, #-1]!
    c6c6:	f802 1f01 	strb.w	r1, [r2, #1]!
        while ( ix-- )
    c6ca:	429e      	cmp	r6, r3
    c6cc:	d1f9      	bne.n	c6c2 <uint64_to_str+0x13e>
        }

        //
        // Terminate the caller's buffer
        //
        *pcBuf = 0x00;
    c6ce:	2300      	movs	r3, #0
    c6d0:	f80e 3000 	strb.w	r3, [lr, r0]
    }

    return iNumDig;
}
    c6d4:	b015      	add	sp, #84	; 0x54
    c6d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c6da:	bf00      	nop

0000c6dc <am_util_stdio_printf_init>:
    g_pfnCharPrint = pfnCharPrint;
    c6dc:	4b01      	ldr	r3, [pc, #4]	; (c6e4 <am_util_stdio_printf_init+0x8>)
    c6de:	6018      	str	r0, [r3, #0]
    c6e0:	4770      	bx	lr
    c6e2:	bf00      	nop
    c6e4:	1000247c 	.word	0x1000247c

0000c6e8 <am_util_stdio_vsprintf>:
//! @return uint32_t representing the number of characters printed.
//
//******************************************************************************
uint32_t
am_util_stdio_vsprintf(char *pcBuf, const char *pcFmt, va_list pArgs)
{
    c6e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c6ec:	b0b1      	sub	sp, #196	; 0xc4
    c6ee:	4683      	mov	fp, r0
    c6f0:	9211      	str	r2, [sp, #68]	; 0x44
    char *pcStr;
    uint64_t ui64Val;
    int64_t i64Val;
    uint32_t ui32NumChars, ui32CharCnt = 0;
    c6f2:	f04f 0900 	mov.w	r9, #0
    int iWidth, iVal, iPrecision;
    uint8_t ui8CharSpecifier, ui8PadChar;
    bool bLower, bLongLong, bNeg;
    uint32_t ui32strlen = 0;

    while ( *pcFmt != 0x0 )
    c6f6:	780b      	ldrb	r3, [r1, #0]
    c6f8:	b183      	cbz	r3, c71c <am_util_stdio_vsprintf+0x34>
    {
        iPrecision = 6;             // printf() default precision for %f is 6

        if ( *pcFmt != '%' )
    c6fa:	2b25      	cmp	r3, #37	; 0x25
    c6fc:	d017      	beq.n	c72e <am_util_stdio_vsprintf+0x46>
        {
            //
            // Accumulate the string portion of the format specification.
            //
            if ( pcBuf )
    c6fe:	f1bb 0f00 	cmp.w	fp, #0
    c702:	d005      	beq.n	c710 <am_util_stdio_vsprintf+0x28>
            {
                // If '\n', convert to '\r\n'
                if ( *pcFmt == '\n'  &&  g_bTxtXlate )
    c704:	2b0a      	cmp	r3, #10
    c706:	d037      	beq.n	c778 <am_util_stdio_vsprintf+0x90>
                {
                    *pcBuf++ = '\r';
                    ++ui32CharCnt;
                }
                *pcBuf++ = *pcFmt;
    c708:	f88b 3000 	strb.w	r3, [fp]
    c70c:	f10b 0b01 	add.w	fp, fp, #1
            }

            ++pcFmt;
    c710:	3101      	adds	r1, #1
    while ( *pcFmt != 0x0 )
    c712:	780b      	ldrb	r3, [r1, #0]
            ++ui32CharCnt;
    c714:	f109 0901 	add.w	r9, r9, #1
    while ( *pcFmt != 0x0 )
    c718:	2b00      	cmp	r3, #0
    c71a:	d1ee      	bne.n	c6fa <am_util_stdio_vsprintf+0x12>
    } // while ()

    //
    // Terminate the string
    //
    if ( pcBuf )
    c71c:	f1bb 0f00 	cmp.w	fp, #0
    c720:	d001      	beq.n	c726 <am_util_stdio_vsprintf+0x3e>
    {
        *pcBuf = 0x0;
    c722:	f88b 3000 	strb.w	r3, [fp]
    }

    return (ui32CharCnt);
}
    c726:	4648      	mov	r0, r9
    c728:	b031      	add	sp, #196	; 0xc4
    c72a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        if ( *pcFmt == '0' )
    c72e:	784a      	ldrb	r2, [r1, #1]
    c730:	2a30      	cmp	r2, #48	; 0x30
    c732:	d039      	beq.n	c7a8 <am_util_stdio_vsprintf+0xc0>
        ++pcFmt;
    c734:	1c4c      	adds	r4, r1, #1
        ui8PadChar = ' ';
    c736:	2620      	movs	r6, #32
    if ( *pcStr == '-')
    c738:	2a2d      	cmp	r2, #45	; 0x2d
    c73a:	d02a      	beq.n	c792 <am_util_stdio_vsprintf+0xaa>
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    c73c:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
    c740:	2b09      	cmp	r3, #9
    c742:	d835      	bhi.n	c7b0 <am_util_stdio_vsprintf+0xc8>
    uint32_t ui32Val = 0, uCnt = 0;
    c744:	2100      	movs	r1, #0
    bool bNeg = false;
    c746:	468e      	mov	lr, r1
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    c748:	4620      	mov	r0, r4
        bNeg = true;
    c74a:	2300      	movs	r3, #0
        ui32Val *= 10;
    c74c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
        ui32Val += (*pcStr - '0');
    c750:	eb02 0543 	add.w	r5, r2, r3, lsl #1
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    c754:	f810 2f01 	ldrb.w	r2, [r0, #1]!
    c758:	f1a2 0730 	sub.w	r7, r2, #48	; 0x30
    c75c:	2f09      	cmp	r7, #9
        ++uCnt;
    c75e:	f101 0101 	add.w	r1, r1, #1
        ui32Val += (*pcStr - '0');
    c762:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    c766:	d9f1      	bls.n	c74c <am_util_stdio_vsprintf+0x64>
    c768:	440c      	add	r4, r1
    return bNeg ? -ui32Val : ui32Val;
    c76a:	f1be 0f00 	cmp.w	lr, #0
    c76e:	f040 858d 	bne.w	d28c <am_util_stdio_vsprintf+0xba4>
    c772:	461d      	mov	r5, r3
    c774:	7822      	ldrb	r2, [r4, #0]
    c776:	e01d      	b.n	c7b4 <am_util_stdio_vsprintf+0xcc>
                if ( *pcFmt == '\n'  &&  g_bTxtXlate )
    c778:	4a89      	ldr	r2, [pc, #548]	; (c9a0 <am_util_stdio_vsprintf+0x2b8>)
    c77a:	7812      	ldrb	r2, [r2, #0]
    c77c:	2a00      	cmp	r2, #0
    c77e:	d0c3      	beq.n	c708 <am_util_stdio_vsprintf+0x20>
                    *pcBuf++ = '\r';
    c780:	230d      	movs	r3, #13
    c782:	f88b 3000 	strb.w	r3, [fp]
    c786:	780b      	ldrb	r3, [r1, #0]
                    ++ui32CharCnt;
    c788:	f109 0901 	add.w	r9, r9, #1
                    *pcBuf++ = '\r';
    c78c:	f10b 0b01 	add.w	fp, fp, #1
    c790:	e7ba      	b.n	c708 <am_util_stdio_vsprintf+0x20>
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    c792:	7862      	ldrb	r2, [r4, #1]
    c794:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
    c798:	2b09      	cmp	r3, #9
        pcStr++;
    c79a:	f104 0001 	add.w	r0, r4, #1
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    c79e:	f200 8463 	bhi.w	d068 <am_util_stdio_vsprintf+0x980>
        uCnt++;
    c7a2:	2101      	movs	r1, #1
        bNeg = true;
    c7a4:	468e      	mov	lr, r1
    c7a6:	e7d0      	b.n	c74a <am_util_stdio_vsprintf+0x62>
    c7a8:	788a      	ldrb	r2, [r1, #2]
            ++pcFmt;
    c7aa:	1c8c      	adds	r4, r1, #2
            ui8PadChar = '0';
    c7ac:	2630      	movs	r6, #48	; 0x30
    c7ae:	e7c3      	b.n	c738 <am_util_stdio_vsprintf+0x50>
    c7b0:	7822      	ldrb	r2, [r4, #0]
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    c7b2:	2500      	movs	r5, #0
        if ( ( *pcFmt != 's' )  &&  ( iWidth < 0 ) )
    c7b4:	2a73      	cmp	r2, #115	; 0x73
    c7b6:	f000 82df 	beq.w	cd78 <am_util_stdio_vsprintf+0x690>
    c7ba:	ea85 77e5 	eor.w	r7, r5, r5, asr #31
        if (*pcFmt == '.')
    c7be:	2a2e      	cmp	r2, #46	; 0x2e
    c7c0:	eba7 77e5 	sub.w	r7, r7, r5, asr #31
    c7c4:	f000 8289 	beq.w	ccda <am_util_stdio_vsprintf+0x5f2>
        iPrecision = 6;             // printf() default precision for %f is 6
    c7c8:	f04f 0806 	mov.w	r8, #6
        if ( *pcFmt == 'l' )
    c7cc:	2a6c      	cmp	r2, #108	; 0x6c
    c7ce:	f000 827e 	beq.w	ccce <am_util_stdio_vsprintf+0x5e6>
        switch ( *pcFmt )
    c7d2:	f1a2 0346 	sub.w	r3, r2, #70	; 0x46
    c7d6:	2b32      	cmp	r3, #50	; 0x32
    c7d8:	f200 826f 	bhi.w	ccba <am_util_stdio_vsprintf+0x5d2>
    c7dc:	e8df f013 	tbh	[pc, r3, lsl #1]
    c7e0:	026d0088 	.word	0x026d0088
    c7e4:	026d026d 	.word	0x026d026d
    c7e8:	026d026d 	.word	0x026d026d
    c7ec:	026d026d 	.word	0x026d026d
    c7f0:	026d026d 	.word	0x026d026d
    c7f4:	026d026d 	.word	0x026d026d
    c7f8:	026d026d 	.word	0x026d026d
    c7fc:	026d026d 	.word	0x026d026d
    c800:	026d026d 	.word	0x026d026d
    c804:	026d0033 	.word	0x026d0033
    c808:	026d026d 	.word	0x026d026d
    c80c:	026d026d 	.word	0x026d026d
    c810:	026d026d 	.word	0x026d026d
    c814:	026d026d 	.word	0x026d026d
    c818:	00a8026d 	.word	0x00a8026d
    c81c:	026d00b7 	.word	0x026d00b7
    c820:	026d0088 	.word	0x026d0088
    c824:	00b7026d 	.word	0x00b7026d
    c828:	026d026d 	.word	0x026d026d
    c82c:	026d026d 	.word	0x026d026d
    c830:	026d026d 	.word	0x026d026d
    c834:	026d026d 	.word	0x026d026d
    c838:	02cb026d 	.word	0x02cb026d
    c83c:	01a4026d 	.word	0x01a4026d
    c840:	026d026d 	.word	0x026d026d
    c844:	01a1      	.short	0x01a1
        bLower = bLongLong = false;
    c846:	f04f 0800 	mov.w	r8, #0
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    c84a:	9911      	ldr	r1, [sp, #68]	; 0x44
    c84c:	460b      	mov	r3, r1
                                      va_arg(pArgs, uint32_t);
    c84e:	3304      	adds	r3, #4
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    c850:	680a      	ldr	r2, [r1, #0]
                                      va_arg(pArgs, uint32_t);
    c852:	9311      	str	r3, [sp, #68]	; 0x44
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    c854:	2300      	movs	r3, #0
                if ( iWidth )
    c856:	b365      	cbz	r5, c8b2 <am_util_stdio_vsprintf+0x1ca>
    int iDigits = ui64Val ? 0 : 1;
    c858:	ea52 0103 	orrs.w	r1, r2, r3
    c85c:	bf0c      	ite	eq
    c85e:	f04f 0e01 	moveq.w	lr, #1
    c862:	f04f 0e00 	movne.w	lr, #0
    while ( ui64Val )
    c866:	ea52 0103 	orrs.w	r1, r2, r3
    c86a:	d00d      	beq.n	c888 <am_util_stdio_vsprintf+0x1a0>
    c86c:	4610      	mov	r0, r2
    c86e:	4619      	mov	r1, r3
        ui64Val >>= 4;
    c870:	0905      	lsrs	r5, r0, #4
    c872:	ea45 7501 	orr.w	r5, r5, r1, lsl #28
    c876:	ea4f 1c11 	mov.w	ip, r1, lsr #4
    c87a:	4628      	mov	r0, r5
    c87c:	4661      	mov	r1, ip
    while ( ui64Val )
    c87e:	ea50 0501 	orrs.w	r5, r0, r1
        ++iDigits;
    c882:	f10e 0e01 	add.w	lr, lr, #1
    while ( ui64Val )
    c886:	d1f3      	bne.n	c870 <am_util_stdio_vsprintf+0x188>
                    iWidth -= ndigits_in_hex(ui64Val);
    c888:	eba7 070e 	sub.w	r7, r7, lr
    if ( i32NumChars <= 0 )
    c88c:	2f00      	cmp	r7, #0
    c88e:	f340 838e 	ble.w	cfae <am_util_stdio_vsprintf+0x8c6>
    while ( i32NumChars-- )
    c892:	1e79      	subs	r1, r7, #1
        if ( pcBuf )
    c894:	f1bb 0f00 	cmp.w	fp, #0
    c898:	f000 838a 	beq.w	cfb0 <am_util_stdio_vsprintf+0x8c8>
    c89c:	4658      	mov	r0, fp
            *pcBuf++ = cPadChar;
    c89e:	f800 6b01 	strb.w	r6, [r0], #1
    while ( i32NumChars-- )
    c8a2:	3901      	subs	r1, #1
    c8a4:	1c4f      	adds	r7, r1, #1
    c8a6:	eba0 050b 	sub.w	r5, r0, fp
    c8aa:	d1f8      	bne.n	c89e <am_util_stdio_vsprintf+0x1b6>
    c8ac:	462f      	mov	r7, r5
                    pcBuf += pcBuf ? iWidth : 0;
    c8ae:	44ab      	add	fp, r5
                    ui32CharCnt += iWidth;
    c8b0:	44b9      	add	r9, r7
    if ( ui64Val == 0 )
    c8b2:	ea52 0103 	orrs.w	r1, r2, r3
    c8b6:	f040 8234 	bne.w	cd22 <am_util_stdio_vsprintf+0x63a>
        tbuf[ix++] = '0';   // Print a '0'
    c8ba:	f04f 0330 	mov.w	r3, #48	; 0x30
    c8be:	f88d 30ac 	strb.w	r3, [sp, #172]	; 0xac
    if (pcBuf)
    c8c2:	2501      	movs	r5, #1
    c8c4:	f1bb 0f00 	cmp.w	fp, #0
    c8c8:	f000 8251 	beq.w	cd6e <am_util_stdio_vsprintf+0x686>
    c8cc:	4629      	mov	r1, r5
        while (ix--)
    c8ce:	2600      	movs	r6, #0
    c8d0:	af2b      	add	r7, sp, #172	; 0xac
    c8d2:	187b      	adds	r3, r7, r1
    c8d4:	f10b 32ff 	add.w	r2, fp, #4294967295	; 0xffffffff
            *pcBuf++ = tbuf[ix];
    c8d8:	f813 1d01 	ldrb.w	r1, [r3, #-1]!
    c8dc:	f802 1f01 	strb.w	r1, [r2, #1]!
        while (ix--)
    c8e0:	42bb      	cmp	r3, r7
    c8e2:	d1f9      	bne.n	c8d8 <am_util_stdio_vsprintf+0x1f0>
        *pcBuf = 0;
    c8e4:	445e      	add	r6, fp
    c8e6:	2300      	movs	r3, #0
                    pcBuf += iVal;
    c8e8:	44ab      	add	fp, r5
        *pcBuf = 0;
    c8ea:	7073      	strb	r3, [r6, #1]
                ui32CharCnt += iVal;
    c8ec:	44a9      	add	r9, r5
                break;
    c8ee:	e01d      	b.n	c92c <am_util_stdio_vsprintf+0x244>
                if ( pcBuf )
    c8f0:	f1bb 0f00 	cmp.w	fp, #0
    c8f4:	d01a      	beq.n	c92c <am_util_stdio_vsprintf+0x244>
                    float fValue = va_arg(pArgs, double);
    c8f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    c8f8:	3307      	adds	r3, #7
    c8fa:	f023 0307 	bic.w	r3, r3, #7
    c8fe:	e9d3 0100 	ldrd	r0, r1, [r3]
    c902:	3308      	adds	r3, #8
    c904:	9311      	str	r3, [sp, #68]	; 0x44
    c906:	f7ff fbfb 	bl	c100 <__aeabi_d2f>
    c90a:	ee07 0a90 	vmov	s15, r0
    if (fValue == 0.0f)
    c90e:	eef5 7a40 	vcmp.f32	s15, #0.0
                    *(uint32_t*)pcBuf = 20;
    c912:	2314      	movs	r3, #20
    if (fValue == 0.0f)
    c914:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                    *(uint32_t*)pcBuf = 20;
    c918:	f8cb 3000 	str.w	r3, [fp]
    if (fValue == 0.0f)
    c91c:	f040 8367 	bne.w	cfee <am_util_stdio_vsprintf+0x906>
        *(uint32_t*)pcBuf = 0x00 << 24 | ('0' << 16) | ('.' << 8) | ('0' << 0);
    c920:	4b20      	ldr	r3, [pc, #128]	; (c9a4 <am_util_stdio_vsprintf+0x2bc>)
    c922:	f8cb 3000 	str.w	r3, [fp]
    c926:	2103      	movs	r1, #3
                    ui32CharCnt += iVal;
    c928:	4489      	add	r9, r1
                    pcBuf += iVal;
    c92a:	448b      	add	fp, r1
        ++pcFmt;
    c92c:	1c61      	adds	r1, r4, #1
    c92e:	e6e2      	b.n	c6f6 <am_util_stdio_vsprintf+0xe>
                ui8CharSpecifier = va_arg(pArgs, uint32_t);
    c930:	9a11      	ldr	r2, [sp, #68]	; 0x44
    c932:	4613      	mov	r3, r2
    c934:	3304      	adds	r3, #4
    c936:	7812      	ldrb	r2, [r2, #0]
                if ( pcBuf )
    c938:	f1bb 0f00 	cmp.w	fp, #0
    c93c:	d003      	beq.n	c946 <am_util_stdio_vsprintf+0x25e>
                    *pcBuf++ = ui8CharSpecifier;
    c93e:	f88b 2000 	strb.w	r2, [fp]
    c942:	f10b 0b01 	add.w	fp, fp, #1
                ++ui32CharCnt;
    c946:	f109 0901 	add.w	r9, r9, #1
                ui8CharSpecifier = va_arg(pArgs, uint32_t);
    c94a:	9311      	str	r3, [sp, #68]	; 0x44
                break;
    c94c:	e7ee      	b.n	c92c <am_util_stdio_vsprintf+0x244>
                i64Val = bLongLong ? va_arg(pArgs, int64_t) :
    c94e:	9a11      	ldr	r2, [sp, #68]	; 0x44
    c950:	4613      	mov	r3, r2
    c952:	6810      	ldr	r0, [r2, #0]
                                     va_arg(pArgs, int32_t);
    c954:	3304      	adds	r3, #4
    c956:	9311      	str	r3, [sp, #68]	; 0x44
                i64Val = bLongLong ? va_arg(pArgs, int64_t) :
    c958:	17c1      	asrs	r1, r0, #31
                if ( i64Val < 0 )
    c95a:	2800      	cmp	r0, #0
    c95c:	f171 0300 	sbcs.w	r3, r1, #0
    c960:	f2c0 8328 	blt.w	cfb4 <am_util_stdio_vsprintf+0x8cc>
                    ui64Val = i64Val;
    c964:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
                if ( iWidth )
    c968:	2d00      	cmp	r5, #0
    c96a:	f000 80ce 	beq.w	cb0a <am_util_stdio_vsprintf+0x422>
    int iNDigits = ui64Val ? 0 : 1;
    c96e:	4603      	mov	r3, r0
    c970:	430b      	orrs	r3, r1
    c972:	bf0c      	ite	eq
    c974:	2501      	moveq	r5, #1
    c976:	2500      	movne	r5, #0
    return ndigits_in_u64((uint64_t) i64Val);
    c978:	460b      	mov	r3, r1
    while ( ui64Val )
    c97a:	4301      	orrs	r1, r0
    return ndigits_in_u64((uint64_t) i64Val);
    c97c:	4602      	mov	r2, r0
                    bNeg = false;
    c97e:	bf18      	it	ne
    c980:	f04f 0a00 	movne.w	sl, #0
    while ( ui64Val )
    c984:	f000 842d 	beq.w	d1e2 <am_util_stdio_vsprintf+0xafa>
                    bNeg = false;
    c988:	9420      	str	r4, [sp, #128]	; 0x80
    c98a:	9621      	str	r6, [sp, #132]	; 0x84
    c98c:	9722      	str	r7, [sp, #136]	; 0x88
    c98e:	46ae      	mov	lr, r5
    c990:	f8cd a08c 	str.w	sl, [sp, #140]	; 0x8c
    c994:	f8cd 9090 	str.w	r9, [sp, #144]	; 0x90
    c998:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
    c99c:	e00b      	b.n	c9b6 <am_util_stdio_vsprintf+0x2ce>
    c99e:	bf00      	nop
    c9a0:	10001b18 	.word	0x10001b18
    c9a4:	00302e30 	.word	0x00302e30
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    c9a8:	4652      	mov	r2, sl
    c9aa:	2300      	movs	r3, #0
    while ( ui64Val )
    c9ac:	ea52 0103 	orrs.w	r1, r2, r3
        ++iNDigits;
    c9b0:	f10e 0e01 	add.w	lr, lr, #1
    while ( ui64Val )
    c9b4:	d075      	beq.n	caa2 <am_util_stdio_vsprintf+0x3ba>
        q64 = (ui64Val>>1) + (ui64Val>>2);
    c9b6:	0891      	lsrs	r1, r2, #2
    c9b8:	ea41 7183 	orr.w	r1, r1, r3, lsl #30
    c9bc:	910a      	str	r1, [sp, #40]	; 0x28
    c9be:	0899      	lsrs	r1, r3, #2
    c9c0:	910b      	str	r1, [sp, #44]	; 0x2c
    c9c2:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
    c9c6:	0859      	lsrs	r1, r3, #1
    c9c8:	ea4f 0032 	mov.w	r0, r2, rrx
    c9cc:	1836      	adds	r6, r6, r0
    c9ce:	414f      	adcs	r7, r1
    c9d0:	4630      	mov	r0, r6
        q64 += (q64 >> 4);
    c9d2:	0936      	lsrs	r6, r6, #4
    c9d4:	ea46 7607 	orr.w	r6, r6, r7, lsl #28
    c9d8:	9604      	str	r6, [sp, #16]
    c9da:	093e      	lsrs	r6, r7, #4
    c9dc:	9605      	str	r6, [sp, #20]
        q64 = (ui64Val>>1) + (ui64Val>>2);
    c9de:	4639      	mov	r1, r7
        q64 += (q64 >> 4);
    c9e0:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
    c9e4:	1836      	adds	r6, r6, r0
    c9e6:	414f      	adcs	r7, r1
    c9e8:	4630      	mov	r0, r6
        q64 += (q64 >> 8);
    c9ea:	0a36      	lsrs	r6, r6, #8
    c9ec:	ea46 6607 	orr.w	r6, r6, r7, lsl #24
    c9f0:	9606      	str	r6, [sp, #24]
    c9f2:	0a3e      	lsrs	r6, r7, #8
    c9f4:	9607      	str	r6, [sp, #28]
        q64 += (q64 >> 4);
    c9f6:	4639      	mov	r1, r7
        q64 += (q64 >> 8);
    c9f8:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
    c9fc:	1836      	adds	r6, r6, r0
    c9fe:	414f      	adcs	r7, r1
        q64 += (q64 >> 16);
    ca00:	ea4f 4816 	mov.w	r8, r6, lsr #16
    ca04:	ea48 4807 	orr.w	r8, r8, r7, lsl #16
    ca08:	eb16 0008 	adds.w	r0, r6, r8
    ca0c:	ea4f 4917 	mov.w	r9, r7, lsr #16
    ca10:	eb47 0109 	adc.w	r1, r7, r9
        q64 += (q64 >> 32);
    ca14:	2600      	movs	r6, #0
    ca16:	910e      	str	r1, [sp, #56]	; 0x38
    ca18:	960f      	str	r6, [sp, #60]	; 0x3c
    ca1a:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	; 0x38
        q32 = (ui32Val>>1) + (ui32Val>>2);
    ca1e:	ea4f 0c92 	mov.w	ip, r2, lsr #2
        q64 += (q64 >> 32);
    ca22:	1836      	adds	r6, r6, r0
        q32 = (ui32Val>>1) + (ui32Val>>2);
    ca24:	eb0c 0c52 	add.w	ip, ip, r2, lsr #1
        q64 >>= 3;
    ca28:	ea4f 04d6 	mov.w	r4, r6, lsr #3
        q32 += (q32 >> 4);
    ca2c:	eb0c 1c1c 	add.w	ip, ip, ip, lsr #4
    if ( ui64Val >> 32 )
    ca30:	f04f 0600 	mov.w	r6, #0
        q64 += (q64 >> 32);
    ca34:	414f      	adcs	r7, r1
    if ( ui64Val >> 32 )
    ca36:	9314      	str	r3, [sp, #80]	; 0x50
        q32 += (q32 >> 8);
    ca38:	eb0c 2c1c 	add.w	ip, ip, ip, lsr #8
    if ( ui64Val >> 32 )
    ca3c:	9615      	str	r6, [sp, #84]	; 0x54
        q64 >>= 3;
    ca3e:	ea44 7447 	orr.w	r4, r4, r7, lsl #29
    ca42:	08fd      	lsrs	r5, r7, #3
        q32 += (q32 >> 16);
    ca44:	eb0c 4c1c 	add.w	ip, ip, ip, lsr #16
    ca48:	e9dd 6714 	ldrd	r6, r7, [sp, #80]	; 0x50
        r64 = ui64Val - q64*10;
    ca4c:	ea4f 0b85 	mov.w	fp, r5, lsl #2
        q32 >>= 3;
    ca50:	ea4f 0cdc 	mov.w	ip, ip, lsr #3
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    ca54:	f102 0a06 	add.w	sl, r2, #6
        r64 = ui64Val - q64*10;
    ca58:	ea4b 7194 	orr.w	r1, fp, r4, lsr #30
        r32 = ui32Val - q32*10;
    ca5c:	eb0c 0b8c 	add.w	fp, ip, ip, lsl #2
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    ca60:	ebaa 0a4b 	sub.w	sl, sl, fp, lsl #1
    ca64:	433e      	orrs	r6, r7
        r64 = ui64Val - q64*10;
    ca66:	ea4f 0084 	mov.w	r0, r4, lsl #2
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    ca6a:	eb0c 1a1a 	add.w	sl, ip, sl, lsr #4
    ca6e:	d09b      	beq.n	c9a8 <am_util_stdio_vsprintf+0x2c0>
        r64 = ui64Val - q64*10;
    ca70:	1900      	adds	r0, r0, r4
    ca72:	4169      	adcs	r1, r5
    ca74:	1800      	adds	r0, r0, r0
    ca76:	4149      	adcs	r1, r1
        return q64 + ((r64 + 6) >> 4);
    ca78:	3206      	adds	r2, #6
    ca7a:	f143 0300 	adc.w	r3, r3, #0
    ca7e:	1a12      	subs	r2, r2, r0
    ca80:	eb63 0301 	sbc.w	r3, r3, r1
    ca84:	0911      	lsrs	r1, r2, #4
    ca86:	ea41 7103 	orr.w	r1, r1, r3, lsl #28
    ca8a:	091b      	lsrs	r3, r3, #4
    ca8c:	9118      	str	r1, [sp, #96]	; 0x60
    ca8e:	9319      	str	r3, [sp, #100]	; 0x64
    ca90:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
    ca94:	1912      	adds	r2, r2, r4
    ca96:	416b      	adcs	r3, r5
    while ( ui64Val )
    ca98:	ea52 0103 	orrs.w	r1, r2, r3
        ++iNDigits;
    ca9c:	f10e 0e01 	add.w	lr, lr, #1
    while ( ui64Val )
    caa0:	d189      	bne.n	c9b6 <am_util_stdio_vsprintf+0x2ce>
    caa2:	9f22      	ldr	r7, [sp, #136]	; 0x88
    caa4:	f8dd a08c 	ldr.w	sl, [sp, #140]	; 0x8c
    caa8:	9e21      	ldr	r6, [sp, #132]	; 0x84
    caaa:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
    caae:	e9cd 451e 	strd	r4, r5, [sp, #120]	; 0x78
    cab2:	4675      	mov	r5, lr
    cab4:	e9cd 891c 	strd	r8, r9, [sp, #112]	; 0x70
    cab8:	9c20      	ldr	r4, [sp, #128]	; 0x80
    caba:	f8dd 9090 	ldr.w	r9, [sp, #144]	; 0x90
                    iWidth -= ndigits_in_i64(ui64Val);
    cabe:	1b7d      	subs	r5, r7, r5
                    if ( bNeg )
    cac0:	f1ba 0f00 	cmp.w	sl, #0
    cac4:	d007      	beq.n	cad6 <am_util_stdio_vsprintf+0x3ee>
                        if ( ui8PadChar == '0' )
    cac6:	2e30      	cmp	r6, #48	; 0x30
                        --iWidth;
    cac8:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
                        if ( ui8PadChar == '0' )
    cacc:	f000 836e 	beq.w	d1ac <am_util_stdio_vsprintf+0xac4>
                        --iWidth;
    cad0:	461d      	mov	r5, r3
    cad2:	f04f 0a01 	mov.w	sl, #1
    if ( i32NumChars <= 0 )
    cad6:	2d00      	cmp	r5, #0
    cad8:	f340 837e 	ble.w	d1d8 <am_util_stdio_vsprintf+0xaf0>
    while ( i32NumChars-- )
    cadc:	1e6b      	subs	r3, r5, #1
        if ( pcBuf )
    cade:	f1bb 0f00 	cmp.w	fp, #0
    cae2:	f000 8252 	beq.w	cf8a <am_util_stdio_vsprintf+0x8a2>
    cae6:	1eaa      	subs	r2, r5, #2
    cae8:	465b      	mov	r3, fp
    caea:	e000      	b.n	caee <am_util_stdio_vsprintf+0x406>
    caec:	3a01      	subs	r2, #1
            *pcBuf++ = cPadChar;
    caee:	f803 6b01 	strb.w	r6, [r3], #1
    while ( i32NumChars-- )
    caf2:	1c50      	adds	r0, r2, #1
    caf4:	eba3 010b 	sub.w	r1, r3, fp
    caf8:	d1f8      	bne.n	caec <am_util_stdio_vsprintf+0x404>
    cafa:	448b      	add	fp, r1
                    ui32CharCnt += iWidth;
    cafc:	4489      	add	r9, r1
                    if ( bNeg  &&  (ui8PadChar == ' ') )
    cafe:	f1ba 0f00 	cmp.w	sl, #0
    cb02:	d002      	beq.n	cb0a <am_util_stdio_vsprintf+0x422>
    cb04:	2e20      	cmp	r6, #32
    cb06:	f000 831b 	beq.w	d140 <am_util_stdio_vsprintf+0xa58>
                iVal = uint64_to_str(ui64Val, pcBuf);
    cb0a:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
    cb0e:	465a      	mov	r2, fp
    cb10:	f7ff fd38 	bl	c584 <uint64_to_str>
                if ( pcBuf )
    cb14:	f1bb 0f00 	cmp.w	fp, #0
    cb18:	f000 8245 	beq.w	cfa6 <am_util_stdio_vsprintf+0x8be>
                    pcBuf += iVal;
    cb1c:	4483      	add	fp, r0
                ui32CharCnt += iVal;
    cb1e:	4481      	add	r9, r0
                break;
    cb20:	e704      	b.n	c92c <am_util_stdio_vsprintf+0x244>
        switch ( *pcFmt )
    cb22:	f04f 0801 	mov.w	r8, #1
    cb26:	e690      	b.n	c84a <am_util_stdio_vsprintf+0x162>
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    cb28:	9a11      	ldr	r2, [sp, #68]	; 0x44
    cb2a:	6813      	ldr	r3, [r2, #0]
                                      va_arg(pArgs, uint32_t);
    cb2c:	3204      	adds	r2, #4
    cb2e:	9211      	str	r2, [sp, #68]	; 0x44
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    cb30:	4619      	mov	r1, r3
    cb32:	2200      	movs	r2, #0
    cb34:	e9cd 121a 	strd	r1, r2, [sp, #104]	; 0x68
                if ( iWidth )
    cb38:	2d00      	cmp	r5, #0
    cb3a:	f000 80b3 	beq.w	cca4 <am_util_stdio_vsprintf+0x5bc>
    int iNDigits = ui64Val ? 0 : 1;
    cb3e:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
    cb42:	4603      	mov	r3, r0
    cb44:	430b      	orrs	r3, r1
    while ( ui64Val )
    cb46:	4602      	mov	r2, r0
    cb48:	460b      	mov	r3, r1
    int iNDigits = ui64Val ? 0 : 1;
    cb4a:	bf0c      	ite	eq
    cb4c:	2501      	moveq	r5, #1
    cb4e:	2500      	movne	r5, #0
    while ( ui64Val )
    cb50:	ea52 0103 	orrs.w	r1, r2, r3
    cb54:	f000 8092 	beq.w	cc7c <am_util_stdio_vsprintf+0x594>
    cb58:	9420      	str	r4, [sp, #128]	; 0x80
    cb5a:	9621      	str	r6, [sp, #132]	; 0x84
    cb5c:	9722      	str	r7, [sp, #136]	; 0x88
    cb5e:	46ae      	mov	lr, r5
    cb60:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
    cb64:	f8cd b090 	str.w	fp, [sp, #144]	; 0x90
    cb68:	e006      	b.n	cb78 <am_util_stdio_vsprintf+0x490>
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    cb6a:	4652      	mov	r2, sl
    cb6c:	2300      	movs	r3, #0
    while ( ui64Val )
    cb6e:	ea52 0103 	orrs.w	r1, r2, r3
        ++iNDigits;
    cb72:	f10e 0e01 	add.w	lr, lr, #1
    while ( ui64Val )
    cb76:	d075      	beq.n	cc64 <am_util_stdio_vsprintf+0x57c>
        q64 = (ui64Val>>1) + (ui64Val>>2);
    cb78:	0891      	lsrs	r1, r2, #2
    cb7a:	ea41 7183 	orr.w	r1, r1, r3, lsl #30
    cb7e:	9108      	str	r1, [sp, #32]
    cb80:	0899      	lsrs	r1, r3, #2
    cb82:	9109      	str	r1, [sp, #36]	; 0x24
    cb84:	e9dd 6708 	ldrd	r6, r7, [sp, #32]
    cb88:	0859      	lsrs	r1, r3, #1
    cb8a:	ea4f 0032 	mov.w	r0, r2, rrx
    cb8e:	1836      	adds	r6, r6, r0
    cb90:	414f      	adcs	r7, r1
    cb92:	4630      	mov	r0, r6
        q64 += (q64 >> 4);
    cb94:	0936      	lsrs	r6, r6, #4
    cb96:	ea46 7607 	orr.w	r6, r6, r7, lsl #28
    cb9a:	9600      	str	r6, [sp, #0]
    cb9c:	093e      	lsrs	r6, r7, #4
    cb9e:	9601      	str	r6, [sp, #4]
        q64 = (ui64Val>>1) + (ui64Val>>2);
    cba0:	4639      	mov	r1, r7
        q64 += (q64 >> 4);
    cba2:	e9dd 6700 	ldrd	r6, r7, [sp]
    cba6:	1836      	adds	r6, r6, r0
    cba8:	414f      	adcs	r7, r1
    cbaa:	4630      	mov	r0, r6
        q64 += (q64 >> 8);
    cbac:	0a36      	lsrs	r6, r6, #8
    cbae:	ea46 6607 	orr.w	r6, r6, r7, lsl #24
    cbb2:	9602      	str	r6, [sp, #8]
    cbb4:	0a3e      	lsrs	r6, r7, #8
    cbb6:	9603      	str	r6, [sp, #12]
        q64 += (q64 >> 4);
    cbb8:	4639      	mov	r1, r7
        q64 += (q64 >> 8);
    cbba:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
    cbbe:	1836      	adds	r6, r6, r0
    cbc0:	414f      	adcs	r7, r1
        q64 += (q64 >> 16);
    cbc2:	ea4f 4816 	mov.w	r8, r6, lsr #16
    cbc6:	ea48 4807 	orr.w	r8, r8, r7, lsl #16
    cbca:	eb16 0008 	adds.w	r0, r6, r8
    cbce:	ea4f 4917 	mov.w	r9, r7, lsr #16
    cbd2:	eb47 0109 	adc.w	r1, r7, r9
        q64 += (q64 >> 32);
    cbd6:	2600      	movs	r6, #0
    cbd8:	910c      	str	r1, [sp, #48]	; 0x30
    cbda:	960d      	str	r6, [sp, #52]	; 0x34
    cbdc:	e9dd 670c 	ldrd	r6, r7, [sp, #48]	; 0x30
        q32 = (ui32Val>>1) + (ui32Val>>2);
    cbe0:	ea4f 0c92 	mov.w	ip, r2, lsr #2
        q64 += (q64 >> 32);
    cbe4:	1836      	adds	r6, r6, r0
        q32 = (ui32Val>>1) + (ui32Val>>2);
    cbe6:	eb0c 0c52 	add.w	ip, ip, r2, lsr #1
        q64 >>= 3;
    cbea:	ea4f 04d6 	mov.w	r4, r6, lsr #3
        q32 += (q32 >> 4);
    cbee:	eb0c 1c1c 	add.w	ip, ip, ip, lsr #4
    if ( ui64Val >> 32 )
    cbf2:	f04f 0600 	mov.w	r6, #0
        q64 += (q64 >> 32);
    cbf6:	414f      	adcs	r7, r1
    if ( ui64Val >> 32 )
    cbf8:	9312      	str	r3, [sp, #72]	; 0x48
        q32 += (q32 >> 8);
    cbfa:	eb0c 2c1c 	add.w	ip, ip, ip, lsr #8
    if ( ui64Val >> 32 )
    cbfe:	9613      	str	r6, [sp, #76]	; 0x4c
        q64 >>= 3;
    cc00:	ea44 7447 	orr.w	r4, r4, r7, lsl #29
    cc04:	08fd      	lsrs	r5, r7, #3
        q32 += (q32 >> 16);
    cc06:	eb0c 4c1c 	add.w	ip, ip, ip, lsr #16
    cc0a:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
        r64 = ui64Val - q64*10;
    cc0e:	ea4f 0b85 	mov.w	fp, r5, lsl #2
        q32 >>= 3;
    cc12:	ea4f 0cdc 	mov.w	ip, ip, lsr #3
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    cc16:	f102 0a06 	add.w	sl, r2, #6
        r64 = ui64Val - q64*10;
    cc1a:	ea4b 7194 	orr.w	r1, fp, r4, lsr #30
        r32 = ui32Val - q32*10;
    cc1e:	eb0c 0b8c 	add.w	fp, ip, ip, lsl #2
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    cc22:	ebaa 0a4b 	sub.w	sl, sl, fp, lsl #1
    cc26:	433e      	orrs	r6, r7
        r64 = ui64Val - q64*10;
    cc28:	ea4f 0084 	mov.w	r0, r4, lsl #2
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    cc2c:	eb0c 1a1a 	add.w	sl, ip, sl, lsr #4
    cc30:	d09b      	beq.n	cb6a <am_util_stdio_vsprintf+0x482>
        r64 = ui64Val - q64*10;
    cc32:	1900      	adds	r0, r0, r4
    cc34:	4169      	adcs	r1, r5
    cc36:	1800      	adds	r0, r0, r0
    cc38:	4149      	adcs	r1, r1
        return q64 + ((r64 + 6) >> 4);
    cc3a:	3206      	adds	r2, #6
    cc3c:	f143 0300 	adc.w	r3, r3, #0
    cc40:	1a12      	subs	r2, r2, r0
    cc42:	eb63 0301 	sbc.w	r3, r3, r1
    cc46:	0911      	lsrs	r1, r2, #4
    cc48:	ea41 7103 	orr.w	r1, r1, r3, lsl #28
    cc4c:	091b      	lsrs	r3, r3, #4
    cc4e:	9116      	str	r1, [sp, #88]	; 0x58
    cc50:	9317      	str	r3, [sp, #92]	; 0x5c
    cc52:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
    cc56:	1912      	adds	r2, r2, r4
    cc58:	416b      	adcs	r3, r5
    while ( ui64Val )
    cc5a:	ea52 0103 	orrs.w	r1, r2, r3
        ++iNDigits;
    cc5e:	f10e 0e01 	add.w	lr, lr, #1
    while ( ui64Val )
    cc62:	d189      	bne.n	cb78 <am_util_stdio_vsprintf+0x490>
    cc64:	e9cd 4528 	strd	r4, r5, [sp, #160]	; 0xa0
    cc68:	e9cd 8926 	strd	r8, r9, [sp, #152]	; 0x98
    cc6c:	9e21      	ldr	r6, [sp, #132]	; 0x84
    cc6e:	9f22      	ldr	r7, [sp, #136]	; 0x88
    cc70:	9c20      	ldr	r4, [sp, #128]	; 0x80
    cc72:	f8dd 908c 	ldr.w	r9, [sp, #140]	; 0x8c
    cc76:	f8dd b090 	ldr.w	fp, [sp, #144]	; 0x90
    cc7a:	4675      	mov	r5, lr
                    iWidth -= ndigits_in_u64(ui64Val);
    cc7c:	1b7d      	subs	r5, r7, r5
    if ( i32NumChars <= 0 )
    cc7e:	2d00      	cmp	r5, #0
    cc80:	f340 81ef 	ble.w	d062 <am_util_stdio_vsprintf+0x97a>
    while ( i32NumChars-- )
    cc84:	1e6b      	subs	r3, r5, #1
        if ( pcBuf )
    cc86:	f1bb 0f00 	cmp.w	fp, #0
    cc8a:	f000 81eb 	beq.w	d064 <am_util_stdio_vsprintf+0x97c>
    cc8e:	465a      	mov	r2, fp
            *pcBuf++ = cPadChar;
    cc90:	f802 6b01 	strb.w	r6, [r2], #1
    while ( i32NumChars-- )
    cc94:	3b01      	subs	r3, #1
    cc96:	1c5d      	adds	r5, r3, #1
    cc98:	eba2 010b 	sub.w	r1, r2, fp
    cc9c:	d1f8      	bne.n	cc90 <am_util_stdio_vsprintf+0x5a8>
    cc9e:	460d      	mov	r5, r1
                    pcBuf += pcBuf ? iWidth : 0;
    cca0:	448b      	add	fp, r1
                    ui32CharCnt += iWidth;
    cca2:	44a9      	add	r9, r5
                iVal = uint64_to_str(ui64Val, pcBuf);
    cca4:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
    cca8:	465a      	mov	r2, fp
    ccaa:	f7ff fc6b 	bl	c584 <uint64_to_str>
                if ( pcBuf )
    ccae:	f1bb 0f00 	cmp.w	fp, #0
    ccb2:	f43f af34 	beq.w	cb1e <am_util_stdio_vsprintf+0x436>
                    pcBuf += iVal;
    ccb6:	4483      	add	fp, r0
    ccb8:	e731      	b.n	cb1e <am_util_stdio_vsprintf+0x436>
                if ( pcBuf )
    ccba:	f1bb 0f00 	cmp.w	fp, #0
    ccbe:	d003      	beq.n	ccc8 <am_util_stdio_vsprintf+0x5e0>
                    *pcBuf++ = *pcFmt;
    ccc0:	f88b 2000 	strb.w	r2, [fp]
    ccc4:	f10b 0b01 	add.w	fp, fp, #1
                ++ui32CharCnt;
    ccc8:	f109 0901 	add.w	r9, r9, #1
                break;
    cccc:	e62e      	b.n	c92c <am_util_stdio_vsprintf+0x244>
            if ( *pcFmt == 'l' )    // "ll" (long long)
    ccce:	7862      	ldrb	r2, [r4, #1]
    ccd0:	2a6c      	cmp	r2, #108	; 0x6c
    ccd2:	f000 80c3 	beq.w	ce5c <am_util_stdio_vsprintf+0x774>
            pcFmt++;
    ccd6:	3401      	adds	r4, #1
    ccd8:	e57b      	b.n	c7d2 <am_util_stdio_vsprintf+0xea>
    if ( *pcStr == '-')
    ccda:	7862      	ldrb	r2, [r4, #1]
    ccdc:	2a2d      	cmp	r2, #45	; 0x2d
            ++pcFmt;
    ccde:	f104 0c01 	add.w	ip, r4, #1
    if ( *pcStr == '-')
    cce2:	f000 813f 	beq.w	cf64 <am_util_stdio_vsprintf+0x87c>
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    cce6:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
    ccea:	2b09      	cmp	r3, #9
    ccec:	f200 81c0 	bhi.w	d070 <am_util_stdio_vsprintf+0x988>
    uint32_t ui32Val = 0, uCnt = 0;
    ccf0:	2100      	movs	r1, #0
    bool bNeg = false;
    ccf2:	4688      	mov	r8, r1
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    ccf4:	4664      	mov	r4, ip
    bool bNeg = false;
    ccf6:	2300      	movs	r3, #0
        ui32Val *= 10;
    ccf8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
        ui32Val += (*pcStr - '0');
    ccfc:	eb02 0043 	add.w	r0, r2, r3, lsl #1
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    cd00:	f814 2f01 	ldrb.w	r2, [r4, #1]!
    cd04:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
    cd08:	f1be 0f09 	cmp.w	lr, #9
        ++uCnt;
    cd0c:	f101 0101 	add.w	r1, r1, #1
        ui32Val += (*pcStr - '0');
    cd10:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    cd14:	d9f0      	bls.n	ccf8 <am_util_stdio_vsprintf+0x610>
    return bNeg ? -ui32Val : ui32Val;
    cd16:	f1b8 0f00 	cmp.w	r8, #0
    cd1a:	f040 82bc 	bne.w	d296 <am_util_stdio_vsprintf+0xbae>
    cd1e:	4698      	mov	r8, r3
    cd20:	e1a9      	b.n	d076 <am_util_stdio_vsprintf+0x98e>
    cd22:	f1b8 0f00 	cmp.w	r8, #0
    cd26:	bf14      	ite	ne
    cd28:	f04f 0e27 	movne.w	lr, #39	; 0x27
    cd2c:	f04f 0e07 	moveq.w	lr, #7
    cd30:	f10d 07ab 	add.w	r7, sp, #171	; 0xab
    if ( ui64Val == 0 )
    cd34:	2600      	movs	r6, #0
    cd36:	e000      	b.n	cd3a <am_util_stdio_vsprintf+0x652>
        tbuf[ix++] = cCh + '0';
    cd38:	460e      	mov	r6, r1
        cCh = ui64Val & 0xf;
    cd3a:	f002 010f 	and.w	r1, r2, #15
            cCh += bLower ? 0x27 : 0x7;
    cd3e:	eb01 050e 	add.w	r5, r1, lr
        ui64Val >>= 4;
    cd42:	0910      	lsrs	r0, r2, #4
        tbuf[ix++] = cCh + '0';
    cd44:	2909      	cmp	r1, #9
    cd46:	bf88      	it	hi
    cd48:	4629      	movhi	r1, r5
        ui64Val >>= 4;
    cd4a:	ea40 7003 	orr.w	r0, r0, r3, lsl #28
    cd4e:	091d      	lsrs	r5, r3, #4
    cd50:	4602      	mov	r2, r0
    cd52:	462b      	mov	r3, r5
        tbuf[ix++] = cCh + '0';
    cd54:	3130      	adds	r1, #48	; 0x30
    while ( ui64Val )
    cd56:	ea52 0003 	orrs.w	r0, r2, r3
        tbuf[ix++] = cCh + '0';
    cd5a:	f807 1f01 	strb.w	r1, [r7, #1]!
    cd5e:	f106 0101 	add.w	r1, r6, #1
    while ( ui64Val )
    cd62:	d1e9      	bne.n	cd38 <am_util_stdio_vsprintf+0x650>
    cd64:	460d      	mov	r5, r1
    if (pcBuf)
    cd66:	f1bb 0f00 	cmp.w	fp, #0
    cd6a:	f47f adb1 	bne.w	c8d0 <am_util_stdio_vsprintf+0x1e8>
    cd6e:	f04f 0b00 	mov.w	fp, #0
                ui32CharCnt += iVal;
    cd72:	44a9      	add	r9, r5
    cd74:	e5da      	b.n	c92c <am_util_stdio_vsprintf+0x244>
        switch ( *pcFmt )
    cd76:	463d      	mov	r5, r7
                pcStr = va_arg(pArgs, char *);
    cd78:	9a11      	ldr	r2, [sp, #68]	; 0x44
    cd7a:	6817      	ldr	r7, [r2, #0]
    cd7c:	1d10      	adds	r0, r2, #4
    if ( !pcBuf )
    cd7e:	2f00      	cmp	r7, #0
    cd80:	d03b      	beq.n	cdfa <am_util_stdio_vsprintf+0x712>
    while ( *pcBuf++ )
    cd82:	7839      	ldrb	r1, [r7, #0]
    cd84:	1c7a      	adds	r2, r7, #1
    cd86:	4613      	mov	r3, r2
    cd88:	2900      	cmp	r1, #0
    cd8a:	f000 8209 	beq.w	d1a0 <am_util_stdio_vsprintf+0xab8>
    cd8e:	4694      	mov	ip, r2
    cd90:	eba3 0e07 	sub.w	lr, r3, r7
    cd94:	f813 2b01 	ldrb.w	r2, [r3], #1
    cd98:	2a00      	cmp	r2, #0
    cd9a:	d1f9      	bne.n	cd90 <am_util_stdio_vsprintf+0x6a8>
                if ( iWidth > 0 )
    cd9c:	2d00      	cmp	r5, #0
    cd9e:	4662      	mov	r2, ip
    cda0:	dd01      	ble.n	cda6 <am_util_stdio_vsprintf+0x6be>
                    if ( ui32strlen < iWidth )
    cda2:	4575      	cmp	r5, lr
    cda4:	d82d      	bhi.n	ce02 <am_util_stdio_vsprintf+0x71a>
                    if ( pcBuf )
    cda6:	f1bb 0f00 	cmp.w	fp, #0
    cdaa:	d049      	beq.n	ce40 <am_util_stdio_vsprintf+0x758>
    cdac:	4613      	mov	r3, r2
    cdae:	eba9 0707 	sub.w	r7, r9, r7
                        *pcBuf++ = *pcStr;
    cdb2:	f80b 1b01 	strb.w	r1, [fp], #1
    cdb6:	eb07 0903 	add.w	r9, r7, r3
                while (*pcStr != 0x0)
    cdba:	f813 1b01 	ldrb.w	r1, [r3], #1
    cdbe:	2900      	cmp	r1, #0
    cdc0:	d1f7      	bne.n	cdb2 <am_util_stdio_vsprintf+0x6ca>
                if ( iWidth )
    cdc2:	2d00      	cmp	r5, #0
    cdc4:	d048      	beq.n	ce58 <am_util_stdio_vsprintf+0x770>
                    iWidth = -iWidth;
    cdc6:	426d      	negs	r5, r5
                    if ( ui32strlen < iWidth )
    cdc8:	4575      	cmp	r5, lr
    cdca:	d945      	bls.n	ce58 <am_util_stdio_vsprintf+0x770>
                        iWidth -= ui32strlen;
    cdcc:	eba5 050e 	sub.w	r5, r5, lr
    if ( i32NumChars <= 0 )
    cdd0:	2d00      	cmp	r5, #0
    cdd2:	f340 81db 	ble.w	d18c <am_util_stdio_vsprintf+0xaa4>
    while ( i32NumChars-- )
    cdd6:	1e6b      	subs	r3, r5, #1
        if ( pcBuf )
    cdd8:	f1bb 0f00 	cmp.w	fp, #0
    cddc:	f000 81d7 	beq.w	d18e <am_util_stdio_vsprintf+0xaa6>
    cde0:	465a      	mov	r2, fp
            *pcBuf++ = cPadChar;
    cde2:	f802 6b01 	strb.w	r6, [r2], #1
    while ( i32NumChars-- )
    cde6:	3b01      	subs	r3, #1
    cde8:	1c5d      	adds	r5, r3, #1
    cdea:	eba2 010b 	sub.w	r1, r2, fp
    cdee:	d1f8      	bne.n	cde2 <am_util_stdio_vsprintf+0x6fa>
    cdf0:	460d      	mov	r5, r1
                        pcBuf += pcBuf ? iWidth : 0;
    cdf2:	448b      	add	fp, r1
                        ui32CharCnt += iWidth;
    cdf4:	44a9      	add	r9, r5
                pcStr = va_arg(pArgs, char *);
    cdf6:	9011      	str	r0, [sp, #68]	; 0x44
    cdf8:	e598      	b.n	c92c <am_util_stdio_vsprintf+0x244>
                if ( iWidth > 0 )
    cdfa:	2d00      	cmp	r5, #0
    cdfc:	f340 81b0 	ble.w	d160 <am_util_stdio_vsprintf+0xa78>
        return ui32RetVal;
    ce00:	46be      	mov	lr, r7
                        iWidth -= ui32strlen;
    ce02:	eba5 050e 	sub.w	r5, r5, lr
    if ( i32NumChars <= 0 )
    ce06:	2d00      	cmp	r5, #0
    ce08:	f340 81c3 	ble.w	d192 <am_util_stdio_vsprintf+0xaaa>
    while ( i32NumChars-- )
    ce0c:	1e6b      	subs	r3, r5, #1
        if ( pcBuf )
    ce0e:	f1bb 0f00 	cmp.w	fp, #0
    ce12:	d010      	beq.n	ce36 <am_util_stdio_vsprintf+0x74e>
    ce14:	465a      	mov	r2, fp
            *pcBuf++ = cPadChar;
    ce16:	f802 6b01 	strb.w	r6, [r2], #1
    while ( i32NumChars-- )
    ce1a:	3b01      	subs	r3, #1
    ce1c:	1c5d      	adds	r5, r3, #1
    ce1e:	eba2 010b 	sub.w	r1, r2, fp
    ce22:	d1f8      	bne.n	ce16 <am_util_stdio_vsprintf+0x72e>
    ce24:	460b      	mov	r3, r1
    ce26:	460d      	mov	r5, r1
                while (*pcStr != 0x0)
    ce28:	7839      	ldrb	r1, [r7, #0]
                        pcBuf += pcBuf ? iWidth : 0;
    ce2a:	449b      	add	fp, r3
                        ui32CharCnt += iWidth;
    ce2c:	44a9      	add	r9, r5
                while (*pcStr != 0x0)
    ce2e:	b199      	cbz	r1, ce58 <am_util_stdio_vsprintf+0x770>
                        iWidth = 0;
    ce30:	2500      	movs	r5, #0
    ce32:	1c7a      	adds	r2, r7, #1
    ce34:	e7b7      	b.n	cda6 <am_util_stdio_vsprintf+0x6be>
                while (*pcStr != 0x0)
    ce36:	783b      	ldrb	r3, [r7, #0]
                        ui32CharCnt += iWidth;
    ce38:	44a9      	add	r9, r5
                while (*pcStr != 0x0)
    ce3a:	b16b      	cbz	r3, ce58 <am_util_stdio_vsprintf+0x770>
                        iWidth = 0;
    ce3c:	2500      	movs	r5, #0
    ce3e:	1c7a      	adds	r2, r7, #1
    ce40:	4613      	mov	r3, r2
    ce42:	eba9 0707 	sub.w	r7, r9, r7
    ce46:	eb07 0903 	add.w	r9, r7, r3
                while (*pcStr != 0x0)
    ce4a:	f813 2b01 	ldrb.w	r2, [r3], #1
    ce4e:	2a00      	cmp	r2, #0
    ce50:	d1f9      	bne.n	ce46 <am_util_stdio_vsprintf+0x75e>
    ce52:	4693      	mov	fp, r2
                if ( iWidth )
    ce54:	2d00      	cmp	r5, #0
    ce56:	d1b6      	bne.n	cdc6 <am_util_stdio_vsprintf+0x6de>
                pcStr = va_arg(pArgs, char *);
    ce58:	9011      	str	r0, [sp, #68]	; 0x44
    ce5a:	e567      	b.n	c92c <am_util_stdio_vsprintf+0x244>
        switch ( *pcFmt )
    ce5c:	78a2      	ldrb	r2, [r4, #2]
    ce5e:	f1a2 0346 	sub.w	r3, r2, #70	; 0x46
                pcFmt++;
    ce62:	3402      	adds	r4, #2
        switch ( *pcFmt )
    ce64:	2b32      	cmp	r3, #50	; 0x32
    ce66:	f63f af28 	bhi.w	ccba <am_util_stdio_vsprintf+0x5d2>
    ce6a:	a101      	add	r1, pc, #4	; (adr r1, ce70 <am_util_stdio_vsprintf+0x788>)
    ce6c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
    ce70:	0000c8f1 	.word	0x0000c8f1
    ce74:	0000ccbb 	.word	0x0000ccbb
    ce78:	0000ccbb 	.word	0x0000ccbb
    ce7c:	0000ccbb 	.word	0x0000ccbb
    ce80:	0000ccbb 	.word	0x0000ccbb
    ce84:	0000ccbb 	.word	0x0000ccbb
    ce88:	0000ccbb 	.word	0x0000ccbb
    ce8c:	0000ccbb 	.word	0x0000ccbb
    ce90:	0000ccbb 	.word	0x0000ccbb
    ce94:	0000ccbb 	.word	0x0000ccbb
    ce98:	0000ccbb 	.word	0x0000ccbb
    ce9c:	0000ccbb 	.word	0x0000ccbb
    cea0:	0000ccbb 	.word	0x0000ccbb
    cea4:	0000ccbb 	.word	0x0000ccbb
    cea8:	0000ccbb 	.word	0x0000ccbb
    ceac:	0000ccbb 	.word	0x0000ccbb
    ceb0:	0000ccbb 	.word	0x0000ccbb
    ceb4:	0000ccbb 	.word	0x0000ccbb
    ceb8:	0000d287 	.word	0x0000d287
    cebc:	0000ccbb 	.word	0x0000ccbb
    cec0:	0000ccbb 	.word	0x0000ccbb
    cec4:	0000ccbb 	.word	0x0000ccbb
    cec8:	0000ccbb 	.word	0x0000ccbb
    cecc:	0000ccbb 	.word	0x0000ccbb
    ced0:	0000ccbb 	.word	0x0000ccbb
    ced4:	0000ccbb 	.word	0x0000ccbb
    ced8:	0000ccbb 	.word	0x0000ccbb
    cedc:	0000ccbb 	.word	0x0000ccbb
    cee0:	0000ccbb 	.word	0x0000ccbb
    cee4:	0000c931 	.word	0x0000c931
    cee8:	0000cf53 	.word	0x0000cf53
    ceec:	0000ccbb 	.word	0x0000ccbb
    cef0:	0000c8f1 	.word	0x0000c8f1
    cef4:	0000ccbb 	.word	0x0000ccbb
    cef8:	0000ccbb 	.word	0x0000ccbb
    cefc:	0000cf53 	.word	0x0000cf53
    cf00:	0000ccbb 	.word	0x0000ccbb
    cf04:	0000ccbb 	.word	0x0000ccbb
    cf08:	0000ccbb 	.word	0x0000ccbb
    cf0c:	0000ccbb 	.word	0x0000ccbb
    cf10:	0000ccbb 	.word	0x0000ccbb
    cf14:	0000ccbb 	.word	0x0000ccbb
    cf18:	0000ccbb 	.word	0x0000ccbb
    cf1c:	0000ccbb 	.word	0x0000ccbb
    cf20:	0000ccbb 	.word	0x0000ccbb
    cf24:	0000cd77 	.word	0x0000cd77
    cf28:	0000ccbb 	.word	0x0000ccbb
    cf2c:	0000cf3d 	.word	0x0000cf3d
    cf30:	0000ccbb 	.word	0x0000ccbb
    cf34:	0000ccbb 	.word	0x0000ccbb
    cf38:	0000d127 	.word	0x0000d127
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    cf3c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    cf3e:	3307      	adds	r3, #7
    cf40:	f023 0307 	bic.w	r3, r3, #7
    cf44:	e9d3 1200 	ldrd	r1, r2, [r3]
    cf48:	3308      	adds	r3, #8
    cf4a:	e9cd 121a 	strd	r1, r2, [sp, #104]	; 0x68
    cf4e:	9311      	str	r3, [sp, #68]	; 0x44
    cf50:	e5f2      	b.n	cb38 <am_util_stdio_vsprintf+0x450>
                i64Val = bLongLong ? va_arg(pArgs, int64_t) :
    cf52:	9b11      	ldr	r3, [sp, #68]	; 0x44
    cf54:	3307      	adds	r3, #7
    cf56:	f023 0307 	bic.w	r3, r3, #7
    cf5a:	e9d3 0100 	ldrd	r0, r1, [r3]
    cf5e:	3308      	adds	r3, #8
    cf60:	9311      	str	r3, [sp, #68]	; 0x44
    cf62:	e4fa      	b.n	c95a <am_util_stdio_vsprintf+0x272>
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    cf64:	78a2      	ldrb	r2, [r4, #2]
    cf66:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
    cf6a:	2b09      	cmp	r3, #9
        pcStr++;
    cf6c:	f104 0402 	add.w	r4, r4, #2
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    cf70:	f200 812c 	bhi.w	d1cc <am_util_stdio_vsprintf+0xae4>
        uCnt++;
    cf74:	2101      	movs	r1, #1
        bNeg = true;
    cf76:	4688      	mov	r8, r1
    cf78:	e6bd      	b.n	ccf6 <am_util_stdio_vsprintf+0x60e>
    if ( i32NumChars <= 0 )
    cf7a:	2b00      	cmp	r3, #0
                            ++ui32CharCnt;
    cf7c:	f109 0901 	add.w	r9, r9, #1
    if ( i32NumChars <= 0 )
    cf80:	f340 817b 	ble.w	d27a <am_util_stdio_vsprintf+0xb92>
    while ( i32NumChars-- )
    cf84:	1eab      	subs	r3, r5, #2
    cf86:	f04f 0a01 	mov.w	sl, #1
    cf8a:	3301      	adds	r3, #1
                    ui32CharCnt += iWidth;
    cf8c:	4499      	add	r9, r3
                    if ( bNeg  &&  (ui8PadChar == ' ') )
    cf8e:	f1ba 0f00 	cmp.w	sl, #0
    cf92:	f000 80ea 	beq.w	d16a <am_util_stdio_vsprintf+0xa82>
    cf96:	2e20      	cmp	r6, #32
    cf98:	f000 80d6 	beq.w	d148 <am_util_stdio_vsprintf+0xa60>
                iVal = uint64_to_str(ui64Val, pcBuf);
    cf9c:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
    cfa0:	2200      	movs	r2, #0
    cfa2:	f7ff faef 	bl	c584 <uint64_to_str>
                    pcBuf += iVal;
    cfa6:	f04f 0b00 	mov.w	fp, #0
                ui32CharCnt += iVal;
    cfaa:	4481      	add	r9, r0
    cfac:	e4be      	b.n	c92c <am_util_stdio_vsprintf+0x244>
    if ( i32NumChars <= 0 )
    cfae:	2700      	movs	r7, #0
    cfb0:	2500      	movs	r5, #0
    cfb2:	e47c      	b.n	c8ae <am_util_stdio_vsprintf+0x1c6>
                    ui64Val = -i64Val;          // Get absolute value
    cfb4:	4240      	negs	r0, r0
    cfb6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    cfba:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
                if ( iWidth )
    cfbe:	2d00      	cmp	r5, #0
    cfc0:	f040 8143 	bne.w	d24a <am_util_stdio_vsprintf+0xb62>
                        if ( pcBuf )
    cfc4:	f1bb 0f00 	cmp.w	fp, #0
    cfc8:	f000 80d8 	beq.w	d17c <am_util_stdio_vsprintf+0xa94>
                            *pcBuf++ = '-';
    cfcc:	232d      	movs	r3, #45	; 0x2d
    cfce:	f88b 3000 	strb.w	r3, [fp]
    cfd2:	f10b 0b01 	add.w	fp, fp, #1
                iVal = uint64_to_str(ui64Val, pcBuf);
    cfd6:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
    cfda:	465a      	mov	r2, fp
                        ++ui32CharCnt;
    cfdc:	f109 0901 	add.w	r9, r9, #1
                iVal = uint64_to_str(ui64Val, pcBuf);
    cfe0:	f7ff fad0 	bl	c584 <uint64_to_str>
                if ( pcBuf )
    cfe4:	f1bb 0f00 	cmp.w	fp, #0
    cfe8:	f47f ad98 	bne.w	cb1c <am_util_stdio_vsprintf+0x434>
    cfec:	e7db      	b.n	cfa6 <am_util_stdio_vsprintf+0x8be>
    iExp2 = ((unFloatValue.I32 >> 23) & 0x000000FF) - 127;
    cfee:	f3c0 51c7 	ubfx	r1, r0, #23, #8
    cff2:	f1a1 027f 	sub.w	r2, r1, #127	; 0x7f
    cff6:	4603      	mov	r3, r0
    if (iExp2 >= 31)
    cff8:	2a1e      	cmp	r2, #30
    i32Significand = (unFloatValue.I32 & 0x00FFFFFF) | 0x00800000;
    cffa:	f3c0 0016 	ubfx	r0, r0, #0, #23
    cffe:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    if (iExp2 >= 31)
    d002:	f300 80e7 	bgt.w	d1d4 <am_util_stdio_vsprintf+0xaec>
    else if (iExp2 < -23)
    d006:	f112 0f17 	cmn.w	r2, #23
    d00a:	f2c0 80dd 	blt.w	d1c8 <am_util_stdio_vsprintf+0xae0>
    else if (iExp2 >= 23)
    d00e:	2a16      	cmp	r2, #22
    d010:	dd37      	ble.n	d082 <am_util_stdio_vsprintf+0x99a>
        i32IntPart = i32Significand << (iExp2 - 23);
    d012:	3996      	subs	r1, #150	; 0x96
    if (unFloatValue.I32 < 0)
    d014:	2b00      	cmp	r3, #0
        i32IntPart = i32Significand << (iExp2 - 23);
    d016:	fa00 f001 	lsl.w	r0, r0, r1
    if (unFloatValue.I32 < 0)
    d01a:	f2c0 80f3 	blt.w	d204 <am_util_stdio_vsprintf+0xb1c>
    if (i32IntPart == 0)
    d01e:	2800      	cmp	r0, #0
    d020:	f040 80e3 	bne.w	d1ea <am_util_stdio_vsprintf+0xb02>
    *pcBuf++ = '.';
    d024:	232e      	movs	r3, #46	; 0x2e
        *pcBuf++ = '0';
    d026:	f04f 0230 	mov.w	r2, #48	; 0x30
    d02a:	f88b 2000 	strb.w	r2, [fp]
    *pcBuf++ = '.';
    d02e:	f88b 3001 	strb.w	r3, [fp, #1]
        *pcBuf++ = '0';
    d032:	f10b 0601 	add.w	r6, fp, #1
        *pcBuf++ = '0';
    d036:	1cb2      	adds	r2, r6, #2
    d038:	f04f 0330 	mov.w	r3, #48	; 0x30
    d03c:	7073      	strb	r3, [r6, #1]
    d03e:	eba2 010b 	sub.w	r1, r2, fp
    *pcBuf = 0x00;
    d042:	2300      	movs	r3, #0
                    if ( iVal < 0 )
    d044:	4299      	cmp	r1, r3
    *pcBuf = 0x00;
    d046:	7013      	strb	r3, [r2, #0]
                    if ( iVal < 0 )
    d048:	f6bf ac6e 	bge.w	c928 <am_util_stdio_vsprintf+0x240>
                        if ( iVal == AM_FTOA_ERR_VAL_TOO_SMALL )
    d04c:	1c4b      	adds	r3, r1, #1
    d04e:	f000 80bb 	beq.w	d1c8 <am_util_stdio_vsprintf+0xae0>
                        else if ( iVal == AM_FTOA_ERR_VAL_TOO_LARGE )
    d052:	3102      	adds	r1, #2
    d054:	f000 80be 	beq.w	d1d4 <am_util_stdio_vsprintf+0xaec>
                            u32PrntErrVal = (0x00 << 24) | ('?' << 16) |
    d058:	4b90      	ldr	r3, [pc, #576]	; (d29c <am_util_stdio_vsprintf+0xbb4>)
                        *(uint32_t*)pcBuf = u32PrntErrVal;
    d05a:	f8cb 3000 	str.w	r3, [fp]
    d05e:	2103      	movs	r1, #3
    d060:	e462      	b.n	c928 <am_util_stdio_vsprintf+0x240>
    if ( i32NumChars <= 0 )
    d062:	2500      	movs	r5, #0
    d064:	2100      	movs	r1, #0
    d066:	e61b      	b.n	cca0 <am_util_stdio_vsprintf+0x5b8>
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    d068:	4604      	mov	r4, r0
    d06a:	2500      	movs	r5, #0
    d06c:	f7ff bba2 	b.w	c7b4 <am_util_stdio_vsprintf+0xcc>
    d070:	f04f 0800 	mov.w	r8, #0
    uint32_t ui32Val = 0, uCnt = 0;
    d074:	4641      	mov	r1, r8
            pcFmt += ui32NumChars;
    d076:	eb0c 0401 	add.w	r4, ip, r1
    d07a:	f81c 2001 	ldrb.w	r2, [ip, r1]
    d07e:	f7ff bba5 	b.w	c7cc <am_util_stdio_vsprintf+0xe4>
    else if (iExp2 >= 0)
    d082:	2a00      	cmp	r2, #0
    d084:	f2c0 80ce 	blt.w	d224 <am_util_stdio_vsprintf+0xb3c>
        i32FracPart = (i32Significand << (iExp2 + 1)) & 0x00FFFFFF;
    d088:	f1a1 057e 	sub.w	r5, r1, #126	; 0x7e
    d08c:	fa00 f505 	lsl.w	r5, r0, r5
        i32IntPart = i32Significand >> (23 - iExp2);
    d090:	f1c2 0217 	rsb	r2, r2, #23
    if (unFloatValue.I32 < 0)
    d094:	2b00      	cmp	r3, #0
        i32FracPart = (i32Significand << (iExp2 + 1)) & 0x00FFFFFF;
    d096:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
        i32IntPart = i32Significand >> (23 - iExp2);
    d09a:	fa40 f002 	asr.w	r0, r0, r2
    if (unFloatValue.I32 < 0)
    d09e:	f2c0 80e0 	blt.w	d262 <am_util_stdio_vsprintf+0xb7a>
    d0a2:	465e      	mov	r6, fp
            uint64_to_str(i32IntPart, pcBuf);
    d0a4:	4632      	mov	r2, r6
    d0a6:	17c1      	asrs	r1, r0, #31
    d0a8:	f7ff fa6c 	bl	c584 <uint64_to_str>
        while (*pcBuf)    // Get to end of new string
    d0ac:	7833      	ldrb	r3, [r6, #0]
    d0ae:	b11b      	cbz	r3, d0b8 <am_util_stdio_vsprintf+0x9d0>
    d0b0:	f816 3f01 	ldrb.w	r3, [r6, #1]!
    d0b4:	2b00      	cmp	r3, #0
    d0b6:	d1fb      	bne.n	d0b0 <am_util_stdio_vsprintf+0x9c8>
    *pcBuf++ = '.';
    d0b8:	232e      	movs	r3, #46	; 0x2e
    d0ba:	7033      	strb	r3, [r6, #0]
    if (i32FracPart == 0)
    d0bc:	2d00      	cmp	r5, #0
    d0be:	d0ba      	beq.n	d036 <am_util_stdio_vsprintf+0x94e>
    *pcBuf++ = '.';
    d0c0:	1c72      	adds	r2, r6, #1
        iMax = iBufSize - (pcBuf - pcBufInitial) - 1;
    d0c2:	eba2 010b 	sub.w	r1, r2, fp
    d0c6:	f1c1 0313 	rsb	r3, r1, #19
        iMax = (iMax > iPrecision) ? iPrecision : iMax;
    d0ca:	4543      	cmp	r3, r8
    d0cc:	bfa8      	it	ge
    d0ce:	4643      	movge	r3, r8
        for (jx = 0; jx < iMax; jx++)
    d0d0:	2b00      	cmp	r3, #0
    d0d2:	dd0e      	ble.n	d0f2 <am_util_stdio_vsprintf+0xa0a>
    d0d4:	18f1      	adds	r1, r6, r3
            i32FracPart *= 10;
    d0d6:	eb05 0585 	add.w	r5, r5, r5, lsl #2
    d0da:	006d      	lsls	r5, r5, #1
            *pcBuf++ = (i32FracPart >> 24) + '0';
    d0dc:	1628      	asrs	r0, r5, #24
    d0de:	3030      	adds	r0, #48	; 0x30
    d0e0:	f806 0f01 	strb.w	r0, [r6, #1]!
        for (jx = 0; jx < iMax; jx++)
    d0e4:	42b1      	cmp	r1, r6
            i32FracPart &= 0x00FFFFFF;
    d0e6:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
        for (jx = 0; jx < iMax; jx++)
    d0ea:	d1f4      	bne.n	d0d6 <am_util_stdio_vsprintf+0x9ee>
    d0ec:	441a      	add	r2, r3
    d0ee:	eba2 010b 	sub.w	r1, r2, fp
        if ( ((i32FracPart * 10) >> 24) >= 5 )
    d0f2:	eb05 0585 	add.w	r5, r5, r5, lsl #2
    d0f6:	f345 53c7 	sbfx	r3, r5, #23, #8
    d0fa:	2b04      	cmp	r3, #4
    d0fc:	dda1      	ble.n	d042 <am_util_stdio_vsprintf+0x95a>
            pcBuftmp = pcBuf - 1;
    d0fe:	1e53      	subs	r3, r2, #1
            while ( pcBuftmp >= pcBufInitial )
    d100:	459b      	cmp	fp, r3
    d102:	d89e      	bhi.n	d042 <am_util_stdio_vsprintf+0x95a>
    d104:	f10b 35ff 	add.w	r5, fp, #4294967295	; 0xffffffff
    d108:	e005      	b.n	d116 <am_util_stdio_vsprintf+0xa2e>
                    *pcBuftmp = '0';
    d10a:	f04f 0030 	mov.w	r0, #48	; 0x30
    d10e:	7018      	strb	r0, [r3, #0]
                pcBuftmp--;
    d110:	3b01      	subs	r3, #1
            while ( pcBuftmp >= pcBufInitial )
    d112:	42ab      	cmp	r3, r5
    d114:	d095      	beq.n	d042 <am_util_stdio_vsprintf+0x95a>
                if ( *pcBuftmp == '.' )
    d116:	7818      	ldrb	r0, [r3, #0]
    d118:	282e      	cmp	r0, #46	; 0x2e
    d11a:	d0f9      	beq.n	d110 <am_util_stdio_vsprintf+0xa28>
                else if ( *pcBuftmp == '9' )
    d11c:	2839      	cmp	r0, #57	; 0x39
    d11e:	d0f4      	beq.n	d10a <am_util_stdio_vsprintf+0xa22>
                    *pcBuftmp += 1;
    d120:	3001      	adds	r0, #1
    d122:	7018      	strb	r0, [r3, #0]
    d124:	e78d      	b.n	d042 <am_util_stdio_vsprintf+0x95a>
        switch ( *pcFmt )
    d126:	f04f 0801 	mov.w	r8, #1
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    d12a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    d12c:	3307      	adds	r3, #7
    d12e:	f023 0307 	bic.w	r3, r3, #7
    d132:	f103 0208 	add.w	r2, r3, #8
    d136:	9211      	str	r2, [sp, #68]	; 0x44
    d138:	e9d3 2300 	ldrd	r2, r3, [r3]
    d13c:	f7ff bb8b 	b.w	c856 <am_util_stdio_vsprintf+0x16e>
                        if ( pcBuf )
    d140:	f1bb 0f00 	cmp.w	fp, #0
    d144:	f47f af42 	bne.w	cfcc <am_util_stdio_vsprintf+0x8e4>
                iVal = uint64_to_str(ui64Val, pcBuf);
    d148:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
    d14c:	2200      	movs	r2, #0
    d14e:	f7ff fa19 	bl	c584 <uint64_to_str>
                        ++ui32CharCnt;
    d152:	f109 0901 	add.w	r9, r9, #1
                iVal = uint64_to_str(ui64Val, pcBuf);
    d156:	f04f 0b00 	mov.w	fp, #0
                ui32CharCnt += iVal;
    d15a:	4481      	add	r9, r0
    d15c:	f7ff bbe6 	b.w	c92c <am_util_stdio_vsprintf+0x244>
                while (*pcStr != 0x0)
    d160:	7839      	ldrb	r1, [r7, #0]
    d162:	b1f9      	cbz	r1, d1a4 <am_util_stdio_vsprintf+0xabc>
        return ui32RetVal;
    d164:	46be      	mov	lr, r7
    d166:	2201      	movs	r2, #1
    d168:	e61d      	b.n	cda6 <am_util_stdio_vsprintf+0x6be>
                iVal = uint64_to_str(ui64Val, pcBuf);
    d16a:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
    d16e:	4652      	mov	r2, sl
    d170:	f7ff fa08 	bl	c584 <uint64_to_str>
    d174:	46d3      	mov	fp, sl
                ui32CharCnt += iVal;
    d176:	4481      	add	r9, r0
    d178:	f7ff bbd8 	b.w	c92c <am_util_stdio_vsprintf+0x244>
                iVal = uint64_to_str(ui64Val, pcBuf);
    d17c:	465a      	mov	r2, fp
    d17e:	f7ff fa01 	bl	c584 <uint64_to_str>
                        ++ui32CharCnt;
    d182:	f109 0901 	add.w	r9, r9, #1
                ui32CharCnt += iVal;
    d186:	4481      	add	r9, r0
    d188:	f7ff bbd0 	b.w	c92c <am_util_stdio_vsprintf+0x244>
    if ( i32NumChars <= 0 )
    d18c:	2500      	movs	r5, #0
    d18e:	2100      	movs	r1, #0
    d190:	e62f      	b.n	cdf2 <am_util_stdio_vsprintf+0x70a>
    d192:	2500      	movs	r5, #0
                        pcBuf += pcBuf ? iWidth : 0;
    d194:	f1bb 0f00 	cmp.w	fp, #0
    d198:	f43f ae4d 	beq.w	ce36 <am_util_stdio_vsprintf+0x74e>
    d19c:	462b      	mov	r3, r5
    d19e:	e643      	b.n	ce28 <am_util_stdio_vsprintf+0x740>
                if ( iWidth > 0 )
    d1a0:	2d00      	cmp	r5, #0
    d1a2:	dc01      	bgt.n	d1a8 <am_util_stdio_vsprintf+0xac0>
        return ui32RetVal;
    d1a4:	468e      	mov	lr, r1
    d1a6:	e60c      	b.n	cdc2 <am_util_stdio_vsprintf+0x6da>
                    if ( ui32strlen < iWidth )
    d1a8:	468e      	mov	lr, r1
    d1aa:	e62a      	b.n	ce02 <am_util_stdio_vsprintf+0x71a>
                            if ( pcBuf )
    d1ac:	f1bb 0f00 	cmp.w	fp, #0
    d1b0:	f43f aee3 	beq.w	cf7a <am_util_stdio_vsprintf+0x892>
                                *pcBuf++ = '-';
    d1b4:	222d      	movs	r2, #45	; 0x2d
                            ++ui32CharCnt;
    d1b6:	f04f 0a01 	mov.w	sl, #1
                                *pcBuf++ = '-';
    d1ba:	f88b 2000 	strb.w	r2, [fp]
                            ++ui32CharCnt;
    d1be:	f109 0901 	add.w	r9, r9, #1
                        --iWidth;
    d1c2:	461d      	mov	r5, r3
                                *pcBuf++ = '-';
    d1c4:	44d3      	add	fp, sl
    d1c6:	e486      	b.n	cad6 <am_util_stdio_vsprintf+0x3ee>
                            u32PrntErrVal = (0x00 << 24) | ('0' << 16) |
    d1c8:	4b35      	ldr	r3, [pc, #212]	; (d2a0 <am_util_stdio_vsprintf+0xbb8>)
    d1ca:	e746      	b.n	d05a <am_util_stdio_vsprintf+0x972>
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    d1cc:	f04f 0800 	mov.w	r8, #0
        uCnt++;
    d1d0:	2101      	movs	r1, #1
    d1d2:	e750      	b.n	d076 <am_util_stdio_vsprintf+0x98e>
                            u32PrntErrVal = (0x00 << 24) | ('#' << 16) |
    d1d4:	4b33      	ldr	r3, [pc, #204]	; (d2a4 <am_util_stdio_vsprintf+0xbbc>)
    d1d6:	e740      	b.n	d05a <am_util_stdio_vsprintf+0x972>
                    pcBuf += pcBuf ? iWidth : 0;
    d1d8:	f1bb 0f00 	cmp.w	fp, #0
    d1dc:	d133      	bne.n	d246 <am_util_stdio_vsprintf+0xb5e>
    d1de:	465b      	mov	r3, fp
    d1e0:	e6d4      	b.n	cf8c <am_util_stdio_vsprintf+0x8a4>
                    iWidth -= ndigits_in_i64(ui64Val);
    d1e2:	1b7d      	subs	r5, r7, r5
                    bNeg = false;
    d1e4:	f04f 0a00 	mov.w	sl, #0
    d1e8:	e475      	b.n	cad6 <am_util_stdio_vsprintf+0x3ee>
    if (i32IntPart == 0)
    d1ea:	465b      	mov	r3, fp
    i32FracPart = 0;
    d1ec:	2500      	movs	r5, #0
        if (i32IntPart > 0)
    d1ee:	2800      	cmp	r0, #0
    d1f0:	dc41      	bgt.n	d276 <am_util_stdio_vsprintf+0xb8e>
            *pcBuf++ = '-';
    d1f2:	1c5e      	adds	r6, r3, #1
    d1f4:	272d      	movs	r7, #45	; 0x2d
            uint64_to_str(-i32IntPart, pcBuf);
    d1f6:	4240      	negs	r0, r0
    d1f8:	17c1      	asrs	r1, r0, #31
    d1fa:	4632      	mov	r2, r6
            *pcBuf++ = '-';
    d1fc:	701f      	strb	r7, [r3, #0]
            uint64_to_str(-i32IntPart, pcBuf);
    d1fe:	f7ff f9c1 	bl	c584 <uint64_to_str>
    d202:	e753      	b.n	d0ac <am_util_stdio_vsprintf+0x9c4>
        *pcBuf++ = '-';
    d204:	232d      	movs	r3, #45	; 0x2d
    d206:	f88b 3000 	strb.w	r3, [fp]
    d20a:	f10b 0301 	add.w	r3, fp, #1
    if (i32IntPart == 0)
    d20e:	bb80      	cbnz	r0, d272 <am_util_stdio_vsprintf+0xb8a>
    *pcBuf++ = '.';
    d210:	232e      	movs	r3, #46	; 0x2e
        *pcBuf++ = '0';
    d212:	f04f 0230 	mov.w	r2, #48	; 0x30
    d216:	f88b 2001 	strb.w	r2, [fp, #1]
    *pcBuf++ = '.';
    d21a:	f88b 3002 	strb.w	r3, [fp, #2]
        *pcBuf++ = '0';
    d21e:	f10b 0602 	add.w	r6, fp, #2
    d222:	e708      	b.n	d036 <am_util_stdio_vsprintf+0x94e>
        i32FracPart = (i32Significand & 0x00FFFFFF) >> -(iExp2 + 1);
    d224:	43d2      	mvns	r2, r2
    if (unFloatValue.I32 < 0)
    d226:	2b00      	cmp	r3, #0
        i32FracPart = (i32Significand & 0x00FFFFFF) >> -(iExp2 + 1);
    d228:	fa40 f502 	asr.w	r5, r0, r2
    if (unFloatValue.I32 < 0)
    d22c:	db05      	blt.n	d23a <am_util_stdio_vsprintf+0xb52>
    d22e:	465b      	mov	r3, fp
        *pcBuf++ = '0';
    d230:	f04f 0230 	mov.w	r2, #48	; 0x30
    d234:	701a      	strb	r2, [r3, #0]
    d236:	1c5e      	adds	r6, r3, #1
    d238:	e73e      	b.n	d0b8 <am_util_stdio_vsprintf+0x9d0>
        *pcBuf++ = '-';
    d23a:	232d      	movs	r3, #45	; 0x2d
    d23c:	f88b 3000 	strb.w	r3, [fp]
    d240:	f10b 0301 	add.w	r3, fp, #1
    d244:	e7f4      	b.n	d230 <am_util_stdio_vsprintf+0xb48>
    d246:	2100      	movs	r1, #0
    d248:	e457      	b.n	cafa <am_util_stdio_vsprintf+0x412>
    d24a:	460a      	mov	r2, r1
    int iNDigits = ui64Val ? 0 : 1;
    d24c:	4613      	mov	r3, r2
    d24e:	4619      	mov	r1, r3
    d250:	4301      	orrs	r1, r0
    d252:	4602      	mov	r2, r0
    d254:	bf0c      	ite	eq
    d256:	2501      	moveq	r5, #1
    d258:	2500      	movne	r5, #0
                    bNeg = true;
    d25a:	f04f 0a01 	mov.w	sl, #1
    d25e:	f7ff bb93 	b.w	c988 <am_util_stdio_vsprintf+0x2a0>
        *pcBuf++ = '-';
    d262:	232d      	movs	r3, #45	; 0x2d
    d264:	f88b 3000 	strb.w	r3, [fp]
    d268:	f10b 0301 	add.w	r3, fp, #1
    if (i32IntPart == 0)
    d26c:	2800      	cmp	r0, #0
    d26e:	d0df      	beq.n	d230 <am_util_stdio_vsprintf+0xb48>
    d270:	e7bd      	b.n	d1ee <am_util_stdio_vsprintf+0xb06>
    i32FracPart = 0;
    d272:	2500      	movs	r5, #0
    d274:	e7bb      	b.n	d1ee <am_util_stdio_vsprintf+0xb06>
        if (i32IntPart > 0)
    d276:	461e      	mov	r6, r3
    d278:	e714      	b.n	d0a4 <am_util_stdio_vsprintf+0x9bc>
                iVal = uint64_to_str(ui64Val, pcBuf);
    d27a:	465a      	mov	r2, fp
    d27c:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
    d280:	f7ff f980 	bl	c584 <uint64_to_str>
    d284:	e68f      	b.n	cfa6 <am_util_stdio_vsprintf+0x8be>
        bLower = bLongLong = false;
    d286:	f04f 0800 	mov.w	r8, #0
    d28a:	e74e      	b.n	d12a <am_util_stdio_vsprintf+0xa42>
    d28c:	f1c5 0530 	rsb	r5, r5, #48	; 0x30
    d290:	7822      	ldrb	r2, [r4, #0]
    d292:	f7ff ba8f 	b.w	c7b4 <am_util_stdio_vsprintf+0xcc>
    d296:	f1c0 0830 	rsb	r8, r0, #48	; 0x30
    d29a:	e6ec      	b.n	d076 <am_util_stdio_vsprintf+0x98e>
    d29c:	003f2e3f 	.word	0x003f2e3f
    d2a0:	00302e30 	.word	0x00302e30
    d2a4:	00232e23 	.word	0x00232e23

0000d2a8 <am_util_stdio_printf>:
//! @return uint32_t representing the number of characters printed.
//
// *****************************************************************************
uint32_t
am_util_stdio_printf(const char *pcFmt, ...)
{
    d2a8:	b40f      	push	{r0, r1, r2, r3}
    d2aa:	b530      	push	{r4, r5, lr}
    uint32_t ui32NumChars;

    if (!g_pfnCharPrint)
    d2ac:	4d0a      	ldr	r5, [pc, #40]	; (d2d8 <am_util_stdio_printf+0x30>)
    d2ae:	682c      	ldr	r4, [r5, #0]
{
    d2b0:	b083      	sub	sp, #12
    if (!g_pfnCharPrint)
    d2b2:	b154      	cbz	r4, d2ca <am_util_stdio_printf+0x22>

    //
    // Convert to the desired string.
    //
    va_list pArgs;
    va_start(pArgs, pcFmt);
    d2b4:	ab07      	add	r3, sp, #28
    ui32NumChars = am_util_stdio_vsprintf(g_prfbuf, pcFmt, pArgs);
    d2b6:	461a      	mov	r2, r3
    d2b8:	9906      	ldr	r1, [sp, #24]
    d2ba:	4808      	ldr	r0, [pc, #32]	; (d2dc <am_util_stdio_printf+0x34>)
    va_start(pArgs, pcFmt);
    d2bc:	9301      	str	r3, [sp, #4]
    ui32NumChars = am_util_stdio_vsprintf(g_prfbuf, pcFmt, pArgs);
    d2be:	f7ff fa13 	bl	c6e8 <am_util_stdio_vsprintf>
    va_end(pArgs);

    //
    // This is where we print the buffer to the configured interface.
    //
    g_pfnCharPrint(g_prfbuf);
    d2c2:	682b      	ldr	r3, [r5, #0]
    ui32NumChars = am_util_stdio_vsprintf(g_prfbuf, pcFmt, pArgs);
    d2c4:	4604      	mov	r4, r0
    g_pfnCharPrint(g_prfbuf);
    d2c6:	4805      	ldr	r0, [pc, #20]	; (d2dc <am_util_stdio_printf+0x34>)
    d2c8:	4798      	blx	r3

    //
    // return the number of characters printed.
    //
    return ui32NumChars;
}
    d2ca:	4620      	mov	r0, r4
    d2cc:	b003      	add	sp, #12
    d2ce:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    d2d2:	b004      	add	sp, #16
    d2d4:	4770      	bx	lr
    d2d6:	bf00      	nop
    d2d8:	1000247c 	.word	0x1000247c
    d2dc:	10001b1c 	.word	0x10001b1c

0000d2e0 <am_util_stdio_terminal_clear>:
    // left corner.
    // We'll first print a number of spaces, which helps get the ITM in sync
    // with AM Flash, especially after a reset event or a system clock
    // frequency change.
    //
    am_util_stdio_printf("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
    d2e0:	4801      	ldr	r0, [pc, #4]	; (d2e8 <am_util_stdio_terminal_clear+0x8>)
    d2e2:	f7ff bfe1 	b.w	d2a8 <am_util_stdio_printf>
    d2e6:	bf00      	nop
    d2e8:	0001078c 	.word	0x0001078c

0000d2ec <NMI_Handler>:
#if AM_CMSIS_REGS
NMI_Handler(void)
#else // AM_CMSIS_REGS
am_nmi_isr(void)
#endif // AM_CMSIS_REGS
{
    d2ec:	e7fe      	b.n	d2ec <NMI_Handler>
    d2ee:	bf00      	nop

0000d2f0 <DebugMon_Handler>:
// for examination by a debugger.
//
//*****************************************************************************
void
am_default_isr(void)
{
    d2f0:	e7fe      	b.n	d2f0 <DebugMon_Handler>
    d2f2:	bf00      	nop

0000d2f4 <Reset_Handler>:
    __asm("    ldr    r0, =0xE000ED08\n"
    d2f4:	4811      	ldr	r0, [pc, #68]	; (d33c <zero_loop+0x12>)
    d2f6:	4912      	ldr	r1, [pc, #72]	; (d340 <zero_loop+0x16>)
    d2f8:	6001      	str	r1, [r0, #0]
    __asm("    ldr    sp, [r1]");
    d2fa:	f8d1 d000 	ldr.w	sp, [r1]
    __asm("ldr  r0, =0xE000ED88\n"
    d2fe:	4811      	ldr	r0, [pc, #68]	; (d344 <zero_loop+0x1a>)
    d300:	6801      	ldr	r1, [r0, #0]
    d302:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    d306:	6001      	str	r1, [r0, #0]
    d308:	f3bf 8f4f 	dsb	sy
    d30c:	f3bf 8f6f 	isb	sy
    __asm("    ldr     r0, =_init_data\n"
    d310:	480d      	ldr	r0, [pc, #52]	; (d348 <zero_loop+0x1e>)
    d312:	490e      	ldr	r1, [pc, #56]	; (d34c <zero_loop+0x22>)
    d314:	4a0e      	ldr	r2, [pc, #56]	; (d350 <zero_loop+0x26>)

0000d316 <copy_loop>:
    d316:	f850 3b04 	ldr.w	r3, [r0], #4
    d31a:	f841 3b04 	str.w	r3, [r1], #4
    d31e:	4291      	cmp	r1, r2
    d320:	dbf9      	blt.n	d316 <copy_loop>
    __asm("    ldr     r0, =_sbss\n"
    d322:	480c      	ldr	r0, [pc, #48]	; (d354 <zero_loop+0x2a>)
    d324:	490c      	ldr	r1, [pc, #48]	; (d358 <zero_loop+0x2e>)
    d326:	f04f 0200 	mov.w	r2, #0

0000d32a <zero_loop>:
    d32a:	4288      	cmp	r0, r1
    d32c:	bfb8      	it	lt
    d32e:	f840 2b04 	strlt.w	r2, [r0], #4
    d332:	dbfa      	blt.n	d32a <zero_loop>
    main();
    d334:	f7fe ffe6 	bl	c304 <main>
    __asm("    bkpt     ");
    d338:	be00      	bkpt	0x0000
    d33a:	0000      	.short	0x0000
    d33c:	e000ed08 	.word	0xe000ed08
    d340:	0000c000 	.word	0x0000c000
    d344:	e000ed88 	.word	0xe000ed88
    d348:	00012484 	.word	0x00012484
    d34c:	10001000 	.word	0x10001000
    d350:	10001b10 	.word	0x10001b10
    d354:	10001b10 	.word	0x10001b10
    d358:	10002658 	.word	0x10002658

0000d35c <am_ctimer_isr>:
    .uFuncSel       = AM_HAL_PIN_11_ADCSE2,
};

void
am_ctimer_isr(void)
{
    d35c:	b570      	push	{r4, r5, r6, lr}
  // Clear TimerA0 Interrupt.
  am_hal_ctimer_int_clear(AM_HAL_CTIMER_INT_TIMERA0);
    d35e:	2001      	movs	r0, #1
{
    d360:	b084      	sub	sp, #16
  am_hal_ctimer_int_clear(AM_HAL_CTIMER_INT_TIMERA0);
    d362:	f002 f8bf 	bl	f4e4 <am_hal_ctimer_int_clear>
{
    am_hal_adc_config_t           ADCConfig;
    am_hal_adc_slot_config_t      ADCSlotConfig;

    // Initialize the ADC and get the handle.
    if ( AM_HAL_STATUS_SUCCESS != am_hal_adc_initialize(0, &g_ADCHandle) )
    d366:	492b      	ldr	r1, [pc, #172]	; (d414 <am_ctimer_isr+0xb8>)
    d368:	2000      	movs	r0, #0
    d36a:	f000 f973 	bl	d654 <am_hal_adc_initialize>
    d36e:	2800      	cmp	r0, #0
    d370:	d14c      	bne.n	d40c <am_ctimer_isr+0xb0>
    {
        am_util_stdio_printf("Error - reservation of the ADC instance failed.\n");
    }

    // Power on the ADC.
    if (AM_HAL_STATUS_SUCCESS != am_hal_adc_power_control(g_ADCHandle,
    d372:	4c28      	ldr	r4, [pc, #160]	; (d414 <am_ctimer_isr+0xb8>)
    d374:	2200      	movs	r2, #0
    d376:	6820      	ldr	r0, [r4, #0]
    d378:	4611      	mov	r1, r2
    d37a:	f000 fb35 	bl	d9e8 <am_hal_adc_power_control>
    d37e:	2800      	cmp	r0, #0
    d380:	d140      	bne.n	d404 <am_ctimer_isr+0xa8>
    }

    // Set up the ADC configuration parameters. These settings are reasonable
    // for accurate measurements at a low sample rate.
    ADCConfig.eClock             = AM_HAL_ADC_CLKSEL_HFRC;
    ADCConfig.ePolarity          = AM_HAL_ADC_TRIGPOL_RISING;
    d382:	2300      	movs	r3, #0
    ADCConfig.eClock             = AM_HAL_ADC_CLKSEL_HFRC;
    d384:	2201      	movs	r2, #1
    ADCConfig.eTrigger           = AM_HAL_ADC_TRIGSEL_SOFTWARE;
    d386:	2507      	movs	r5, #7
    ADCConfig.eReference         = AM_HAL_ADC_REFSEL_INT_2P0;
    ADCConfig.eClockMode         = AM_HAL_ADC_CLKMODE_LOW_POWER;
    ADCConfig.ePowerMode         = AM_HAL_ADC_LPMODE0;
    ADCConfig.eRepeat            = AM_HAL_ADC_REPEATING_SCAN;
    if (AM_HAL_STATUS_SUCCESS != am_hal_adc_configure(g_ADCHandle, &ADCConfig))
    d388:	a902      	add	r1, sp, #8
    d38a:	6820      	ldr	r0, [r4, #0]
    ADCConfig.eClock             = AM_HAL_ADC_CLKSEL_HFRC;
    d38c:	f88d 2008 	strb.w	r2, [sp, #8]
    ADCConfig.eRepeat            = AM_HAL_ADC_REPEATING_SCAN;
    d390:	f88d 200e 	strb.w	r2, [sp, #14]
    ADCConfig.ePolarity          = AM_HAL_ADC_TRIGPOL_RISING;
    d394:	f88d 3009 	strb.w	r3, [sp, #9]
    ADCConfig.eReference         = AM_HAL_ADC_REFSEL_INT_2P0;
    d398:	f88d 300b 	strb.w	r3, [sp, #11]
    ADCConfig.eClockMode         = AM_HAL_ADC_CLKMODE_LOW_POWER;
    d39c:	f88d 300c 	strb.w	r3, [sp, #12]
    ADCConfig.ePowerMode         = AM_HAL_ADC_LPMODE0;
    d3a0:	f88d 300d 	strb.w	r3, [sp, #13]
    ADCConfig.eTrigger           = AM_HAL_ADC_TRIGSEL_SOFTWARE;
    d3a4:	f88d 500a 	strb.w	r5, [sp, #10]
    if (AM_HAL_STATUS_SUCCESS != am_hal_adc_configure(g_ADCHandle, &ADCConfig))
    d3a8:	f000 f9c4 	bl	d734 <am_hal_adc_configure>
    d3ac:	bb30      	cbnz	r0, d3fc <am_ctimer_isr+0xa0>
    {
        am_util_stdio_printf("Error - configuring ADC failed.\n");
    }

    // Set up an ADC slot
    ADCSlotConfig.eMeasToAvg      = AM_HAL_ADC_SLOT_AVG_1;
    d3ae:	2300      	movs	r3, #0
    ADCSlotConfig.ePrecisionMode  = AM_HAL_ADC_SLOT_14BIT;
    // ADCSlotConfig.eChannel        = AM_HAL_ADC_SLOT_CHSEL_SE1;
    ADCSlotConfig.eChannel        = AM_HAL_ADC_SLOT_CHSEL_SE2;
    d3b0:	2602      	movs	r6, #2
    ADCSlotConfig.bWindowCompare  = false;
    ADCSlotConfig.bEnabled        = true;
    d3b2:	2501      	movs	r5, #1
    if (AM_HAL_STATUS_SUCCESS != am_hal_adc_configure_slot(g_ADCHandle, 0, &ADCSlotConfig))
    d3b4:	4619      	mov	r1, r3
    d3b6:	466a      	mov	r2, sp
    d3b8:	6820      	ldr	r0, [r4, #0]
    ADCSlotConfig.eMeasToAvg      = AM_HAL_ADC_SLOT_AVG_1;
    d3ba:	f88d 3000 	strb.w	r3, [sp]
    ADCSlotConfig.ePrecisionMode  = AM_HAL_ADC_SLOT_14BIT;
    d3be:	f88d 3001 	strb.w	r3, [sp, #1]
    ADCSlotConfig.bWindowCompare  = false;
    d3c2:	f88d 3003 	strb.w	r3, [sp, #3]
    ADCSlotConfig.eChannel        = AM_HAL_ADC_SLOT_CHSEL_SE2;
    d3c6:	f88d 6002 	strb.w	r6, [sp, #2]
    ADCSlotConfig.bEnabled        = true;
    d3ca:	f88d 5004 	strb.w	r5, [sp, #4]
    if (AM_HAL_STATUS_SUCCESS != am_hal_adc_configure_slot(g_ADCHandle, 0, &ADCSlotConfig))
    d3ce:	f000 f9e9 	bl	d7a4 <am_hal_adc_configure_slot>
    d3d2:	b978      	cbnz	r0, d3f4 <am_ctimer_isr+0x98>
    {
        am_util_stdio_printf("Error - configuring ADC Slot 0 failed.\n");
    }
  
    am_hal_adc_interrupt_enable(g_ADCHandle, AM_HAL_ADC_INT_CNVCMP );
    d3d4:	2101      	movs	r1, #1
    d3d6:	6820      	ldr	r0, [r4, #0]
    d3d8:	f000 fa52 	bl	d880 <am_hal_adc_interrupt_enable>

    //
    // Enable the ADC.
    //
    if (AM_HAL_STATUS_SUCCESS != am_hal_adc_enable(g_ADCHandle))
    d3dc:	6820      	ldr	r0, [r4, #0]
    d3de:	f000 fa17 	bl	d810 <am_hal_adc_enable>
    d3e2:	b110      	cbz	r0, d3ea <am_ctimer_isr+0x8e>
    {
        am_util_stdio_printf("Error - enabling ADC failed.\n");
    d3e4:	480c      	ldr	r0, [pc, #48]	; (d418 <am_ctimer_isr+0xbc>)
    d3e6:	f7ff ff5f 	bl	d2a8 <am_util_stdio_printf>
  am_hal_adc_sw_trigger(g_ADCHandle);
    d3ea:	6820      	ldr	r0, [r4, #0]
    d3ec:	f000 faea 	bl	d9c4 <am_hal_adc_sw_trigger>
}
    d3f0:	b004      	add	sp, #16
    d3f2:	bd70      	pop	{r4, r5, r6, pc}
        am_util_stdio_printf("Error - configuring ADC Slot 0 failed.\n");
    d3f4:	4809      	ldr	r0, [pc, #36]	; (d41c <am_ctimer_isr+0xc0>)
    d3f6:	f7ff ff57 	bl	d2a8 <am_util_stdio_printf>
    d3fa:	e7eb      	b.n	d3d4 <am_ctimer_isr+0x78>
        am_util_stdio_printf("Error - configuring ADC failed.\n");
    d3fc:	4808      	ldr	r0, [pc, #32]	; (d420 <am_ctimer_isr+0xc4>)
    d3fe:	f7ff ff53 	bl	d2a8 <am_util_stdio_printf>
    d402:	e7d4      	b.n	d3ae <am_ctimer_isr+0x52>
        am_util_stdio_printf("Error - ADC power on failed.\n");
    d404:	4807      	ldr	r0, [pc, #28]	; (d424 <am_ctimer_isr+0xc8>)
    d406:	f7ff ff4f 	bl	d2a8 <am_util_stdio_printf>
    d40a:	e7ba      	b.n	d382 <am_ctimer_isr+0x26>
        am_util_stdio_printf("Error - reservation of the ADC instance failed.\n");
    d40c:	4806      	ldr	r0, [pc, #24]	; (d428 <am_ctimer_isr+0xcc>)
    d40e:	f7ff ff4b 	bl	d2a8 <am_util_stdio_printf>
    d412:	e7ae      	b.n	d372 <am_ctimer_isr+0x16>
    d414:	10001c20 	.word	0x10001c20
    d418:	00010934 	.word	0x00010934
    d41c:	0001090c 	.word	0x0001090c
    d420:	000108e8 	.word	0x000108e8
    d424:	000108c8 	.word	0x000108c8
    d428:	00010894 	.word	0x00010894

0000d42c <am_adc_isr>:
{
    d42c:	b510      	push	{r4, lr}
    if (AM_HAL_STATUS_SUCCESS != am_hal_adc_interrupt_status(g_ADCHandle, &ui32IntMask, false))
    d42e:	4c24      	ldr	r4, [pc, #144]	; (d4c0 <am_adc_isr+0x94>)
{
    d430:	b086      	sub	sp, #24
    if (AM_HAL_STATUS_SUCCESS != am_hal_adc_interrupt_status(g_ADCHandle, &ui32IntMask, false))
    d432:	2200      	movs	r2, #0
    d434:	6820      	ldr	r0, [r4, #0]
    d436:	a902      	add	r1, sp, #8
    d438:	f000 fa38 	bl	d8ac <am_hal_adc_interrupt_status>
    d43c:	2800      	cmp	r0, #0
    d43e:	d13b      	bne.n	d4b8 <am_adc_isr+0x8c>
    if (AM_HAL_STATUS_SUCCESS != am_hal_adc_interrupt_clear(g_ADCHandle, ui32IntMask))
    d440:	9902      	ldr	r1, [sp, #8]
    d442:	6820      	ldr	r0, [r4, #0]
    d444:	f000 fa50 	bl	d8e8 <am_hal_adc_interrupt_clear>
    d448:	2800      	cmp	r0, #0
    d44a:	d131      	bne.n	d4b0 <am_adc_isr+0x84>
    if (ui32IntMask & AM_HAL_ADC_INT_CNVCMP)
    d44c:	9b02      	ldr	r3, [sp, #8]
    d44e:	07db      	lsls	r3, r3, #31
    d450:	d416      	bmi.n	d480 <am_adc_isr+0x54>
    audioSample = Sample.ui32Sample;
    d452:	4b1c      	ldr	r3, [pc, #112]	; (d4c4 <am_adc_isr+0x98>)
    d454:	9a04      	ldr	r2, [sp, #16]
static void adc_deconfig(void)
{
  //
  // Disable the ADC.
  //
  if (AM_HAL_STATUS_SUCCESS != am_hal_adc_disable(g_ADCHandle))
    d456:	6820      	ldr	r0, [r4, #0]
    audioSample = Sample.ui32Sample;
    d458:	601a      	str	r2, [r3, #0]
  if (AM_HAL_STATUS_SUCCESS != am_hal_adc_disable(g_ADCHandle))
    d45a:	f000 f9f9 	bl	d850 <am_hal_adc_disable>
    d45e:	bb18      	cbnz	r0, d4a8 <am_adc_isr+0x7c>
  }

  //
  // Enable the ADC power domain.
  //
  if (AM_HAL_STATUS_SUCCESS != am_hal_pwrctrl_periph_disable(AM_HAL_PWRCTRL_PERIPH_ADC))
    d460:	200a      	movs	r0, #10
    d462:	f002 fb77 	bl	fb54 <am_hal_pwrctrl_periph_disable>
    d466:	b9d8      	cbnz	r0, d4a0 <am_adc_isr+0x74>
  }

  //
  // Initialize the ADC and get the handle.
  //
  if (AM_HAL_STATUS_SUCCESS != am_hal_adc_deinitialize(g_ADCHandle))
    d468:	6820      	ldr	r0, [r4, #0]
    d46a:	f000 f943 	bl	d6f4 <am_hal_adc_deinitialize>
    d46e:	b110      	cbz	r0, d476 <am_adc_isr+0x4a>
  {
    am_util_stdio_printf("Error - return of the ADC instance failed.\n");
    d470:	4815      	ldr	r0, [pc, #84]	; (d4c8 <am_adc_isr+0x9c>)
    d472:	f7ff ff19 	bl	d2a8 <am_util_stdio_printf>
    am_hal_adc_sw_trigger(g_ADCHandle);
    d476:	6820      	ldr	r0, [r4, #0]
    d478:	f000 faa4 	bl	d9c4 <am_hal_adc_sw_trigger>
}
    d47c:	b006      	add	sp, #24
    d47e:	bd10      	pop	{r4, pc}
        uint32_t    ui32NumSamples = 1;
    d480:	ab06      	add	r3, sp, #24
        if (AM_HAL_STATUS_SUCCESS != am_hal_adc_samples_read(g_ADCHandle,
    d482:	aa04      	add	r2, sp, #16
        uint32_t    ui32NumSamples = 1;
    d484:	2101      	movs	r1, #1
    d486:	f843 1d0c 	str.w	r1, [r3, #-12]!
        if (AM_HAL_STATUS_SUCCESS != am_hal_adc_samples_read(g_ADCHandle,
    d48a:	6820      	ldr	r0, [r4, #0]
    d48c:	9200      	str	r2, [sp, #0]
    d48e:	2200      	movs	r2, #0
    d490:	f000 fa3c 	bl	d90c <am_hal_adc_samples_read>
    d494:	2800      	cmp	r0, #0
    d496:	d0dc      	beq.n	d452 <am_adc_isr+0x26>
        am_util_stdio_printf("Error - ADC sample read from FIFO failed.\n");
    d498:	480c      	ldr	r0, [pc, #48]	; (d4cc <am_adc_isr+0xa0>)
    d49a:	f7ff ff05 	bl	d2a8 <am_util_stdio_printf>
    d49e:	e7d8      	b.n	d452 <am_adc_isr+0x26>
    am_util_stdio_printf("Error - disabling the ADC power domain failed.\n");
    d4a0:	480b      	ldr	r0, [pc, #44]	; (d4d0 <am_adc_isr+0xa4>)
    d4a2:	f7ff ff01 	bl	d2a8 <am_util_stdio_printf>
    d4a6:	e7df      	b.n	d468 <am_adc_isr+0x3c>
    am_util_stdio_printf("Error - disable ADC failed.\n");
    d4a8:	480a      	ldr	r0, [pc, #40]	; (d4d4 <am_adc_isr+0xa8>)
    d4aa:	f7ff fefd 	bl	d2a8 <am_util_stdio_printf>
    d4ae:	e7d7      	b.n	d460 <am_adc_isr+0x34>
        am_util_stdio_printf("Error clearing ADC interrupt status\n");
    d4b0:	4809      	ldr	r0, [pc, #36]	; (d4d8 <am_adc_isr+0xac>)
    d4b2:	f7ff fef9 	bl	d2a8 <am_util_stdio_printf>
    d4b6:	e7c9      	b.n	d44c <am_adc_isr+0x20>
        am_util_stdio_printf("Error reading ADC interrupt status\n");
    d4b8:	4808      	ldr	r0, [pc, #32]	; (d4dc <am_adc_isr+0xb0>)
    d4ba:	f7ff fef5 	bl	d2a8 <am_util_stdio_printf>
    d4be:	e7bf      	b.n	d440 <am_adc_isr+0x14>
    d4c0:	10001c20 	.word	0x10001c20
    d4c4:	10001c1c 	.word	0x10001c1c
    d4c8:	00010868 	.word	0x00010868
    d4cc:	000107ec 	.word	0x000107ec
    d4d0:	00010838 	.word	0x00010838
    d4d4:	00010818 	.word	0x00010818
    d4d8:	000107c4 	.word	0x000107c4
    d4dc:	000107a0 	.word	0x000107a0

0000d4e0 <am_bsp_uart_string_print>:
    d4e0:	b510      	push	{r4, lr}
    d4e2:	b086      	sub	sp, #24
    d4e4:	7804      	ldrb	r4, [r0, #0]
    d4e6:	2300      	movs	r3, #0
    d4e8:	9300      	str	r3, [sp, #0]
    d4ea:	b13c      	cbz	r4, d4fc <am_bsp_uart_string_print+0x1c>
    d4ec:	4603      	mov	r3, r0
    d4ee:	f1c0 0201 	rsb	r2, r0, #1
    d4f2:	18d4      	adds	r4, r2, r3
    d4f4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
    d4f8:	2900      	cmp	r1, #0
    d4fa:	d1fa      	bne.n	d4f2 <am_bsp_uart_string_print+0x12>
    d4fc:	4b09      	ldr	r3, [pc, #36]	; (d524 <am_bsp_uart_string_print+0x44>)
    d4fe:	9002      	str	r0, [sp, #8]
    d500:	2200      	movs	r2, #0
    d502:	6818      	ldr	r0, [r3, #0]
    d504:	9403      	str	r4, [sp, #12]
    d506:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    d50a:	a901      	add	r1, sp, #4
    d50c:	9304      	str	r3, [sp, #16]
    d50e:	9201      	str	r2, [sp, #4]
    d510:	f8cd d014 	str.w	sp, [sp, #20]
    d514:	f002 fe54 	bl	101c0 <am_hal_uart_transfer>
    d518:	9b00      	ldr	r3, [sp, #0]
    d51a:	42a3      	cmp	r3, r4
    d51c:	d000      	beq.n	d520 <am_bsp_uart_string_print+0x40>
    d51e:	e7fe      	b.n	d51e <am_bsp_uart_string_print+0x3e>
    d520:	b006      	add	sp, #24
    d522:	bd10      	pop	{r4, pc}
    d524:	10001c24 	.word	0x10001c24

0000d528 <am_bsp_low_power_init>:
    d528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d52a:	f002 f9fd 	bl	f928 <am_hal_itm_disable>
    d52e:	2000      	movs	r0, #0
    d530:	f7ff f8d4 	bl	c6dc <am_util_stdio_printf_init>
    d534:	4b12      	ldr	r3, [pc, #72]	; (d580 <am_bsp_low_power_init+0x58>)
    d536:	4f13      	ldr	r7, [pc, #76]	; (d584 <am_bsp_low_power_init+0x5c>)
    d538:	6819      	ldr	r1, [r3, #0]
    d53a:	2021      	movs	r0, #33	; 0x21
    d53c:	f002 f836 	bl	f5ac <am_hal_gpio_pinconfig>
    d540:	f002 fb34 	bl	fbac <am_hal_pwrctrl_low_power_init>
    d544:	2001      	movs	r0, #1
    d546:	f002 fc1f 	bl	fd88 <am_hal_rtc_osc_select>
    d54a:	2100      	movs	r1, #0
    d54c:	2003      	movs	r0, #3
    d54e:	f001 ff3d 	bl	f3cc <am_hal_clkgen_control>
    d552:	f002 fc21 	bl	fd98 <am_hal_rtc_osc_disable>
    d556:	4b0c      	ldr	r3, [pc, #48]	; (d588 <am_bsp_low_power_init+0x60>)
    d558:	681e      	ldr	r6, [r3, #0]
    d55a:	2400      	movs	r4, #0
    d55c:	f857 5034 	ldr.w	r5, [r7, r4, lsl #3]
    d560:	4631      	mov	r1, r6
    d562:	4628      	mov	r0, r5
    d564:	f002 f822 	bl	f5ac <am_hal_gpio_pinconfig>
    d568:	2103      	movs	r1, #3
    d56a:	4628      	mov	r0, r5
    d56c:	f002 f98c 	bl	f888 <am_hal_gpio_state_write>
    d570:	3401      	adds	r4, #1
    d572:	4628      	mov	r0, r5
    d574:	2100      	movs	r1, #0
    d576:	f002 f987 	bl	f888 <am_hal_gpio_state_write>
    d57a:	2c04      	cmp	r4, #4
    d57c:	d1ee      	bne.n	d55c <am_bsp_low_power_init+0x34>
    d57e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d580:	00012310 	.word	0x00012310
    d584:	10001000 	.word	0x10001000
    d588:	00012314 	.word	0x00012314

0000d58c <am_bsp_debug_printf_disable>:
    d58c:	b538      	push	{r3, r4, r5, lr}
    d58e:	4b17      	ldr	r3, [pc, #92]	; (d5ec <am_bsp_debug_printf_disable+0x60>)
    d590:	681c      	ldr	r4, [r3, #0]
    d592:	2c01      	cmp	r4, #1
    d594:	d002      	beq.n	d59c <am_bsp_debug_printf_disable+0x10>
    d596:	2c02      	cmp	r4, #2
    d598:	d00c      	beq.n	d5b4 <am_bsp_debug_printf_disable+0x28>
    d59a:	bd38      	pop	{r3, r4, r5, pc}
    d59c:	f002 f9c4 	bl	f928 <am_hal_itm_disable>
    d5a0:	2000      	movs	r0, #0
    d5a2:	f7ff f89b 	bl	c6dc <am_util_stdio_printf_init>
    d5a6:	4b12      	ldr	r3, [pc, #72]	; (d5f0 <am_bsp_debug_printf_disable+0x64>)
    d5a8:	2021      	movs	r0, #33	; 0x21
    d5aa:	6819      	ldr	r1, [r3, #0]
    d5ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    d5b0:	f001 bffc 	b.w	f5ac <am_hal_gpio_pinconfig>
    d5b4:	4d0f      	ldr	r5, [pc, #60]	; (d5f4 <am_bsp_debug_printf_disable+0x68>)
    d5b6:	6828      	ldr	r0, [r5, #0]
    d5b8:	f003 f83c 	bl	10634 <am_hal_uart_tx_flush>
    d5bc:	2000      	movs	r0, #0
    d5be:	f7ff f88d 	bl	c6dc <am_util_stdio_printf_init>
    d5c2:	4621      	mov	r1, r4
    d5c4:	2200      	movs	r2, #0
    d5c6:	6828      	ldr	r0, [r5, #0]
    d5c8:	f002 fc64 	bl	fe94 <am_hal_uart_power_control>
    d5cc:	6828      	ldr	r0, [r5, #0]
    d5ce:	f002 fc4d 	bl	fe6c <am_hal_uart_deinitialize>
    d5d2:	4b07      	ldr	r3, [pc, #28]	; (d5f0 <am_bsp_debug_printf_disable+0x64>)
    d5d4:	681c      	ldr	r4, [r3, #0]
    d5d6:	2030      	movs	r0, #48	; 0x30
    d5d8:	4621      	mov	r1, r4
    d5da:	f001 ffe7 	bl	f5ac <am_hal_gpio_pinconfig>
    d5de:	4621      	mov	r1, r4
    d5e0:	2031      	movs	r0, #49	; 0x31
    d5e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    d5e6:	f001 bfe1 	b.w	f5ac <am_hal_gpio_pinconfig>
    d5ea:	bf00      	nop
    d5ec:	10001c28 	.word	0x10001c28
    d5f0:	00012310 	.word	0x00012310
    d5f4:	10001c24 	.word	0x10001c24

0000d5f8 <am_bsp_uart_printf_enable>:
    d5f8:	b510      	push	{r4, lr}
    d5fa:	4c10      	ldr	r4, [pc, #64]	; (d63c <am_bsp_uart_printf_enable+0x44>)
    d5fc:	4b10      	ldr	r3, [pc, #64]	; (d640 <am_bsp_uart_printf_enable+0x48>)
    d5fe:	4621      	mov	r1, r4
    d600:	2202      	movs	r2, #2
    d602:	2000      	movs	r0, #0
    d604:	601a      	str	r2, [r3, #0]
    d606:	f002 fc09 	bl	fe1c <am_hal_uart_initialize>
    d60a:	2200      	movs	r2, #0
    d60c:	4611      	mov	r1, r2
    d60e:	6820      	ldr	r0, [r4, #0]
    d610:	f002 fc40 	bl	fe94 <am_hal_uart_power_control>
    d614:	6820      	ldr	r0, [r4, #0]
    d616:	490b      	ldr	r1, [pc, #44]	; (d644 <am_bsp_uart_printf_enable+0x4c>)
    d618:	f002 fcae 	bl	ff78 <am_hal_uart_configure>
    d61c:	4b0a      	ldr	r3, [pc, #40]	; (d648 <am_bsp_uart_printf_enable+0x50>)
    d61e:	2030      	movs	r0, #48	; 0x30
    d620:	6819      	ldr	r1, [r3, #0]
    d622:	f001 ffc3 	bl	f5ac <am_hal_gpio_pinconfig>
    d626:	4b09      	ldr	r3, [pc, #36]	; (d64c <am_bsp_uart_printf_enable+0x54>)
    d628:	2031      	movs	r0, #49	; 0x31
    d62a:	6819      	ldr	r1, [r3, #0]
    d62c:	f001 ffbe 	bl	f5ac <am_hal_gpio_pinconfig>
    d630:	4807      	ldr	r0, [pc, #28]	; (d650 <am_bsp_uart_printf_enable+0x58>)
    d632:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    d636:	f7ff b851 	b.w	c6dc <am_util_stdio_printf_init>
    d63a:	bf00      	nop
    d63c:	10001c24 	.word	0x10001c24
    d640:	10001c28 	.word	0x10001c28
    d644:	00010954 	.word	0x00010954
    d648:	00010980 	.word	0x00010980
    d64c:	0001097c 	.word	0x0001097c
    d650:	0000d4e1 	.word	0x0000d4e1

0000d654 <am_hal_adc_initialize>:
    d654:	b108      	cbz	r0, d65a <am_hal_adc_initialize+0x6>
    d656:	2005      	movs	r0, #5
    d658:	4770      	bx	lr
    d65a:	b139      	cbz	r1, d66c <am_hal_adc_initialize+0x18>
    d65c:	4a1b      	ldr	r2, [pc, #108]	; (d6cc <am_hal_adc_initialize+0x78>)
    d65e:	b538      	push	{r3, r4, r5, lr}
    d660:	78d3      	ldrb	r3, [r2, #3]
    d662:	f013 0401 	ands.w	r4, r3, #1
    d666:	d003      	beq.n	d670 <am_hal_adc_initialize+0x1c>
    d668:	2007      	movs	r0, #7
    d66a:	bd38      	pop	{r3, r4, r5, pc}
    d66c:	2006      	movs	r0, #6
    d66e:	4770      	bx	lr
    d670:	f043 0301 	orr.w	r3, r3, #1
    d674:	70d3      	strb	r3, [r2, #3]
    d676:	6813      	ldr	r3, [r2, #0]
    d678:	4d15      	ldr	r5, [pc, #84]	; (d6d0 <am_hal_adc_initialize+0x7c>)
    d67a:	4816      	ldr	r0, [pc, #88]	; (d6d4 <am_hal_adc_initialize+0x80>)
    d67c:	6054      	str	r4, [r2, #4]
    d67e:	f365 0317 	bfi	r3, r5, #0, #24
    d682:	6013      	str	r3, [r2, #0]
    d684:	6004      	str	r4, [r0, #0]
    d686:	600a      	str	r2, [r1, #0]
    d688:	4813      	ldr	r0, [pc, #76]	; (d6d8 <am_hal_adc_initialize+0x84>)
    d68a:	4d14      	ldr	r5, [pc, #80]	; (d6dc <am_hal_adc_initialize+0x88>)
    d68c:	f001 ff84 	bl	f598 <am_hal_flash_load_ui32>
    d690:	6028      	str	r0, [r5, #0]
    d692:	4813      	ldr	r0, [pc, #76]	; (d6e0 <am_hal_adc_initialize+0x8c>)
    d694:	f001 ff80 	bl	f598 <am_hal_flash_load_ui32>
    d698:	6068      	str	r0, [r5, #4]
    d69a:	4812      	ldr	r0, [pc, #72]	; (d6e4 <am_hal_adc_initialize+0x90>)
    d69c:	f001 ff7c 	bl	f598 <am_hal_flash_load_ui32>
    d6a0:	682b      	ldr	r3, [r5, #0]
    d6a2:	60a8      	str	r0, [r5, #8]
    d6a4:	3301      	adds	r3, #1
    d6a6:	d008      	beq.n	d6ba <am_hal_adc_initialize+0x66>
    d6a8:	686b      	ldr	r3, [r5, #4]
    d6aa:	3301      	adds	r3, #1
    d6ac:	d005      	beq.n	d6ba <am_hal_adc_initialize+0x66>
    d6ae:	3001      	adds	r0, #1
    d6b0:	d003      	beq.n	d6ba <am_hal_adc_initialize+0x66>
    d6b2:	2301      	movs	r3, #1
    d6b4:	732b      	strb	r3, [r5, #12]
    d6b6:	4620      	mov	r0, r4
    d6b8:	bd38      	pop	{r3, r4, r5, pc}
    d6ba:	490b      	ldr	r1, [pc, #44]	; (d6e8 <am_hal_adc_initialize+0x94>)
    d6bc:	4a0b      	ldr	r2, [pc, #44]	; (d6ec <am_hal_adc_initialize+0x98>)
    d6be:	4b0c      	ldr	r3, [pc, #48]	; (d6f0 <am_hal_adc_initialize+0x9c>)
    d6c0:	6029      	str	r1, [r5, #0]
    d6c2:	2000      	movs	r0, #0
    d6c4:	606a      	str	r2, [r5, #4]
    d6c6:	60ab      	str	r3, [r5, #8]
    d6c8:	7328      	strb	r0, [r5, #12]
    d6ca:	bd38      	pop	{r3, r4, r5, pc}
    d6cc:	10002484 	.word	0x10002484
    d6d0:	00afafaf 	.word	0x00afafaf
    d6d4:	10002480 	.word	0x10002480
    d6d8:	50023840 	.word	0x50023840
    d6dc:	10001c2c 	.word	0x10001c2c
    d6e0:	50023844 	.word	0x50023844
    d6e4:	50023848 	.word	0x50023848
    d6e8:	4395c000 	.word	0x4395c000
    d6ec:	3f839874 	.word	0x3f839874
    d6f0:	bb8c47a1 	.word	0xbb8c47a1

0000d6f4 <am_hal_adc_deinitialize>:
    d6f4:	b128      	cbz	r0, d702 <am_hal_adc_deinitialize+0xe>
    d6f6:	6803      	ldr	r3, [r0, #0]
    d6f8:	4a0c      	ldr	r2, [pc, #48]	; (d72c <am_hal_adc_deinitialize+0x38>)
    d6fa:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    d6fe:	4293      	cmp	r3, r2
    d700:	d001      	beq.n	d706 <am_hal_adc_deinitialize+0x12>
    d702:	2002      	movs	r0, #2
    d704:	4770      	bx	lr
    d706:	78c3      	ldrb	r3, [r0, #3]
    d708:	079b      	lsls	r3, r3, #30
    d70a:	d508      	bpl.n	d71e <am_hal_adc_deinitialize+0x2a>
    d70c:	4b08      	ldr	r3, [pc, #32]	; (d730 <am_hal_adc_deinitialize+0x3c>)
    d70e:	681a      	ldr	r2, [r3, #0]
    d710:	f36f 0200 	bfc	r2, #0, #1
    d714:	601a      	str	r2, [r3, #0]
    d716:	78c3      	ldrb	r3, [r0, #3]
    d718:	f36f 0341 	bfc	r3, #1, #1
    d71c:	70c3      	strb	r3, [r0, #3]
    d71e:	78c3      	ldrb	r3, [r0, #3]
    d720:	f36f 0300 	bfc	r3, #0, #1
    d724:	70c3      	strb	r3, [r0, #3]
    d726:	2000      	movs	r0, #0
    d728:	4770      	bx	lr
    d72a:	bf00      	nop
    d72c:	01afafaf 	.word	0x01afafaf
    d730:	50010000 	.word	0x50010000

0000d734 <am_hal_adc_configure>:
    d734:	b128      	cbz	r0, d742 <am_hal_adc_configure+0xe>
    d736:	6803      	ldr	r3, [r0, #0]
    d738:	4a18      	ldr	r2, [pc, #96]	; (d79c <am_hal_adc_configure+0x68>)
    d73a:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    d73e:	4293      	cmp	r3, r2
    d740:	d001      	beq.n	d746 <am_hal_adc_configure+0x12>
    d742:	2002      	movs	r0, #2
    d744:	4770      	bx	lr
    d746:	b5f0      	push	{r4, r5, r6, r7, lr}
    d748:	7808      	ldrb	r0, [r1, #0]
    d74a:	784d      	ldrb	r5, [r1, #1]
    d74c:	788c      	ldrb	r4, [r1, #2]
    d74e:	f891 e003 	ldrb.w	lr, [r1, #3]
    d752:	790f      	ldrb	r7, [r1, #4]
    d754:	794a      	ldrb	r2, [r1, #5]
    d756:	798b      	ldrb	r3, [r1, #6]
    d758:	4e11      	ldr	r6, [pc, #68]	; (d7a0 <am_hal_adc_configure+0x6c>)
    d75a:	0600      	lsls	r0, r0, #24
    d75c:	04ed      	lsls	r5, r5, #19
    d75e:	f405 2500 	and.w	r5, r5, #524288	; 0x80000
    d762:	f000 7040 	and.w	r0, r0, #50331648	; 0x3000000
    d766:	4328      	orrs	r0, r5
    d768:	0424      	lsls	r4, r4, #16
    d76a:	ea4f 210e 	mov.w	r1, lr, lsl #8
    d76e:	f440 5080 	orr.w	r0, r0, #4096	; 0x1000
    d772:	f404 24e0 	and.w	r4, r4, #458752	; 0x70000
    d776:	4304      	orrs	r4, r0
    d778:	f401 7040 	and.w	r0, r1, #768	; 0x300
    d77c:	0139      	lsls	r1, r7, #4
    d77e:	4320      	orrs	r0, r4
    d780:	f001 0110 	and.w	r1, r1, #16
    d784:	00d2      	lsls	r2, r2, #3
    d786:	4301      	orrs	r1, r0
    d788:	f002 0208 	and.w	r2, r2, #8
    d78c:	009b      	lsls	r3, r3, #2
    d78e:	430a      	orrs	r2, r1
    d790:	f003 0304 	and.w	r3, r3, #4
    d794:	4313      	orrs	r3, r2
    d796:	6033      	str	r3, [r6, #0]
    d798:	2000      	movs	r0, #0
    d79a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d79c:	01afafaf 	.word	0x01afafaf
    d7a0:	50010000 	.word	0x50010000

0000d7a4 <am_hal_adc_configure_slot>:
    d7a4:	b128      	cbz	r0, d7b2 <am_hal_adc_configure_slot+0xe>
    d7a6:	6803      	ldr	r3, [r0, #0]
    d7a8:	4816      	ldr	r0, [pc, #88]	; (d804 <am_hal_adc_configure_slot+0x60>)
    d7aa:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    d7ae:	4283      	cmp	r3, r0
    d7b0:	d001      	beq.n	d7b6 <am_hal_adc_configure_slot+0x12>
    d7b2:	2002      	movs	r0, #2
    d7b4:	4770      	bx	lr
    d7b6:	2907      	cmp	r1, #7
    d7b8:	d901      	bls.n	d7be <am_hal_adc_configure_slot+0x1a>
    d7ba:	2005      	movs	r0, #5
    d7bc:	4770      	bx	lr
    d7be:	b5f0      	push	{r4, r5, r6, r7, lr}
    d7c0:	7813      	ldrb	r3, [r2, #0]
    d7c2:	7854      	ldrb	r4, [r2, #1]
    d7c4:	7890      	ldrb	r0, [r2, #2]
    d7c6:	78d7      	ldrb	r7, [r2, #3]
    d7c8:	f892 e004 	ldrb.w	lr, [r2, #4]
    d7cc:	4d0e      	ldr	r5, [pc, #56]	; (d808 <am_hal_adc_configure_slot+0x64>)
    d7ce:	4e0f      	ldr	r6, [pc, #60]	; (d80c <am_hal_adc_configure_slot+0x68>)
    d7d0:	061b      	lsls	r3, r3, #24
    d7d2:	0424      	lsls	r4, r4, #16
    d7d4:	f404 3440 	and.w	r4, r4, #196608	; 0x30000
    d7d8:	f003 63e0 	and.w	r3, r3, #117440512	; 0x7000000
    d7dc:	4323      	orrs	r3, r4
    d7de:	0202      	lsls	r2, r0, #8
    d7e0:	ea43 0e0e 	orr.w	lr, r3, lr
    d7e4:	440d      	add	r5, r1
    d7e6:	007b      	lsls	r3, r7, #1
    d7e8:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    d7ec:	ea4e 0202 	orr.w	r2, lr, r2
    d7f0:	00ad      	lsls	r5, r5, #2
    d7f2:	f003 0302 	and.w	r3, r3, #2
    d7f6:	4313      	orrs	r3, r2
    d7f8:	602b      	str	r3, [r5, #0]
    d7fa:	6833      	ldr	r3, [r6, #0]
    d7fc:	3301      	adds	r3, #1
    d7fe:	6033      	str	r3, [r6, #0]
    d800:	2000      	movs	r0, #0
    d802:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d804:	01afafaf 	.word	0x01afafaf
    d808:	14004003 	.word	0x14004003
    d80c:	10002480 	.word	0x10002480

0000d810 <am_hal_adc_enable>:
    d810:	4603      	mov	r3, r0
    d812:	b128      	cbz	r0, d820 <am_hal_adc_enable+0x10>
    d814:	6802      	ldr	r2, [r0, #0]
    d816:	490c      	ldr	r1, [pc, #48]	; (d848 <am_hal_adc_enable+0x38>)
    d818:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    d81c:	428a      	cmp	r2, r1
    d81e:	d001      	beq.n	d824 <am_hal_adc_enable+0x14>
    d820:	2002      	movs	r0, #2
    d822:	4770      	bx	lr
    d824:	78c2      	ldrb	r2, [r0, #3]
    d826:	f002 0202 	and.w	r2, r2, #2
    d82a:	f002 00ff 	and.w	r0, r2, #255	; 0xff
    d82e:	b94a      	cbnz	r2, d844 <am_hal_adc_enable+0x34>
    d830:	4906      	ldr	r1, [pc, #24]	; (d84c <am_hal_adc_enable+0x3c>)
    d832:	680a      	ldr	r2, [r1, #0]
    d834:	f042 0201 	orr.w	r2, r2, #1
    d838:	600a      	str	r2, [r1, #0]
    d83a:	78da      	ldrb	r2, [r3, #3]
    d83c:	f042 0202 	orr.w	r2, r2, #2
    d840:	70da      	strb	r2, [r3, #3]
    d842:	4770      	bx	lr
    d844:	2000      	movs	r0, #0
    d846:	4770      	bx	lr
    d848:	01afafaf 	.word	0x01afafaf
    d84c:	50010000 	.word	0x50010000

0000d850 <am_hal_adc_disable>:
    d850:	b128      	cbz	r0, d85e <am_hal_adc_disable+0xe>
    d852:	6803      	ldr	r3, [r0, #0]
    d854:	4a08      	ldr	r2, [pc, #32]	; (d878 <am_hal_adc_disable+0x28>)
    d856:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    d85a:	4293      	cmp	r3, r2
    d85c:	d001      	beq.n	d862 <am_hal_adc_disable+0x12>
    d85e:	2002      	movs	r0, #2
    d860:	4770      	bx	lr
    d862:	4b06      	ldr	r3, [pc, #24]	; (d87c <am_hal_adc_disable+0x2c>)
    d864:	681a      	ldr	r2, [r3, #0]
    d866:	f36f 0200 	bfc	r2, #0, #1
    d86a:	601a      	str	r2, [r3, #0]
    d86c:	78c3      	ldrb	r3, [r0, #3]
    d86e:	f36f 0341 	bfc	r3, #1, #1
    d872:	70c3      	strb	r3, [r0, #3]
    d874:	2000      	movs	r0, #0
    d876:	4770      	bx	lr
    d878:	01afafaf 	.word	0x01afafaf
    d87c:	50010000 	.word	0x50010000

0000d880 <am_hal_adc_interrupt_enable>:
    d880:	b128      	cbz	r0, d88e <am_hal_adc_interrupt_enable+0xe>
    d882:	6803      	ldr	r3, [r0, #0]
    d884:	4a07      	ldr	r2, [pc, #28]	; (d8a4 <am_hal_adc_interrupt_enable+0x24>)
    d886:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    d88a:	4293      	cmp	r3, r2
    d88c:	d001      	beq.n	d892 <am_hal_adc_interrupt_enable+0x12>
    d88e:	2002      	movs	r0, #2
    d890:	4770      	bx	lr
    d892:	4b05      	ldr	r3, [pc, #20]	; (d8a8 <am_hal_adc_interrupt_enable+0x28>)
    d894:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
    d898:	4311      	orrs	r1, r2
    d89a:	f8c3 1200 	str.w	r1, [r3, #512]	; 0x200
    d89e:	2000      	movs	r0, #0
    d8a0:	4770      	bx	lr
    d8a2:	bf00      	nop
    d8a4:	01afafaf 	.word	0x01afafaf
    d8a8:	50010000 	.word	0x50010000

0000d8ac <am_hal_adc_interrupt_status>:
    d8ac:	b128      	cbz	r0, d8ba <am_hal_adc_interrupt_status+0xe>
    d8ae:	6803      	ldr	r3, [r0, #0]
    d8b0:	480b      	ldr	r0, [pc, #44]	; (d8e0 <am_hal_adc_interrupt_status+0x34>)
    d8b2:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    d8b6:	4283      	cmp	r3, r0
    d8b8:	d001      	beq.n	d8be <am_hal_adc_interrupt_status+0x12>
    d8ba:	2002      	movs	r0, #2
    d8bc:	4770      	bx	lr
    d8be:	b92a      	cbnz	r2, d8cc <am_hal_adc_interrupt_status+0x20>
    d8c0:	4b08      	ldr	r3, [pc, #32]	; (d8e4 <am_hal_adc_interrupt_status+0x38>)
    d8c2:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
    d8c6:	600b      	str	r3, [r1, #0]
    d8c8:	4610      	mov	r0, r2
    d8ca:	4770      	bx	lr
    d8cc:	4a05      	ldr	r2, [pc, #20]	; (d8e4 <am_hal_adc_interrupt_status+0x38>)
    d8ce:	f8d2 0204 	ldr.w	r0, [r2, #516]	; 0x204
    d8d2:	f8d2 3200 	ldr.w	r3, [r2, #512]	; 0x200
    d8d6:	4003      	ands	r3, r0
    d8d8:	600b      	str	r3, [r1, #0]
    d8da:	2000      	movs	r0, #0
    d8dc:	4770      	bx	lr
    d8de:	bf00      	nop
    d8e0:	01afafaf 	.word	0x01afafaf
    d8e4:	50010000 	.word	0x50010000

0000d8e8 <am_hal_adc_interrupt_clear>:
    d8e8:	b128      	cbz	r0, d8f6 <am_hal_adc_interrupt_clear+0xe>
    d8ea:	6803      	ldr	r3, [r0, #0]
    d8ec:	4a05      	ldr	r2, [pc, #20]	; (d904 <am_hal_adc_interrupt_clear+0x1c>)
    d8ee:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    d8f2:	4293      	cmp	r3, r2
    d8f4:	d001      	beq.n	d8fa <am_hal_adc_interrupt_clear+0x12>
    d8f6:	2002      	movs	r0, #2
    d8f8:	4770      	bx	lr
    d8fa:	4b03      	ldr	r3, [pc, #12]	; (d908 <am_hal_adc_interrupt_clear+0x20>)
    d8fc:	2000      	movs	r0, #0
    d8fe:	f8c3 1208 	str.w	r1, [r3, #520]	; 0x208
    d902:	4770      	bx	lr
    d904:	01afafaf 	.word	0x01afafaf
    d908:	50010000 	.word	0x50010000

0000d90c <am_hal_adc_samples_read>:
    d90c:	b148      	cbz	r0, d922 <am_hal_adc_samples_read+0x16>
    d90e:	6800      	ldr	r0, [r0, #0]
    d910:	b470      	push	{r4, r5, r6}
    d912:	4c2a      	ldr	r4, [pc, #168]	; (d9bc <am_hal_adc_samples_read+0xb0>)
    d914:	f020 407e 	bic.w	r0, r0, #4261412864	; 0xfe000000
    d918:	42a0      	cmp	r0, r4
    d91a:	d004      	beq.n	d926 <am_hal_adc_samples_read+0x1a>
    d91c:	2002      	movs	r0, #2
    d91e:	bc70      	pop	{r4, r5, r6}
    d920:	4770      	bx	lr
    d922:	2002      	movs	r0, #2
    d924:	4770      	bx	lr
    d926:	9803      	ldr	r0, [sp, #12]
    d928:	b1e0      	cbz	r0, d964 <am_hal_adc_samples_read+0x58>
    d92a:	2000      	movs	r0, #0
    d92c:	681c      	ldr	r4, [r3, #0]
    d92e:	6018      	str	r0, [r3, #0]
    d930:	b1d2      	cbz	r2, d968 <am_hal_adc_samples_read+0x5c>
    d932:	9903      	ldr	r1, [sp, #12]
    d934:	4d22      	ldr	r5, [pc, #136]	; (d9c0 <am_hal_adc_samples_read+0xb4>)
    d936:	3a04      	subs	r2, #4
    d938:	3108      	adds	r1, #8
    d93a:	f852 0f04 	ldr.w	r0, [r2, #4]!
    d93e:	6bee      	ldr	r6, [r5, #60]	; 0x3c
    d940:	f3c0 7002 	ubfx	r0, r0, #28, #3
    d944:	f841 0c04 	str.w	r0, [r1, #-4]
    d948:	6810      	ldr	r0, [r2, #0]
    d94a:	f3c0 108d 	ubfx	r0, r0, #6, #14
    d94e:	f841 0c08 	str.w	r0, [r1, #-8]
    d952:	6818      	ldr	r0, [r3, #0]
    d954:	3001      	adds	r0, #1
    d956:	4284      	cmp	r4, r0
    d958:	f101 0108 	add.w	r1, r1, #8
    d95c:	6018      	str	r0, [r3, #0]
    d95e:	d8ec      	bhi.n	d93a <am_hal_adc_samples_read+0x2e>
    d960:	2000      	movs	r0, #0
    d962:	e7dc      	b.n	d91e <am_hal_adc_samples_read+0x12>
    d964:	2006      	movs	r0, #6
    d966:	e7da      	b.n	d91e <am_hal_adc_samples_read+0x12>
    d968:	9a03      	ldr	r2, [sp, #12]
    d96a:	4e15      	ldr	r6, [pc, #84]	; (d9c0 <am_hal_adc_samples_read+0xb4>)
    d96c:	f102 0008 	add.w	r0, r2, #8
    d970:	b9a1      	cbnz	r1, d99c <am_hal_adc_samples_read+0x90>
    d972:	e001      	b.n	d978 <am_hal_adc_samples_read+0x6c>
    d974:	428c      	cmp	r4, r1
    d976:	d9f3      	bls.n	d960 <am_hal_adc_samples_read+0x54>
    d978:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
    d97a:	f3c2 118d 	ubfx	r1, r2, #6, #14
    d97e:	f3c2 7502 	ubfx	r5, r2, #28, #3
    d982:	e900 0022 	stmdb	r0, {r1, r5}
    d986:	6819      	ldr	r1, [r3, #0]
    d988:	f3c2 5207 	ubfx	r2, r2, #20, #8
    d98c:	3101      	adds	r1, #1
    d98e:	3008      	adds	r0, #8
    d990:	6019      	str	r1, [r3, #0]
    d992:	2a00      	cmp	r2, #0
    d994:	d1ee      	bne.n	d974 <am_hal_adc_samples_read+0x68>
    d996:	e7e3      	b.n	d960 <am_hal_adc_samples_read+0x54>
    d998:	428c      	cmp	r4, r1
    d99a:	d9e1      	bls.n	d960 <am_hal_adc_samples_read+0x54>
    d99c:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
    d99e:	f3c2 0113 	ubfx	r1, r2, #0, #20
    d9a2:	f3c2 7502 	ubfx	r5, r2, #28, #3
    d9a6:	e900 0022 	stmdb	r0, {r1, r5}
    d9aa:	6819      	ldr	r1, [r3, #0]
    d9ac:	f3c2 5207 	ubfx	r2, r2, #20, #8
    d9b0:	3101      	adds	r1, #1
    d9b2:	3008      	adds	r0, #8
    d9b4:	6019      	str	r1, [r3, #0]
    d9b6:	2a00      	cmp	r2, #0
    d9b8:	d1ee      	bne.n	d998 <am_hal_adc_samples_read+0x8c>
    d9ba:	e7d1      	b.n	d960 <am_hal_adc_samples_read+0x54>
    d9bc:	01afafaf 	.word	0x01afafaf
    d9c0:	50010000 	.word	0x50010000

0000d9c4 <am_hal_adc_sw_trigger>:
    d9c4:	b128      	cbz	r0, d9d2 <am_hal_adc_sw_trigger+0xe>
    d9c6:	6803      	ldr	r3, [r0, #0]
    d9c8:	4a05      	ldr	r2, [pc, #20]	; (d9e0 <am_hal_adc_sw_trigger+0x1c>)
    d9ca:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    d9ce:	4293      	cmp	r3, r2
    d9d0:	d001      	beq.n	d9d6 <am_hal_adc_sw_trigger+0x12>
    d9d2:	2002      	movs	r0, #2
    d9d4:	4770      	bx	lr
    d9d6:	4b03      	ldr	r3, [pc, #12]	; (d9e4 <am_hal_adc_sw_trigger+0x20>)
    d9d8:	2237      	movs	r2, #55	; 0x37
    d9da:	609a      	str	r2, [r3, #8]
    d9dc:	2000      	movs	r0, #0
    d9de:	4770      	bx	lr
    d9e0:	01afafaf 	.word	0x01afafaf
    d9e4:	50010000 	.word	0x50010000

0000d9e8 <am_hal_adc_power_control>:
    d9e8:	b140      	cbz	r0, d9fc <am_hal_adc_power_control+0x14>
    d9ea:	6803      	ldr	r3, [r0, #0]
    d9ec:	b570      	push	{r4, r5, r6, lr}
    d9ee:	4c2e      	ldr	r4, [pc, #184]	; (daa8 <am_hal_adc_power_control+0xc0>)
    d9f0:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    d9f4:	42a3      	cmp	r3, r4
    d9f6:	d003      	beq.n	da00 <am_hal_adc_power_control+0x18>
    d9f8:	2002      	movs	r0, #2
    d9fa:	bd70      	pop	{r4, r5, r6, pc}
    d9fc:	2002      	movs	r0, #2
    d9fe:	4770      	bx	lr
    da00:	4604      	mov	r4, r0
    da02:	4615      	mov	r5, r2
    da04:	460e      	mov	r6, r1
    da06:	b329      	cbz	r1, da54 <am_hal_adc_power_control+0x6c>
    da08:	2902      	cmp	r1, #2
    da0a:	d821      	bhi.n	da50 <am_hal_adc_power_control+0x68>
    da0c:	b1da      	cbz	r2, da46 <am_hal_adc_power_control+0x5e>
    da0e:	4b27      	ldr	r3, [pc, #156]	; (daac <am_hal_adc_power_control+0xc4>)
    da10:	68da      	ldr	r2, [r3, #12]
    da12:	6142      	str	r2, [r0, #20]
    da14:	691a      	ldr	r2, [r3, #16]
    da16:	6182      	str	r2, [r0, #24]
    da18:	695a      	ldr	r2, [r3, #20]
    da1a:	61c2      	str	r2, [r0, #28]
    da1c:	699a      	ldr	r2, [r3, #24]
    da1e:	6202      	str	r2, [r0, #32]
    da20:	69da      	ldr	r2, [r3, #28]
    da22:	6242      	str	r2, [r0, #36]	; 0x24
    da24:	6a1a      	ldr	r2, [r3, #32]
    da26:	6282      	str	r2, [r0, #40]	; 0x28
    da28:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    da2a:	62c2      	str	r2, [r0, #44]	; 0x2c
    da2c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    da2e:	6302      	str	r2, [r0, #48]	; 0x30
    da30:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    da32:	6342      	str	r2, [r0, #52]	; 0x34
    da34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    da36:	6382      	str	r2, [r0, #56]	; 0x38
    da38:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
    da3c:	63c2      	str	r2, [r0, #60]	; 0x3c
    da3e:	681b      	ldr	r3, [r3, #0]
    da40:	6103      	str	r3, [r0, #16]
    da42:	2301      	movs	r3, #1
    da44:	7303      	strb	r3, [r0, #12]
    da46:	200a      	movs	r0, #10
    da48:	f002 f884 	bl	fb54 <am_hal_pwrctrl_periph_disable>
    da4c:	2000      	movs	r0, #0
    da4e:	bd70      	pop	{r4, r5, r6, pc}
    da50:	2006      	movs	r0, #6
    da52:	bd70      	pop	{r4, r5, r6, pc}
    da54:	b11a      	cbz	r2, da5e <am_hal_adc_power_control+0x76>
    da56:	7b03      	ldrb	r3, [r0, #12]
    da58:	b933      	cbnz	r3, da68 <am_hal_adc_power_control+0x80>
    da5a:	2007      	movs	r0, #7
    da5c:	bd70      	pop	{r4, r5, r6, pc}
    da5e:	200a      	movs	r0, #10
    da60:	f002 f84e 	bl	fb00 <am_hal_pwrctrl_periph_enable>
    da64:	4628      	mov	r0, r5
    da66:	bd70      	pop	{r4, r5, r6, pc}
    da68:	200a      	movs	r0, #10
    da6a:	f002 f849 	bl	fb00 <am_hal_pwrctrl_periph_enable>
    da6e:	4b0f      	ldr	r3, [pc, #60]	; (daac <am_hal_adc_power_control+0xc4>)
    da70:	6962      	ldr	r2, [r4, #20]
    da72:	60da      	str	r2, [r3, #12]
    da74:	69a2      	ldr	r2, [r4, #24]
    da76:	611a      	str	r2, [r3, #16]
    da78:	69e2      	ldr	r2, [r4, #28]
    da7a:	615a      	str	r2, [r3, #20]
    da7c:	6a22      	ldr	r2, [r4, #32]
    da7e:	619a      	str	r2, [r3, #24]
    da80:	6a62      	ldr	r2, [r4, #36]	; 0x24
    da82:	61da      	str	r2, [r3, #28]
    da84:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    da86:	621a      	str	r2, [r3, #32]
    da88:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    da8a:	625a      	str	r2, [r3, #36]	; 0x24
    da8c:	6b22      	ldr	r2, [r4, #48]	; 0x30
    da8e:	629a      	str	r2, [r3, #40]	; 0x28
    da90:	6b62      	ldr	r2, [r4, #52]	; 0x34
    da92:	62da      	str	r2, [r3, #44]	; 0x2c
    da94:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    da96:	631a      	str	r2, [r3, #48]	; 0x30
    da98:	6be2      	ldr	r2, [r4, #60]	; 0x3c
    da9a:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
    da9e:	6922      	ldr	r2, [r4, #16]
    daa0:	601a      	str	r2, [r3, #0]
    daa2:	4630      	mov	r0, r6
    daa4:	7326      	strb	r6, [r4, #12]
    daa6:	bd70      	pop	{r4, r5, r6, pc}
    daa8:	01afafaf 	.word	0x01afafaf
    daac:	50010000 	.word	0x50010000

0000dab0 <am_hal_ble_blocking_transfer.part.7>:
    dab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dab4:	4dcb      	ldr	r5, [pc, #812]	; (dde4 <am_hal_ble_blocking_transfer.part.7+0x334>)
    dab6:	f8d5 8220 	ldr.w	r8, [r5, #544]	; 0x220
    daba:	f8d5 3220 	ldr.w	r3, [r5, #544]	; 0x220
    dabe:	f36f 13c7 	bfc	r3, #7, #1
    dac2:	f8c5 3220 	str.w	r3, [r5, #544]	; 0x220
    dac6:	f8d5 3220 	ldr.w	r3, [r5, #544]	; 0x220
    daca:	f36f 2308 	bfc	r3, #8, #1
    dace:	f8c5 3220 	str.w	r3, [r5, #544]	; 0x220
    dad2:	f8d5 3220 	ldr.w	r3, [r5, #544]	; 0x220
    dad6:	f36f 0300 	bfc	r3, #0, #1
    dada:	f8c5 3220 	str.w	r3, [r5, #544]	; 0x220
    dade:	f8d5 3220 	ldr.w	r3, [r5, #544]	; 0x220
    dae2:	f36f 0341 	bfc	r3, #1, #1
    dae6:	f8c5 3220 	str.w	r3, [r5, #544]	; 0x220
    daea:	f8d5 3228 	ldr.w	r3, [r5, #552]	; 0x228
    daee:	f043 0301 	orr.w	r3, r3, #1
    daf2:	f8c5 3228 	str.w	r3, [r5, #552]	; 0x228
    daf6:	f8d5 3228 	ldr.w	r3, [r5, #552]	; 0x228
    dafa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    dafe:	f8c5 3228 	str.w	r3, [r5, #552]	; 0x228
    db02:	7a8b      	ldrb	r3, [r1, #10]
    db04:	2b01      	cmp	r3, #1
    db06:	b085      	sub	sp, #20
    db08:	460e      	mov	r6, r1
    db0a:	4604      	mov	r4, r0
    db0c:	d00a      	beq.n	db24 <am_hal_ble_blocking_transfer.part.7+0x74>
    db0e:	f8d5 330c 	ldr.w	r3, [r5, #780]	; 0x30c
    db12:	061f      	lsls	r7, r3, #24
    db14:	f100 8123 	bmi.w	dd5e <am_hal_ble_blocking_transfer.part.7+0x2ae>
    db18:	48b3      	ldr	r0, [pc, #716]	; (dde8 <am_hal_ble_blocking_transfer.part.7+0x338>)
    db1a:	f8c5 8220 	str.w	r8, [r5, #544]	; 0x220
    db1e:	b005      	add	sp, #20
    db20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    db24:	f890 3042 	ldrb.w	r3, [r0, #66]	; 0x42
    db28:	2b00      	cmp	r3, #0
    db2a:	f000 80e6 	beq.w	dcfa <am_hal_ble_blocking_transfer.part.7+0x24a>
    db2e:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
    db32:	2b00      	cmp	r3, #0
    db34:	f000 81f2 	beq.w	df1c <am_hal_ble_blocking_transfer.part.7+0x46c>
    db38:	2200      	movs	r2, #0
    db3a:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    db3e:	b1a3      	cbz	r3, db6a <am_hal_ble_blocking_transfer.part.7+0xba>
    db40:	f8df 92a0 	ldr.w	r9, [pc, #672]	; dde4 <am_hal_ble_blocking_transfer.part.7+0x334>
    db44:	f240 152d 	movw	r5, #301	; 0x12d
    db48:	2700      	movs	r7, #0
    db4a:	e006      	b.n	db5a <am_hal_ble_blocking_transfer.part.7+0xaa>
    db4c:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
    db50:	20a0      	movs	r0, #160	; 0xa0
    db52:	f001 fcd7 	bl	f504 <am_hal_flash_delay>
    db56:	3d01      	subs	r5, #1
    db58:	d007      	beq.n	db6a <am_hal_ble_blocking_transfer.part.7+0xba>
    db5a:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
    db5e:	2b00      	cmp	r3, #0
    db60:	d1f4      	bne.n	db4c <am_hal_ble_blocking_transfer.part.7+0x9c>
    db62:	f8d9 330c 	ldr.w	r3, [r9, #780]	; 0x30c
    db66:	0718      	lsls	r0, r3, #28
    db68:	d4f2      	bmi.n	db50 <am_hal_ble_blocking_transfer.part.7+0xa0>
    db6a:	4a9e      	ldr	r2, [pc, #632]	; (dde4 <am_hal_ble_blocking_transfer.part.7+0x334>)
    db6c:	f8d2 3410 	ldr.w	r3, [r2, #1040]	; 0x410
    db70:	f043 0302 	orr.w	r3, r3, #2
    db74:	f8c2 3410 	str.w	r3, [r2, #1040]	; 0x410
    db78:	2050      	movs	r0, #80	; 0x50
    db7a:	f001 fcc3 	bl	f504 <am_hal_flash_delay>
    db7e:	6823      	ldr	r3, [r4, #0]
    db80:	4a9a      	ldr	r2, [pc, #616]	; (ddec <am_hal_ble_blocking_transfer.part.7+0x33c>)
    db82:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    db86:	4293      	cmp	r3, r2
    db88:	f000 81d5 	beq.w	df36 <am_hal_ble_blocking_transfer.part.7+0x486>
    db8c:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
    db90:	f8df 9250 	ldr.w	r9, [pc, #592]	; dde4 <am_hal_ble_blocking_transfer.part.7+0x334>
    db94:	2500      	movs	r5, #0
    db96:	46aa      	mov	sl, r5
    db98:	2b00      	cmp	r3, #0
    db9a:	f040 80c6 	bne.w	dd2a <am_hal_ble_blocking_transfer.part.7+0x27a>
    db9e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
    dba2:	2b00      	cmp	r3, #0
    dba4:	f040 80ac 	bne.w	dd00 <am_hal_ble_blocking_transfer.part.7+0x250>
    dba8:	f8d9 330c 	ldr.w	r3, [r9, #780]	; 0x30c
    dbac:	0719      	lsls	r1, r3, #28
    dbae:	f140 80ac 	bpl.w	dd0a <am_hal_ble_blocking_transfer.part.7+0x25a>
    dbb2:	f001 feb1 	bl	f918 <am_hal_interrupt_master_disable>
    dbb6:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
    dbba:	9002      	str	r0, [sp, #8]
    dbbc:	9802      	ldr	r0, [sp, #8]
    dbbe:	2f00      	cmp	r7, #0
    dbc0:	f040 80b6 	bne.w	dd30 <am_hal_ble_blocking_transfer.part.7+0x280>
    dbc4:	2301      	movs	r3, #1
    dbc6:	6463      	str	r3, [r4, #68]	; 0x44
    dbc8:	f001 feaa 	bl	f920 <am_hal_interrupt_master_set>
    dbcc:	4b85      	ldr	r3, [pc, #532]	; (dde4 <am_hal_ble_blocking_transfer.part.7+0x334>)
    dbce:	f8d3 2410 	ldr.w	r2, [r3, #1040]	; 0x410
    dbd2:	f367 0241 	bfi	r2, r7, #1, #1
    dbd6:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
    dbda:	7b33      	ldrb	r3, [r6, #12]
    dbdc:	2b00      	cmp	r3, #0
    dbde:	f000 80cb 	beq.w	dd78 <am_hal_ble_blocking_transfer.part.7+0x2c8>
    dbe2:	2301      	movs	r3, #1
    dbe4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    dbe8:	f104 070c 	add.w	r7, r4, #12
    dbec:	6833      	ldr	r3, [r6, #0]
    dbee:	6872      	ldr	r2, [r6, #4]
    dbf0:	68b0      	ldr	r0, [r6, #8]
    dbf2:	68f1      	ldr	r1, [r6, #12]
    dbf4:	60e3      	str	r3, [r4, #12]
    dbf6:	607a      	str	r2, [r7, #4]
    dbf8:	60b8      	str	r0, [r7, #8]
    dbfa:	60f9      	str	r1, [r7, #12]
    dbfc:	6933      	ldr	r3, [r6, #16]
    dbfe:	6972      	ldr	r2, [r6, #20]
    dc00:	617a      	str	r2, [r7, #20]
    dc02:	613b      	str	r3, [r7, #16]
    dc04:	f001 fe88 	bl	f918 <am_hal_interrupt_master_disable>
    dc08:	9001      	str	r0, [sp, #4]
    dc0a:	6823      	ldr	r3, [r4, #0]
    dc0c:	4a77      	ldr	r2, [pc, #476]	; (ddec <am_hal_ble_blocking_transfer.part.7+0x33c>)
    dc0e:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    dc12:	4293      	cmp	r3, r2
    dc14:	f000 8197 	beq.w	df46 <am_hal_ble_blocking_transfer.part.7+0x496>
    dc18:	7ab3      	ldrb	r3, [r6, #10]
    dc1a:	2b01      	cmp	r3, #1
    dc1c:	f000 8185 	beq.w	df2a <am_hal_ble_blocking_transfer.part.7+0x47a>
    dc20:	6be5      	ldr	r5, [r4, #60]	; 0x3c
    dc22:	f8b4 9014 	ldrh.w	r9, [r4, #20]
    dc26:	f8df c1c4 	ldr.w	ip, [pc, #452]	; ddec <am_hal_ble_blocking_transfer.part.7+0x33c>
    dc2a:	496e      	ldr	r1, [pc, #440]	; (dde4 <am_hal_ble_blocking_transfer.part.7+0x334>)
    dc2c:	f04f 0e00 	mov.w	lr, #0
    dc30:	45a9      	cmp	r9, r5
    dc32:	d926      	bls.n	dc82 <am_hal_ble_blocking_transfer.part.7+0x1d2>
    dc34:	6823      	ldr	r3, [r4, #0]
    dc36:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    dc3a:	4563      	cmp	r3, ip
    dc3c:	d1f8      	bne.n	dc30 <am_hal_ble_blocking_transfer.part.7+0x180>
    dc3e:	f8d1 0100 	ldr.w	r0, [r1, #256]	; 0x100
    dc42:	f3c0 4007 	ubfx	r0, r0, #16, #8
    dc46:	2803      	cmp	r0, #3
    dc48:	d9f2      	bls.n	dc30 <am_hal_ble_blocking_transfer.part.7+0x180>
    dc4a:	4581      	cmp	r9, r0
    dc4c:	bf94      	ite	ls
    dc4e:	ebc5 0009 	rsbls	r0, r5, r9
    dc52:	f020 0003 	bichi.w	r0, r0, #3
    dc56:	68e2      	ldr	r2, [r4, #12]
    dc58:	f025 0303 	bic.w	r3, r5, #3
    dc5c:	b168      	cbz	r0, dc7a <am_hal_ble_blocking_transfer.part.7+0x1ca>
    dc5e:	441a      	add	r2, r3
    dc60:	2300      	movs	r3, #0
    dc62:	3304      	adds	r3, #4
    dc64:	f8d1 5108 	ldr.w	r5, [r1, #264]	; 0x108
    dc68:	f842 5b04 	str.w	r5, [r2], #4
    dc6c:	4283      	cmp	r3, r0
    dc6e:	f8c1 e108 	str.w	lr, [r1, #264]	; 0x108
    dc72:	d3f6      	bcc.n	dc62 <am_hal_ble_blocking_transfer.part.7+0x1b2>
    dc74:	6be5      	ldr	r5, [r4, #60]	; 0x3c
    dc76:	f8b4 9014 	ldrh.w	r9, [r4, #20]
    dc7a:	4405      	add	r5, r0
    dc7c:	45a9      	cmp	r9, r5
    dc7e:	63e5      	str	r5, [r4, #60]	; 0x3c
    dc80:	d8d8      	bhi.n	dc34 <am_hal_ble_blocking_transfer.part.7+0x184>
    dc82:	9801      	ldr	r0, [sp, #4]
    dc84:	f001 fe4c 	bl	f920 <am_hal_interrupt_master_set>
    dc88:	4b56      	ldr	r3, [pc, #344]	; (dde4 <am_hal_ble_blocking_transfer.part.7+0x334>)
    dc8a:	f8d3 2224 	ldr.w	r2, [r3, #548]	; 0x224
    dc8e:	07d2      	lsls	r2, r2, #31
    dc90:	d40d      	bmi.n	dcae <am_hal_ble_blocking_transfer.part.7+0x1fe>
    dc92:	4699      	mov	r9, r3
    dc94:	f242 7510 	movw	r5, #10000	; 0x2710
    dc98:	e002      	b.n	dca0 <am_hal_ble_blocking_transfer.part.7+0x1f0>
    dc9a:	3d01      	subs	r5, #1
    dc9c:	f000 8149 	beq.w	df32 <am_hal_ble_blocking_transfer.part.7+0x482>
    dca0:	2010      	movs	r0, #16
    dca2:	f001 fc2f 	bl	f504 <am_hal_flash_delay>
    dca6:	f8d9 3224 	ldr.w	r3, [r9, #548]	; 0x224
    dcaa:	07db      	lsls	r3, r3, #31
    dcac:	d5f5      	bpl.n	dc9a <am_hal_ble_blocking_transfer.part.7+0x1ea>
    dcae:	4a4d      	ldr	r2, [pc, #308]	; (dde4 <am_hal_ble_blocking_transfer.part.7+0x334>)
    dcb0:	f8d2 3228 	ldr.w	r3, [r2, #552]	; 0x228
    dcb4:	f043 0301 	orr.w	r3, r3, #1
    dcb8:	f8c2 3228 	str.w	r3, [r2, #552]	; 0x228
    dcbc:	f8d2 1228 	ldr.w	r1, [r2, #552]	; 0x228
    dcc0:	2300      	movs	r3, #0
    dcc2:	f041 0102 	orr.w	r1, r1, #2
    dcc6:	f8c2 1228 	str.w	r1, [r2, #552]	; 0x228
    dcca:	603b      	str	r3, [r7, #0]
    dccc:	607b      	str	r3, [r7, #4]
    dcce:	60bb      	str	r3, [r7, #8]
    dcd0:	60fb      	str	r3, [r7, #12]
    dcd2:	613b      	str	r3, [r7, #16]
    dcd4:	617b      	str	r3, [r7, #20]
    dcd6:	63e3      	str	r3, [r4, #60]	; 0x3c
    dcd8:	7ab3      	ldrb	r3, [r6, #10]
    dcda:	2b01      	cmp	r3, #1
    dcdc:	f000 8113 	beq.w	df06 <am_hal_ble_blocking_transfer.part.7+0x456>
    dce0:	2b02      	cmp	r3, #2
    dce2:	f000 8107 	beq.w	def4 <am_hal_ble_blocking_transfer.part.7+0x444>
    dce6:	2300      	movs	r3, #0
    dce8:	4a3e      	ldr	r2, [pc, #248]	; (dde4 <am_hal_ble_blocking_transfer.part.7+0x334>)
    dcea:	4618      	mov	r0, r3
    dcec:	f8c2 8220 	str.w	r8, [r2, #544]	; 0x220
    dcf0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
    dcf4:	b005      	add	sp, #20
    dcf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dcfa:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
    dcfe:	e71e      	b.n	db3e <am_hal_ble_blocking_transfer.part.7+0x8e>
    dd00:	f8d9 3224 	ldr.w	r3, [r9, #548]	; 0x224
    dd04:	05da      	lsls	r2, r3, #23
    dd06:	f53f af54 	bmi.w	dbb2 <am_hal_ble_blocking_transfer.part.7+0x102>
    dd0a:	f5b5 7f96 	cmp.w	r5, #300	; 0x12c
    dd0e:	d012      	beq.n	dd36 <am_hal_ble_blocking_transfer.part.7+0x286>
    dd10:	f8d9 330c 	ldr.w	r3, [r9, #780]	; 0x30c
    dd14:	061b      	lsls	r3, r3, #24
    dd16:	d40e      	bmi.n	dd36 <am_hal_ble_blocking_transfer.part.7+0x286>
    dd18:	20a0      	movs	r0, #160	; 0xa0
    dd1a:	f001 fbf3 	bl	f504 <am_hal_flash_delay>
    dd1e:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
    dd22:	3501      	adds	r5, #1
    dd24:	2b00      	cmp	r3, #0
    dd26:	f43f af3a 	beq.w	db9e <am_hal_ble_blocking_transfer.part.7+0xee>
    dd2a:	f884 a041 	strb.w	sl, [r4, #65]	; 0x41
    dd2e:	e740      	b.n	dbb2 <am_hal_ble_blocking_transfer.part.7+0x102>
    dd30:	f001 fdf6 	bl	f920 <am_hal_interrupt_master_set>
    dd34:	e7f0      	b.n	dd18 <am_hal_ble_blocking_transfer.part.7+0x268>
    dd36:	6823      	ldr	r3, [r4, #0]
    dd38:	4a2c      	ldr	r2, [pc, #176]	; (ddec <am_hal_ble_blocking_transfer.part.7+0x33c>)
    dd3a:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    dd3e:	4293      	cmp	r3, r2
    dd40:	f000 811e 	beq.w	df80 <am_hal_ble_blocking_transfer.part.7+0x4d0>
    dd44:	4b27      	ldr	r3, [pc, #156]	; (dde4 <am_hal_ble_blocking_transfer.part.7+0x334>)
    dd46:	482a      	ldr	r0, [pc, #168]	; (ddf0 <am_hal_ble_blocking_transfer.part.7+0x340>)
    dd48:	f8d3 2410 	ldr.w	r2, [r3, #1040]	; 0x410
    dd4c:	f36f 0241 	bfc	r2, #1, #1
    dd50:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
    dd54:	f8c3 8220 	str.w	r8, [r3, #544]	; 0x220
    dd58:	b005      	add	sp, #20
    dd5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dd5e:	f001 fddb 	bl	f918 <am_hal_interrupt_master_disable>
    dd62:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    dd66:	9003      	str	r0, [sp, #12]
    dd68:	9803      	ldr	r0, [sp, #12]
    dd6a:	2b00      	cmp	r3, #0
    dd6c:	d157      	bne.n	de1e <am_hal_ble_blocking_transfer.part.7+0x36e>
    dd6e:	2301      	movs	r3, #1
    dd70:	6463      	str	r3, [r4, #68]	; 0x44
    dd72:	f001 fdd5 	bl	f920 <am_hal_interrupt_master_set>
    dd76:	e730      	b.n	dbda <am_hal_ble_blocking_transfer.part.7+0x12a>
    dd78:	f104 070c 	add.w	r7, r4, #12
    dd7c:	6833      	ldr	r3, [r6, #0]
    dd7e:	6872      	ldr	r2, [r6, #4]
    dd80:	68b0      	ldr	r0, [r6, #8]
    dd82:	68f1      	ldr	r1, [r6, #12]
    dd84:	60e3      	str	r3, [r4, #12]
    dd86:	607a      	str	r2, [r7, #4]
    dd88:	60b8      	str	r0, [r7, #8]
    dd8a:	60f9      	str	r1, [r7, #12]
    dd8c:	6933      	ldr	r3, [r6, #16]
    dd8e:	6972      	ldr	r2, [r6, #20]
    dd90:	617a      	str	r2, [r7, #20]
    dd92:	613b      	str	r3, [r7, #16]
    dd94:	f001 fdc0 	bl	f918 <am_hal_interrupt_master_disable>
    dd98:	9001      	str	r0, [sp, #4]
    dd9a:	2c00      	cmp	r4, #0
    dd9c:	f47f af35 	bne.w	dc0a <am_hal_ble_blocking_transfer.part.7+0x15a>
    dda0:	7ab3      	ldrb	r3, [r6, #10]
    dda2:	2b01      	cmp	r3, #1
    dda4:	f47f af3c 	bne.w	dc20 <am_hal_ble_blocking_transfer.part.7+0x170>
    dda8:	6823      	ldr	r3, [r4, #0]
    ddaa:	4a10      	ldr	r2, [pc, #64]	; (ddec <am_hal_ble_blocking_transfer.part.7+0x33c>)
    ddac:	f8b4 b014 	ldrh.w	fp, [r4, #20]
    ddb0:	68e5      	ldr	r5, [r4, #12]
    ddb2:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    ddb6:	4293      	cmp	r3, r2
    ddb8:	d06b      	beq.n	de92 <am_hal_ble_blocking_transfer.part.7+0x3e2>
    ddba:	f1bb 0f00 	cmp.w	fp, #0
    ddbe:	f43f af60 	beq.w	dc82 <am_hal_ble_blocking_transfer.part.7+0x1d2>
    ddc2:	f8df a020 	ldr.w	sl, [pc, #32]	; dde4 <am_hal_ble_blocking_transfer.part.7+0x334>
    ddc6:	f8da 3100 	ldr.w	r3, [sl, #256]	; 0x100
    ddca:	f3c3 2307 	ubfx	r3, r3, #8, #8
    ddce:	2b03      	cmp	r3, #3
    ddd0:	d833      	bhi.n	de3a <am_hal_ble_blocking_transfer.part.7+0x38a>
    ddd2:	f8da 3224 	ldr.w	r3, [sl, #548]	; 0x224
    ddd6:	07d9      	lsls	r1, r3, #31
    ddd8:	f53f af53 	bmi.w	dc82 <am_hal_ble_blocking_transfer.part.7+0x1d2>
    dddc:	f8df 9014 	ldr.w	r9, [pc, #20]	; ddf4 <am_hal_ble_blocking_transfer.part.7+0x344>
    dde0:	e013      	b.n	de0a <am_hal_ble_blocking_transfer.part.7+0x35a>
    dde2:	bf00      	nop
    dde4:	5000c000 	.word	0x5000c000
    dde8:	08000001 	.word	0x08000001
    ddec:	01775230 	.word	0x01775230
    ddf0:	08000002 	.word	0x08000002
    ddf4:	0007a120 	.word	0x0007a120
    ddf8:	f8da 3224 	ldr.w	r3, [sl, #548]	; 0x224
    ddfc:	07d8      	lsls	r0, r3, #31
    ddfe:	f53f af40 	bmi.w	dc82 <am_hal_ble_blocking_transfer.part.7+0x1d2>
    de02:	f1b9 0901 	subs.w	r9, r9, #1
    de06:	f43f af3c 	beq.w	dc82 <am_hal_ble_blocking_transfer.part.7+0x1d2>
    de0a:	2010      	movs	r0, #16
    de0c:	f001 fb7a 	bl	f504 <am_hal_flash_delay>
    de10:	f8da 3100 	ldr.w	r3, [sl, #256]	; 0x100
    de14:	f3c3 2307 	ubfx	r3, r3, #8, #8
    de18:	2b03      	cmp	r3, #3
    de1a:	d9ed      	bls.n	ddf8 <am_hal_ble_blocking_transfer.part.7+0x348>
    de1c:	e00d      	b.n	de3a <am_hal_ble_blocking_transfer.part.7+0x38a>
    de1e:	f001 fd7f 	bl	f920 <am_hal_interrupt_master_set>
    de22:	f8c5 8220 	str.w	r8, [r5, #544]	; 0x220
    de26:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
    de2a:	e678      	b.n	db1e <am_hal_ble_blocking_transfer.part.7+0x6e>
    de2c:	2b03      	cmp	r3, #3
    de2e:	f240 80b8 	bls.w	dfa2 <am_hal_ble_blocking_transfer.part.7+0x4f2>
    de32:	f1bb 0f00 	cmp.w	fp, #0
    de36:	f43f af24 	beq.w	dc82 <am_hal_ble_blocking_transfer.part.7+0x1d2>
    de3a:	f855 2b04 	ldr.w	r2, [r5], #4
    de3e:	f8ca 210c 	str.w	r2, [sl, #268]	; 0x10c
    de42:	f1bb 0f03 	cmp.w	fp, #3
    de46:	f1a3 0304 	sub.w	r3, r3, #4
    de4a:	f1ab 0b04 	sub.w	fp, fp, #4
    de4e:	f67f af18 	bls.w	dc82 <am_hal_ble_blocking_transfer.part.7+0x1d2>
    de52:	e7eb      	b.n	de2c <am_hal_ble_blocking_transfer.part.7+0x37c>
    de54:	2000      	movs	r0, #0
    de56:	4602      	mov	r2, r0
    de58:	f896 c00c 	ldrb.w	ip, [r6, #12]
    de5c:	f896 e00a 	ldrb.w	lr, [r6, #10]
    de60:	8935      	ldrh	r5, [r6, #8]
    de62:	4952      	ldr	r1, [pc, #328]	; (dfac <am_hal_ble_blocking_transfer.part.7+0x4fc>)
    de64:	015b      	lsls	r3, r3, #5
    de66:	f003 0360 	and.w	r3, r3, #96	; 0x60
    de6a:	ea4e 1ecc 	orr.w	lr, lr, ip, lsl #7
    de6e:	022d      	lsls	r5, r5, #8
    de70:	4029      	ands	r1, r5
    de72:	ea4e 0303 	orr.w	r3, lr, r3
    de76:	430b      	orrs	r3, r1
    de78:	494d      	ldr	r1, [pc, #308]	; (dfb0 <am_hal_ble_blocking_transfer.part.7+0x500>)
    de7a:	4313      	orrs	r3, r2
    de7c:	f8c1 0214 	str.w	r0, [r1, #532]	; 0x214
    de80:	f8c1 320c 	str.w	r3, [r1, #524]	; 0x20c
    de84:	7ab3      	ldrb	r3, [r6, #10]
    de86:	2b01      	cmp	r3, #1
    de88:	f47f aeca 	bne.w	dc20 <am_hal_ble_blocking_transfer.part.7+0x170>
    de8c:	f8b4 b014 	ldrh.w	fp, [r4, #20]
    de90:	68e5      	ldr	r5, [r4, #12]
    de92:	79f2      	ldrb	r2, [r6, #7]
    de94:	2a03      	cmp	r2, #3
    de96:	d890      	bhi.n	ddba <am_hal_ble_blocking_transfer.part.7+0x30a>
    de98:	e8df f002 	tbb	[pc, r2]
    de9c:	1e242802 	.word	0x1e242802
    dea0:	2100      	movs	r1, #0
    dea2:	460b      	mov	r3, r1
    dea4:	f896 e00c 	ldrb.w	lr, [r6, #12]
    dea8:	f8b6 c008 	ldrh.w	ip, [r6, #8]
    deac:	483f      	ldr	r0, [pc, #252]	; (dfac <am_hal_ble_blocking_transfer.part.7+0x4fc>)
    deae:	0152      	lsls	r2, r2, #5
    deb0:	ea4f 1ece 	mov.w	lr, lr, lsl #7
    deb4:	f002 0260 	and.w	r2, r2, #96	; 0x60
    deb8:	f04e 0e01 	orr.w	lr, lr, #1
    debc:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
    dec0:	ea0c 0000 	and.w	r0, ip, r0
    dec4:	ea4e 0202 	orr.w	r2, lr, r2
    dec8:	4302      	orrs	r2, r0
    deca:	4839      	ldr	r0, [pc, #228]	; (dfb0 <am_hal_ble_blocking_transfer.part.7+0x500>)
    decc:	4313      	orrs	r3, r2
    dece:	f8c0 1214 	str.w	r1, [r0, #532]	; 0x214
    ded2:	f8c0 320c 	str.w	r3, [r0, #524]	; 0x20c
    ded6:	e770      	b.n	ddba <am_hal_ble_blocking_transfer.part.7+0x30a>
    ded8:	88b1      	ldrh	r1, [r6, #4]
    deda:	79b3      	ldrb	r3, [r6, #6]
    dedc:	ba49      	rev16	r1, r1
    dede:	b289      	uxth	r1, r1
    dee0:	061b      	lsls	r3, r3, #24
    dee2:	e7df      	b.n	dea4 <am_hal_ble_blocking_transfer.part.7+0x3f4>
    dee4:	7973      	ldrb	r3, [r6, #5]
    dee6:	7931      	ldrb	r1, [r6, #4]
    dee8:	061b      	lsls	r3, r3, #24
    deea:	e7db      	b.n	dea4 <am_hal_ble_blocking_transfer.part.7+0x3f4>
    deec:	7933      	ldrb	r3, [r6, #4]
    deee:	2100      	movs	r1, #0
    def0:	061b      	lsls	r3, r3, #24
    def2:	e7d7      	b.n	dea4 <am_hal_ble_blocking_transfer.part.7+0x3f4>
    def4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
    def8:	2b00      	cmp	r3, #0
    defa:	f43f aef4 	beq.w	dce6 <am_hal_ble_blocking_transfer.part.7+0x236>
    defe:	2300      	movs	r3, #0
    df00:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    df04:	e6ef      	b.n	dce6 <am_hal_ble_blocking_transfer.part.7+0x236>
    df06:	6823      	ldr	r3, [r4, #0]
    df08:	492a      	ldr	r1, [pc, #168]	; (dfb4 <am_hal_ble_blocking_transfer.part.7+0x504>)
    df0a:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    df0e:	428b      	cmp	r3, r1
    df10:	d03f      	beq.n	df92 <am_hal_ble_blocking_transfer.part.7+0x4e2>
    df12:	2301      	movs	r3, #1
    df14:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    df18:	7ab3      	ldrb	r3, [r6, #10]
    df1a:	e6e1      	b.n	dce0 <am_hal_ble_blocking_transfer.part.7+0x230>
    df1c:	f64b 3080 	movw	r0, #48000	; 0xbb80
    df20:	f001 faf0 	bl	f504 <am_hal_flash_delay>
    df24:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
    df28:	e606      	b.n	db38 <am_hal_ble_blocking_transfer.part.7+0x88>
    df2a:	f8b4 b014 	ldrh.w	fp, [r4, #20]
    df2e:	68e5      	ldr	r5, [r4, #12]
    df30:	e743      	b.n	ddba <am_hal_ble_blocking_transfer.part.7+0x30a>
    df32:	4821      	ldr	r0, [pc, #132]	; (dfb8 <am_hal_ble_blocking_transfer.part.7+0x508>)
    df34:	e5f3      	b.n	db1e <am_hal_ble_blocking_transfer.part.7+0x6e>
    df36:	4a1e      	ldr	r2, [pc, #120]	; (dfb0 <am_hal_ble_blocking_transfer.part.7+0x500>)
    df38:	f8b2 3304 	ldrh.w	r3, [r2, #772]	; 0x304
    df3c:	f043 030c 	orr.w	r3, r3, #12
    df40:	f8a2 3304 	strh.w	r3, [r2, #772]	; 0x304
    df44:	e622      	b.n	db8c <am_hal_ble_blocking_transfer.part.7+0xdc>
    df46:	79f3      	ldrb	r3, [r6, #7]
    df48:	2b03      	cmp	r3, #3
    df4a:	f63f af29 	bhi.w	dda0 <am_hal_ble_blocking_transfer.part.7+0x2f0>
    df4e:	a201      	add	r2, pc, #4	; (adr r2, df54 <am_hal_ble_blocking_transfer.part.7+0x4a4>)
    df50:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    df54:	0000de55 	.word	0x0000de55
    df58:	0000df79 	.word	0x0000df79
    df5c:	0000df71 	.word	0x0000df71
    df60:	0000df65 	.word	0x0000df65
    df64:	88b0      	ldrh	r0, [r6, #4]
    df66:	79b2      	ldrb	r2, [r6, #6]
    df68:	ba40      	rev16	r0, r0
    df6a:	b280      	uxth	r0, r0
    df6c:	0612      	lsls	r2, r2, #24
    df6e:	e773      	b.n	de58 <am_hal_ble_blocking_transfer.part.7+0x3a8>
    df70:	7972      	ldrb	r2, [r6, #5]
    df72:	7930      	ldrb	r0, [r6, #4]
    df74:	0612      	lsls	r2, r2, #24
    df76:	e76f      	b.n	de58 <am_hal_ble_blocking_transfer.part.7+0x3a8>
    df78:	7932      	ldrb	r2, [r6, #4]
    df7a:	2000      	movs	r0, #0
    df7c:	0612      	lsls	r2, r2, #24
    df7e:	e76b      	b.n	de58 <am_hal_ble_blocking_transfer.part.7+0x3a8>
    df80:	4b0b      	ldr	r3, [pc, #44]	; (dfb0 <am_hal_ble_blocking_transfer.part.7+0x500>)
    df82:	f8b3 2304 	ldrh.w	r2, [r3, #772]	; 0x304
    df86:	2102      	movs	r1, #2
    df88:	f361 0283 	bfi	r2, r1, #2, #2
    df8c:	f8a3 2304 	strh.w	r2, [r3, #772]	; 0x304
    df90:	e6d8      	b.n	dd44 <am_hal_ble_blocking_transfer.part.7+0x294>
    df92:	f8b2 3304 	ldrh.w	r3, [r2, #772]	; 0x304
    df96:	2102      	movs	r1, #2
    df98:	f361 0383 	bfi	r3, r1, #2, #2
    df9c:	f8a2 3304 	strh.w	r3, [r2, #772]	; 0x304
    dfa0:	e7b7      	b.n	df12 <am_hal_ble_blocking_transfer.part.7+0x462>
    dfa2:	f1bb 0f00 	cmp.w	fp, #0
    dfa6:	f47f af0e 	bne.w	ddc6 <am_hal_ble_blocking_transfer.part.7+0x316>
    dfaa:	e66a      	b.n	dc82 <am_hal_ble_blocking_transfer.part.7+0x1d2>
    dfac:	000fff00 	.word	0x000fff00
    dfb0:	5000c000 	.word	0x5000c000
    dfb4:	01775230 	.word	0x01775230
    dfb8:	08000009 	.word	0x08000009

0000dfbc <am_hal_ble_initialize>:
    dfbc:	b108      	cbz	r0, dfc2 <am_hal_ble_initialize+0x6>
    dfbe:	2005      	movs	r0, #5
    dfc0:	4770      	bx	lr
    dfc2:	b149      	cbz	r1, dfd8 <am_hal_ble_initialize+0x1c>
    dfc4:	b4f0      	push	{r4, r5, r6, r7}
    dfc6:	4b19      	ldr	r3, [pc, #100]	; (e02c <am_hal_ble_initialize+0x70>)
    dfc8:	78dc      	ldrb	r4, [r3, #3]
    dfca:	f3c4 0200 	ubfx	r2, r4, #0, #1
    dfce:	b2d0      	uxtb	r0, r2
    dfd0:	b120      	cbz	r0, dfdc <am_hal_ble_initialize+0x20>
    dfd2:	2007      	movs	r0, #7
    dfd4:	bcf0      	pop	{r4, r5, r6, r7}
    dfd6:	4770      	bx	lr
    dfd8:	2006      	movs	r0, #6
    dfda:	4770      	bx	lr
    dfdc:	f044 0401 	orr.w	r4, r4, #1
    dfe0:	70dc      	strb	r4, [r3, #3]
    dfe2:	681e      	ldr	r6, [r3, #0]
    dfe4:	4f12      	ldr	r7, [pc, #72]	; (e030 <am_hal_ble_initialize+0x74>)
    dfe6:	60d8      	str	r0, [r3, #12]
    dfe8:	f367 0617 	bfi	r6, r7, #0, #24
    dfec:	6258      	str	r0, [r3, #36]	; 0x24
    dfee:	6058      	str	r0, [r3, #4]
    dff0:	63d8      	str	r0, [r3, #60]	; 0x3c
    dff2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
    dff6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    dffa:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
    dffe:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
    e002:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
    e006:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
    e00a:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
    e00e:	721a      	strb	r2, [r3, #8]
    e010:	601e      	str	r6, [r3, #0]
    e012:	6118      	str	r0, [r3, #16]
    e014:	6158      	str	r0, [r3, #20]
    e016:	6198      	str	r0, [r3, #24]
    e018:	61d8      	str	r0, [r3, #28]
    e01a:	6218      	str	r0, [r3, #32]
    e01c:	6298      	str	r0, [r3, #40]	; 0x28
    e01e:	62d8      	str	r0, [r3, #44]	; 0x2c
    e020:	6318      	str	r0, [r3, #48]	; 0x30
    e022:	6358      	str	r0, [r3, #52]	; 0x34
    e024:	6398      	str	r0, [r3, #56]	; 0x38
    e026:	600b      	str	r3, [r1, #0]
    e028:	e7d4      	b.n	dfd4 <am_hal_ble_initialize+0x18>
    e02a:	bf00      	nop
    e02c:	100024c4 	.word	0x100024c4
    e030:	00775230 	.word	0x00775230

0000e034 <am_hal_ble_config>:
    e034:	b128      	cbz	r0, e042 <am_hal_ble_config+0xe>
    e036:	6803      	ldr	r3, [r0, #0]
    e038:	4a3c      	ldr	r2, [pc, #240]	; (e12c <am_hal_ble_config+0xf8>)
    e03a:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e03e:	4293      	cmp	r3, r2
    e040:	d001      	beq.n	e046 <am_hal_ble_config+0x12>
    e042:	2002      	movs	r0, #2
    e044:	4770      	bx	lr
    e046:	b4f0      	push	{r4, r5, r6, r7}
    e048:	4b39      	ldr	r3, [pc, #228]	; (e130 <am_hal_ble_config+0xfc>)
    e04a:	6844      	ldr	r4, [r0, #4]
    e04c:	4d38      	ldr	r5, [pc, #224]	; (e130 <am_hal_ble_config+0xfc>)
    e04e:	2203      	movs	r2, #3
    e050:	f8c3 2300 	str.w	r2, [r3, #768]	; 0x300
    e054:	f8d3 2300 	ldr.w	r2, [r3, #768]	; 0x300
    e058:	f36f 4251 	bfc	r2, #17, #1
    e05c:	f8c3 2300 	str.w	r2, [r3, #768]	; 0x300
    e060:	f8d3 2300 	ldr.w	r2, [r3, #768]	; 0x300
    e064:	f36f 4210 	bfc	r2, #16, #1
    e068:	f8c3 2300 	str.w	r2, [r3, #768]	; 0x300
    e06c:	f8d3 2300 	ldr.w	r2, [r3, #768]	; 0x300
    e070:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
    e074:	f8c3 2300 	str.w	r2, [r3, #768]	; 0x300
    e078:	f8b3 2104 	ldrh.w	r2, [r3, #260]	; 0x104
    e07c:	6888      	ldr	r0, [r1, #8]
    e07e:	f360 220d 	bfi	r2, r0, #8, #6
    e082:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
    e086:	f8b3 2104 	ldrh.w	r2, [r3, #260]	; 0x104
    e08a:	6848      	ldr	r0, [r1, #4]
    e08c:	f360 0205 	bfi	r2, r0, #0, #6
    e090:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
    e094:	f8d3 2110 	ldr.w	r2, [r3, #272]	; 0x110
    e098:	f042 0201 	orr.w	r2, r2, #1
    e09c:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
    e0a0:	680b      	ldr	r3, [r1, #0]
    e0a2:	68c8      	ldr	r0, [r1, #12]
    e0a4:	4a23      	ldr	r2, [pc, #140]	; (e134 <am_hal_ble_config+0x100>)
    e0a6:	021b      	lsls	r3, r3, #8
    e0a8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
    e0ac:	2802      	cmp	r0, #2
    e0ae:	bf08      	it	eq
    e0b0:	f443 6300 	orreq.w	r3, r3, #2048	; 0x800
    e0b4:	f043 0301 	orr.w	r3, r3, #1
    e0b8:	f8c5 3200 	str.w	r3, [r5, #512]	; 0x200
    e0bc:	68d3      	ldr	r3, [r2, #12]
    e0be:	b2db      	uxtb	r3, r3
    e0c0:	2b12      	cmp	r3, #18
    e0c2:	d009      	beq.n	e0d8 <am_hal_ble_config+0xa4>
    e0c4:	4b1c      	ldr	r3, [pc, #112]	; (e138 <am_hal_ble_config+0x104>)
    e0c6:	7e8a      	ldrb	r2, [r1, #26]
    e0c8:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
    e0cc:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
    e0d0:	2000      	movs	r0, #0
    e0d2:	7222      	strb	r2, [r4, #8]
    e0d4:	bcf0      	pop	{r4, r5, r6, r7}
    e0d6:	4770      	bx	lr
    e0d8:	4f18      	ldr	r7, [pc, #96]	; (e13c <am_hal_ble_config+0x108>)
    e0da:	68fa      	ldr	r2, [r7, #12]
    e0dc:	687b      	ldr	r3, [r7, #4]
    e0de:	f882 002f 	strb.w	r0, [r2, #47]	; 0x2f
    e0e2:	6908      	ldr	r0, [r1, #16]
    e0e4:	f882 0021 	strb.w	r0, [r2, #33]	; 0x21
    e0e8:	6908      	ldr	r0, [r1, #16]
    e0ea:	0a00      	lsrs	r0, r0, #8
    e0ec:	f882 0022 	strb.w	r0, [r2, #34]	; 0x22
    e0f0:	6948      	ldr	r0, [r1, #20]
    e0f2:	f882 0026 	strb.w	r0, [r2, #38]	; 0x26
    e0f6:	6948      	ldr	r0, [r1, #20]
    e0f8:	0a00      	lsrs	r0, r0, #8
    e0fa:	f882 0027 	strb.w	r0, [r2, #39]	; 0x27
    e0fe:	7e48      	ldrb	r0, [r1, #25]
    e100:	f882 0058 	strb.w	r0, [r2, #88]	; 0x58
    e104:	7e08      	ldrb	r0, [r1, #24]
    e106:	f882 0080 	strb.w	r0, [r2, #128]	; 0x80
    e10a:	b16b      	cbz	r3, e128 <am_hal_ble_config+0xf4>
    e10c:	4e0c      	ldr	r6, [pc, #48]	; (e140 <am_hal_ble_config+0x10c>)
    e10e:	18d5      	adds	r5, r2, r3
    e110:	2300      	movs	r3, #0
    e112:	f812 0b01 	ldrb.w	r0, [r2], #1
    e116:	ea80 2013 	eor.w	r0, r0, r3, lsr #8
    e11a:	4295      	cmp	r5, r2
    e11c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
    e120:	ea80 2303 	eor.w	r3, r0, r3, lsl #8
    e124:	b29b      	uxth	r3, r3
    e126:	d1f4      	bne.n	e112 <am_hal_ble_config+0xde>
    e128:	60bb      	str	r3, [r7, #8]
    e12a:	e7cb      	b.n	e0c4 <am_hal_ble_config+0x90>
    e12c:	01775230 	.word	0x01775230
    e130:	5000c000 	.word	0x5000c000
    e134:	40020000 	.word	0x40020000
    e138:	100024c4 	.word	0x100024c4
    e13c:	10001034 	.word	0x10001034
    e140:	00010984 	.word	0x00010984

0000e144 <am_hal_ble_power_control>:
    e144:	b538      	push	{r3, r4, r5, lr}
    e146:	4b52      	ldr	r3, [pc, #328]	; (e290 <am_hal_ble_power_control+0x14c>)
    e148:	68db      	ldr	r3, [r3, #12]
    e14a:	b2db      	uxtb	r3, r3
    e14c:	2b11      	cmp	r3, #17
    e14e:	d903      	bls.n	e158 <am_hal_ble_power_control+0x14>
    e150:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    e154:	4a4f      	ldr	r2, [pc, #316]	; (e294 <am_hal_ble_power_control+0x150>)
    e156:	63da      	str	r2, [r3, #60]	; 0x3c
    e158:	b128      	cbz	r0, e166 <am_hal_ble_power_control+0x22>
    e15a:	6803      	ldr	r3, [r0, #0]
    e15c:	4a4e      	ldr	r2, [pc, #312]	; (e298 <am_hal_ble_power_control+0x154>)
    e15e:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e162:	4293      	cmp	r3, r2
    e164:	d002      	beq.n	e16c <am_hal_ble_power_control+0x28>
    e166:	2402      	movs	r4, #2
    e168:	4620      	mov	r0, r4
    e16a:	bd38      	pop	{r3, r4, r5, pc}
    e16c:	b9f9      	cbnz	r1, e1ae <am_hal_ble_power_control+0x6a>
    e16e:	4b4b      	ldr	r3, [pc, #300]	; (e29c <am_hal_ble_power_control+0x158>)
    e170:	699b      	ldr	r3, [r3, #24]
    e172:	05db      	lsls	r3, r3, #23
    e174:	d454      	bmi.n	e220 <am_hal_ble_power_control+0xdc>
    e176:	4d46      	ldr	r5, [pc, #280]	; (e290 <am_hal_ble_power_control+0x14c>)
    e178:	69ab      	ldr	r3, [r5, #24]
    e17a:	f043 0301 	orr.w	r3, r3, #1
    e17e:	61ab      	str	r3, [r5, #24]
    e180:	69ab      	ldr	r3, [r5, #24]
    e182:	f003 0307 	and.w	r3, r3, #7
    e186:	2b07      	cmp	r3, #7
    e188:	d00b      	beq.n	e1a2 <am_hal_ble_power_control+0x5e>
    e18a:	4c45      	ldr	r4, [pc, #276]	; (e2a0 <am_hal_ble_power_control+0x15c>)
    e18c:	e001      	b.n	e192 <am_hal_ble_power_control+0x4e>
    e18e:	3c01      	subs	r4, #1
    e190:	d06b      	beq.n	e26a <am_hal_ble_power_control+0x126>
    e192:	2010      	movs	r0, #16
    e194:	f001 f9b6 	bl	f504 <am_hal_flash_delay>
    e198:	69ab      	ldr	r3, [r5, #24]
    e19a:	f003 0307 	and.w	r3, r3, #7
    e19e:	2b07      	cmp	r3, #7
    e1a0:	d1f5      	bne.n	e18e <am_hal_ble_power_control+0x4a>
    e1a2:	200e      	movs	r0, #14
    e1a4:	f001 fcac 	bl	fb00 <am_hal_pwrctrl_periph_enable>
    e1a8:	b128      	cbz	r0, e1b6 <am_hal_ble_power_control+0x72>
    e1aa:	4c3e      	ldr	r4, [pc, #248]	; (e2a4 <am_hal_ble_power_control+0x160>)
    e1ac:	e7dc      	b.n	e168 <am_hal_ble_power_control+0x24>
    e1ae:	2901      	cmp	r1, #1
    e1b0:	d038      	beq.n	e224 <am_hal_ble_power_control+0xe0>
    e1b2:	2407      	movs	r4, #7
    e1b4:	e7d8      	b.n	e168 <am_hal_ble_power_control+0x24>
    e1b6:	4b3c      	ldr	r3, [pc, #240]	; (e2a8 <am_hal_ble_power_control+0x164>)
    e1b8:	4935      	ldr	r1, [pc, #212]	; (e290 <am_hal_ble_power_control+0x14c>)
    e1ba:	f44f 6200 	mov.w	r2, #2048	; 0x800
    e1be:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
    e1c2:	f8d3 2410 	ldr.w	r2, [r3, #1040]	; 0x410
    e1c6:	f44f 4080 	mov.w	r0, #16384	; 0x4000
    e1ca:	f360 02df 	bfi	r2, r0, #3, #29
    e1ce:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
    e1d2:	68cb      	ldr	r3, [r1, #12]
    e1d4:	b2db      	uxtb	r3, r3
    e1d6:	2b11      	cmp	r3, #17
    e1d8:	d949      	bls.n	e26e <am_hal_ble_power_control+0x12a>
    e1da:	f891 3198 	ldrb.w	r3, [r1, #408]	; 0x198
    e1de:	f043 0320 	orr.w	r3, r3, #32
    e1e2:	f881 3198 	strb.w	r3, [r1, #408]	; 0x198
    e1e6:	4d30      	ldr	r5, [pc, #192]	; (e2a8 <am_hal_ble_power_control+0x164>)
    e1e8:	4830      	ldr	r0, [pc, #192]	; (e2ac <am_hal_ble_power_control+0x168>)
    e1ea:	f001 f98b 	bl	f504 <am_hal_flash_delay>
    e1ee:	f8b5 3304 	ldrh.w	r3, [r5, #772]	; 0x304
    e1f2:	f043 0301 	orr.w	r3, r3, #1
    e1f6:	f8a5 3304 	strh.w	r3, [r5, #772]	; 0x304
    e1fa:	f8d5 330c 	ldr.w	r3, [r5, #780]	; 0x30c
    e1fe:	f3c3 2302 	ubfx	r3, r3, #8, #3
    e202:	2b03      	cmp	r3, #3
    e204:	d00c      	beq.n	e220 <am_hal_ble_power_control+0xdc>
    e206:	4c2a      	ldr	r4, [pc, #168]	; (e2b0 <am_hal_ble_power_control+0x16c>)
    e208:	e001      	b.n	e20e <am_hal_ble_power_control+0xca>
    e20a:	3c01      	subs	r4, #1
    e20c:	d039      	beq.n	e282 <am_hal_ble_power_control+0x13e>
    e20e:	2010      	movs	r0, #16
    e210:	f001 f978 	bl	f504 <am_hal_flash_delay>
    e214:	f8d5 330c 	ldr.w	r3, [r5, #780]	; 0x30c
    e218:	f3c3 2302 	ubfx	r3, r3, #8, #3
    e21c:	2b03      	cmp	r3, #3
    e21e:	d1f4      	bne.n	e20a <am_hal_ble_power_control+0xc6>
    e220:	2400      	movs	r4, #0
    e222:	e7a1      	b.n	e168 <am_hal_ble_power_control+0x24>
    e224:	4b20      	ldr	r3, [pc, #128]	; (e2a8 <am_hal_ble_power_control+0x164>)
    e226:	481a      	ldr	r0, [pc, #104]	; (e290 <am_hal_ble_power_control+0x14c>)
    e228:	2200      	movs	r2, #0
    e22a:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
    e22e:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
    e232:	f362 01df 	bfi	r1, r2, #3, #29
    e236:	f8c3 1410 	str.w	r1, [r3, #1040]	; 0x410
    e23a:	68c3      	ldr	r3, [r0, #12]
    e23c:	b2db      	uxtb	r3, r3
    e23e:	2b11      	cmp	r3, #17
    e240:	d919      	bls.n	e276 <am_hal_ble_power_control+0x132>
    e242:	f890 3198 	ldrb.w	r3, [r0, #408]	; 0x198
    e246:	f362 1345 	bfi	r3, r2, #5, #1
    e24a:	f880 3198 	strb.w	r3, [r0, #408]	; 0x198
    e24e:	4b16      	ldr	r3, [pc, #88]	; (e2a8 <am_hal_ble_power_control+0x164>)
    e250:	f8b3 2304 	ldrh.w	r2, [r3, #772]	; 0x304
    e254:	f36f 0200 	bfc	r2, #0, #1
    e258:	f8a3 2304 	strh.w	r2, [r3, #772]	; 0x304
    e25c:	200e      	movs	r0, #14
    e25e:	f001 fc79 	bl	fb54 <am_hal_pwrctrl_periph_disable>
    e262:	4604      	mov	r4, r0
    e264:	b178      	cbz	r0, e286 <am_hal_ble_power_control+0x142>
    e266:	4c13      	ldr	r4, [pc, #76]	; (e2b4 <am_hal_ble_power_control+0x170>)
    e268:	e77e      	b.n	e168 <am_hal_ble_power_control+0x24>
    e26a:	4c13      	ldr	r4, [pc, #76]	; (e2b8 <am_hal_ble_power_control+0x174>)
    e26c:	e77c      	b.n	e168 <am_hal_ble_power_control+0x24>
    e26e:	4b13      	ldr	r3, [pc, #76]	; (e2bc <am_hal_ble_power_control+0x178>)
    e270:	2204      	movs	r2, #4
    e272:	601a      	str	r2, [r3, #0]
    e274:	e7b7      	b.n	e1e6 <am_hal_ble_power_control+0xa2>
    e276:	4a11      	ldr	r2, [pc, #68]	; (e2bc <am_hal_ble_power_control+0x178>)
    e278:	6813      	ldr	r3, [r2, #0]
    e27a:	f023 0304 	bic.w	r3, r3, #4
    e27e:	6013      	str	r3, [r2, #0]
    e280:	e7e5      	b.n	e24e <am_hal_ble_power_control+0x10a>
    e282:	4c0f      	ldr	r4, [pc, #60]	; (e2c0 <am_hal_ble_power_control+0x17c>)
    e284:	e770      	b.n	e168 <am_hal_ble_power_control+0x24>
    e286:	f44f 60c8 	mov.w	r0, #1600	; 0x640
    e28a:	f001 f93b 	bl	f504 <am_hal_flash_delay>
    e28e:	e76b      	b.n	e168 <am_hal_ble_power_control+0x24>
    e290:	40020000 	.word	0x40020000
    e294:	0fc0400f 	.word	0x0fc0400f
    e298:	01775230 	.word	0x01775230
    e29c:	40021000 	.word	0x40021000
    e2a0:	000186a0 	.word	0x000186a0
    e2a4:	08000007 	.word	0x08000007
    e2a8:	5000c000 	.word	0x5000c000
    e2ac:	00013880 	.word	0x00013880
    e2b0:	000f4240 	.word	0x000f4240
    e2b4:	08000006 	.word	0x08000006
    e2b8:	08000005 	.word	0x08000005
    e2bc:	40020198 	.word	0x40020198
    e2c0:	08000008 	.word	0x08000008

0000e2c4 <am_hal_ble_patch_copy_end_apply>:
    e2c4:	b128      	cbz	r0, e2d2 <am_hal_ble_patch_copy_end_apply+0xe>
    e2c6:	6803      	ldr	r3, [r0, #0]
    e2c8:	4a46      	ldr	r2, [pc, #280]	; (e3e4 <am_hal_ble_patch_copy_end_apply+0x120>)
    e2ca:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e2ce:	4293      	cmp	r3, r2
    e2d0:	d001      	beq.n	e2d6 <am_hal_ble_patch_copy_end_apply+0x12>
    e2d2:	2002      	movs	r0, #2
    e2d4:	4770      	bx	lr
    e2d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    e2da:	b092      	sub	sp, #72	; 0x48
    e2dc:	2501      	movs	r5, #1
    e2de:	2400      	movs	r4, #0
    e2e0:	4606      	mov	r6, r0
    e2e2:	21f1      	movs	r1, #241	; 0xf1
    e2e4:	20ee      	movs	r0, #238	; 0xee
    e2e6:	2202      	movs	r2, #2
    e2e8:	f88d 5000 	strb.w	r5, [sp]
    e2ec:	f88d 0001 	strb.w	r0, [sp, #1]
    e2f0:	f88d 1002 	strb.w	r1, [sp, #2]
    e2f4:	f88d 2003 	strb.w	r2, [sp, #3]
    e2f8:	f88d 4004 	strb.w	r4, [sp, #4]
    e2fc:	f88d 4005 	strb.w	r4, [sp, #5]
    e300:	f241 3588 	movw	r5, #5000	; 0x1388
    e304:	f04f 0806 	mov.w	r8, #6
    e308:	461f      	mov	r7, r3
    e30a:	2201      	movs	r2, #1
    e30c:	42bb      	cmp	r3, r7
    e30e:	f8cd d028 	str.w	sp, [sp, #40]	; 0x28
    e312:	f88d 402c 	strb.w	r4, [sp, #44]	; 0x2c
    e316:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
    e31a:	f88d 402e 	strb.w	r4, [sp, #46]	; 0x2e
    e31e:	f88d 402f 	strb.w	r4, [sp, #47]	; 0x2f
    e322:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    e326:	f88d 4033 	strb.w	r4, [sp, #51]	; 0x33
    e32a:	f88d 4034 	strb.w	r4, [sp, #52]	; 0x34
    e32e:	940e      	str	r4, [sp, #56]	; 0x38
    e330:	940f      	str	r4, [sp, #60]	; 0x3c
    e332:	f88d 2032 	strb.w	r2, [sp, #50]	; 0x32
    e336:	d029      	beq.n	e38c <am_hal_ble_patch_copy_end_apply+0xc8>
    e338:	4b2b      	ldr	r3, [pc, #172]	; (e3e8 <am_hal_ble_patch_copy_end_apply+0x124>)
    e33a:	f8d3 230c 	ldr.w	r2, [r3, #780]	; 0x30c
    e33e:	0612      	lsls	r2, r2, #24
    e340:	d40c      	bmi.n	e35c <am_hal_ble_patch_copy_end_apply+0x98>
    e342:	4d2a      	ldr	r5, [pc, #168]	; (e3ec <am_hal_ble_patch_copy_end_apply+0x128>)
    e344:	461c      	mov	r4, r3
    e346:	2010      	movs	r0, #16
    e348:	f001 f8dc 	bl	f504 <am_hal_flash_delay>
    e34c:	f8d4 330c 	ldr.w	r3, [r4, #780]	; 0x30c
    e350:	0619      	lsls	r1, r3, #24
    e352:	d403      	bmi.n	e35c <am_hal_ble_patch_copy_end_apply+0x98>
    e354:	3d01      	subs	r5, #1
    e356:	d1f6      	bne.n	e346 <am_hal_ble_patch_copy_end_apply+0x82>
    e358:	4825      	ldr	r0, [pc, #148]	; (e3f0 <am_hal_ble_patch_copy_end_apply+0x12c>)
    e35a:	e014      	b.n	e386 <am_hal_ble_patch_copy_end_apply+0xc2>
    e35c:	6832      	ldr	r2, [r6, #0]
    e35e:	4921      	ldr	r1, [pc, #132]	; (e3e4 <am_hal_ble_patch_copy_end_apply+0x120>)
    e360:	f8cd d010 	str.w	sp, [sp, #16]
    e364:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    e368:	2300      	movs	r3, #0
    e36a:	2402      	movs	r4, #2
    e36c:	2005      	movs	r0, #5
    e36e:	428a      	cmp	r2, r1
    e370:	9306      	str	r3, [sp, #24]
    e372:	9305      	str	r3, [sp, #20]
    e374:	9307      	str	r3, [sp, #28]
    e376:	9308      	str	r3, [sp, #32]
    e378:	9309      	str	r3, [sp, #36]	; 0x24
    e37a:	f88d 401a 	strb.w	r4, [sp, #26]
    e37e:	f8ad 0018 	strh.w	r0, [sp, #24]
    e382:	d00f      	beq.n	e3a4 <am_hal_ble_patch_copy_end_apply+0xe0>
    e384:	2002      	movs	r0, #2
    e386:	b012      	add	sp, #72	; 0x48
    e388:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e38c:	a90a      	add	r1, sp, #40	; 0x28
    e38e:	4630      	mov	r0, r6
    e390:	f7ff fb8e 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    e394:	2800      	cmp	r0, #0
    e396:	d0cf      	beq.n	e338 <am_hal_ble_patch_copy_end_apply+0x74>
    e398:	3d01      	subs	r5, #1
    e39a:	d0f4      	beq.n	e386 <am_hal_ble_patch_copy_end_apply+0xc2>
    e39c:	6833      	ldr	r3, [r6, #0]
    e39e:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e3a2:	e7b2      	b.n	e30a <am_hal_ble_patch_copy_end_apply+0x46>
    e3a4:	a904      	add	r1, sp, #16
    e3a6:	4630      	mov	r0, r6
    e3a8:	f7ff fb82 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    e3ac:	2800      	cmp	r0, #0
    e3ae:	d1ea      	bne.n	e386 <am_hal_ble_patch_copy_end_apply+0xc2>
    e3b0:	f89d 3000 	ldrb.w	r3, [sp]
    e3b4:	2b04      	cmp	r3, #4
    e3b6:	f04f 02f1 	mov.w	r2, #241	; 0xf1
    e3ba:	f04f 0001 	mov.w	r0, #1
    e3be:	d1e2      	bne.n	e386 <am_hal_ble_patch_copy_end_apply+0xc2>
    e3c0:	f89d 3001 	ldrb.w	r3, [sp, #1]
    e3c4:	2bee      	cmp	r3, #238	; 0xee
    e3c6:	d1de      	bne.n	e386 <am_hal_ble_patch_copy_end_apply+0xc2>
    e3c8:	f89d 3002 	ldrb.w	r3, [sp, #2]
    e3cc:	429a      	cmp	r2, r3
    e3ce:	d1da      	bne.n	e386 <am_hal_ble_patch_copy_end_apply+0xc2>
    e3d0:	f89d 3003 	ldrb.w	r3, [sp, #3]
    e3d4:	4283      	cmp	r3, r0
    e3d6:	d1d6      	bne.n	e386 <am_hal_ble_patch_copy_end_apply+0xc2>
    e3d8:	f89d 0004 	ldrb.w	r0, [sp, #4]
    e3dc:	3000      	adds	r0, #0
    e3de:	bf18      	it	ne
    e3e0:	2001      	movne	r0, #1
    e3e2:	e7d0      	b.n	e386 <am_hal_ble_patch_copy_end_apply+0xc2>
    e3e4:	01775230 	.word	0x01775230
    e3e8:	5000c000 	.word	0x5000c000
    e3ec:	000f4240 	.word	0x000f4240
    e3f0:	08000004 	.word	0x08000004

0000e3f4 <am_hal_ble_blocking_hci_write>:
    e3f4:	b530      	push	{r4, r5, lr}
    e3f6:	b087      	sub	sp, #28
    e3f8:	2400      	movs	r4, #0
    e3fa:	b29b      	uxth	r3, r3
    e3fc:	2501      	movs	r5, #1
    e3fe:	f88d 1004 	strb.w	r1, [sp, #4]
    e402:	f8ad 3008 	strh.w	r3, [sp, #8]
    e406:	9200      	str	r2, [sp, #0]
    e408:	f88d 4005 	strb.w	r4, [sp, #5]
    e40c:	f88d 4006 	strb.w	r4, [sp, #6]
    e410:	f88d 4007 	strb.w	r4, [sp, #7]
    e414:	f88d 400b 	strb.w	r4, [sp, #11]
    e418:	f88d 400c 	strb.w	r4, [sp, #12]
    e41c:	9404      	str	r4, [sp, #16]
    e41e:	9405      	str	r4, [sp, #20]
    e420:	f88d 500a 	strb.w	r5, [sp, #10]
    e424:	b128      	cbz	r0, e432 <am_hal_ble_blocking_hci_write+0x3e>
    e426:	6802      	ldr	r2, [r0, #0]
    e428:	4c09      	ldr	r4, [pc, #36]	; (e450 <am_hal_ble_blocking_hci_write+0x5c>)
    e42a:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    e42e:	42a2      	cmp	r2, r4
    e430:	d002      	beq.n	e438 <am_hal_ble_blocking_hci_write+0x44>
    e432:	2000      	movs	r0, #0
    e434:	b007      	add	sp, #28
    e436:	bd30      	pop	{r4, r5, pc}
    e438:	b939      	cbnz	r1, e44a <am_hal_ble_blocking_hci_write+0x56>
    e43a:	2b00      	cmp	r3, #0
    e43c:	d0f9      	beq.n	e432 <am_hal_ble_blocking_hci_write+0x3e>
    e43e:	4669      	mov	r1, sp
    e440:	f7ff fb36 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    e444:	2800      	cmp	r0, #0
    e446:	d0f4      	beq.n	e432 <am_hal_ble_blocking_hci_write+0x3e>
    e448:	e7f4      	b.n	e434 <am_hal_ble_blocking_hci_write+0x40>
    e44a:	f88d 5007 	strb.w	r5, [sp, #7]
    e44e:	e7f4      	b.n	e43a <am_hal_ble_blocking_hci_write+0x46>
    e450:	01775230 	.word	0x01775230

0000e454 <am_hal_ble_blocking_transfer>:
    e454:	b128      	cbz	r0, e462 <am_hal_ble_blocking_transfer+0xe>
    e456:	6803      	ldr	r3, [r0, #0]
    e458:	4a08      	ldr	r2, [pc, #32]	; (e47c <am_hal_ble_blocking_transfer+0x28>)
    e45a:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e45e:	4293      	cmp	r3, r2
    e460:	d001      	beq.n	e466 <am_hal_ble_blocking_transfer+0x12>
    e462:	2002      	movs	r0, #2
    e464:	4770      	bx	lr
    e466:	890b      	ldrh	r3, [r1, #8]
    e468:	b410      	push	{r4}
    e46a:	b11b      	cbz	r3, e474 <am_hal_ble_blocking_transfer+0x20>
    e46c:	f85d 4b04 	ldr.w	r4, [sp], #4
    e470:	f7ff bb1e 	b.w	dab0 <am_hal_ble_blocking_transfer.part.7>
    e474:	4618      	mov	r0, r3
    e476:	f85d 4b04 	ldr.w	r4, [sp], #4
    e47a:	4770      	bx	lr
    e47c:	01775230 	.word	0x01775230

0000e480 <am_hal_ble_patch_apply>:
    e480:	b128      	cbz	r0, e48e <am_hal_ble_patch_apply+0xe>
    e482:	6803      	ldr	r3, [r0, #0]
    e484:	4aae      	ldr	r2, [pc, #696]	; (e740 <am_hal_ble_patch_apply+0x2c0>)
    e486:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e48a:	4293      	cmp	r3, r2
    e48c:	d002      	beq.n	e494 <am_hal_ble_patch_apply+0x14>
    e48e:	2302      	movs	r3, #2
    e490:	4618      	mov	r0, r3
    e492:	4770      	bx	lr
    e494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e498:	684a      	ldr	r2, [r1, #4]
    e49a:	680d      	ldr	r5, [r1, #0]
    e49c:	b095      	sub	sp, #84	; 0x54
    e49e:	2701      	movs	r7, #1
    e4a0:	4604      	mov	r4, r0
    e4a2:	460e      	mov	r6, r1
    e4a4:	f88d 200c 	strb.w	r2, [sp, #12]
    e4a8:	20f1      	movs	r0, #241	; 0xf1
    e4aa:	0a12      	lsrs	r2, r2, #8
    e4ac:	2102      	movs	r1, #2
    e4ae:	f88d 7008 	strb.w	r7, [sp, #8]
    e4b2:	f88d 5009 	strb.w	r5, [sp, #9]
    e4b6:	f88d 200d 	strb.w	r2, [sp, #13]
    e4ba:	f88d 000a 	strb.w	r0, [sp, #10]
    e4be:	f88d 100b 	strb.w	r1, [sp, #11]
    e4c2:	f241 3788 	movw	r7, #5000	; 0x1388
    e4c6:	2500      	movs	r5, #0
    e4c8:	f04f 0906 	mov.w	r9, #6
    e4cc:	4698      	mov	r8, r3
    e4ce:	2201      	movs	r2, #1
    e4d0:	a902      	add	r1, sp, #8
    e4d2:	4543      	cmp	r3, r8
    e4d4:	910c      	str	r1, [sp, #48]	; 0x30
    e4d6:	f88d 5034 	strb.w	r5, [sp, #52]	; 0x34
    e4da:	f88d 5035 	strb.w	r5, [sp, #53]	; 0x35
    e4de:	f88d 5036 	strb.w	r5, [sp, #54]	; 0x36
    e4e2:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
    e4e6:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
    e4ea:	f88d 503b 	strb.w	r5, [sp, #59]	; 0x3b
    e4ee:	f88d 503c 	strb.w	r5, [sp, #60]	; 0x3c
    e4f2:	9510      	str	r5, [sp, #64]	; 0x40
    e4f4:	9511      	str	r5, [sp, #68]	; 0x44
    e4f6:	f88d 203a 	strb.w	r2, [sp, #58]	; 0x3a
    e4fa:	d02b      	beq.n	e554 <am_hal_ble_patch_apply+0xd4>
    e4fc:	4b91      	ldr	r3, [pc, #580]	; (e744 <am_hal_ble_patch_apply+0x2c4>)
    e4fe:	f8d3 230c 	ldr.w	r2, [r3, #780]	; 0x30c
    e502:	0612      	lsls	r2, r2, #24
    e504:	d40c      	bmi.n	e520 <am_hal_ble_patch_apply+0xa0>
    e506:	4f90      	ldr	r7, [pc, #576]	; (e748 <am_hal_ble_patch_apply+0x2c8>)
    e508:	461d      	mov	r5, r3
    e50a:	2010      	movs	r0, #16
    e50c:	f000 fffa 	bl	f504 <am_hal_flash_delay>
    e510:	f8d5 330c 	ldr.w	r3, [r5, #780]	; 0x30c
    e514:	061b      	lsls	r3, r3, #24
    e516:	d403      	bmi.n	e520 <am_hal_ble_patch_apply+0xa0>
    e518:	3f01      	subs	r7, #1
    e51a:	d1f6      	bne.n	e50a <am_hal_ble_patch_apply+0x8a>
    e51c:	4b8b      	ldr	r3, [pc, #556]	; (e74c <am_hal_ble_patch_apply+0x2cc>)
    e51e:	e015      	b.n	e54c <am_hal_ble_patch_apply+0xcc>
    e520:	6825      	ldr	r5, [r4, #0]
    e522:	4a87      	ldr	r2, [pc, #540]	; (e740 <am_hal_ble_patch_apply+0x2c0>)
    e524:	ab02      	add	r3, sp, #8
    e526:	9306      	str	r3, [sp, #24]
    e528:	f025 457e 	bic.w	r5, r5, #4261412864	; 0xfe000000
    e52c:	2300      	movs	r3, #0
    e52e:	9308      	str	r3, [sp, #32]
    e530:	2102      	movs	r1, #2
    e532:	9307      	str	r3, [sp, #28]
    e534:	9309      	str	r3, [sp, #36]	; 0x24
    e536:	930a      	str	r3, [sp, #40]	; 0x28
    e538:	930b      	str	r3, [sp, #44]	; 0x2c
    e53a:	4295      	cmp	r5, r2
    e53c:	f04f 0305 	mov.w	r3, #5
    e540:	f88d 1022 	strb.w	r1, [sp, #34]	; 0x22
    e544:	f8ad 3020 	strh.w	r3, [sp, #32]
    e548:	d011      	beq.n	e56e <am_hal_ble_patch_apply+0xee>
    e54a:	2302      	movs	r3, #2
    e54c:	4618      	mov	r0, r3
    e54e:	b015      	add	sp, #84	; 0x54
    e550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e554:	a90c      	add	r1, sp, #48	; 0x30
    e556:	4620      	mov	r0, r4
    e558:	f7ff faaa 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    e55c:	4603      	mov	r3, r0
    e55e:	2800      	cmp	r0, #0
    e560:	d0cc      	beq.n	e4fc <am_hal_ble_patch_apply+0x7c>
    e562:	3f01      	subs	r7, #1
    e564:	d0f2      	beq.n	e54c <am_hal_ble_patch_apply+0xcc>
    e566:	6823      	ldr	r3, [r4, #0]
    e568:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e56c:	e7af      	b.n	e4ce <am_hal_ble_patch_apply+0x4e>
    e56e:	a906      	add	r1, sp, #24
    e570:	4620      	mov	r0, r4
    e572:	f7ff fa9d 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    e576:	4603      	mov	r3, r0
    e578:	2800      	cmp	r0, #0
    e57a:	d1e7      	bne.n	e54c <am_hal_ble_patch_apply+0xcc>
    e57c:	2304      	movs	r3, #4
    e57e:	f89d 1008 	ldrb.w	r1, [sp, #8]
    e582:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
    e586:	23f1      	movs	r3, #241	; 0xf1
    e588:	7832      	ldrb	r2, [r6, #0]
    e58a:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
    e58e:	2904      	cmp	r1, #4
    e590:	f04f 0301 	mov.w	r3, #1
    e594:	f88d 0034 	strb.w	r0, [sp, #52]	; 0x34
    e598:	f88d 2031 	strb.w	r2, [sp, #49]	; 0x31
    e59c:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
    e5a0:	f040 811a 	bne.w	e7d8 <am_hal_ble_patch_apply+0x358>
    e5a4:	f89d 1009 	ldrb.w	r1, [sp, #9]
    e5a8:	b2d3      	uxtb	r3, r2
    e5aa:	4299      	cmp	r1, r3
    e5ac:	f040 8114 	bne.w	e7d8 <am_hal_ble_patch_apply+0x358>
    e5b0:	f89d 300a 	ldrb.w	r3, [sp, #10]
    e5b4:	2bf1      	cmp	r3, #241	; 0xf1
    e5b6:	f040 810f 	bne.w	e7d8 <am_hal_ble_patch_apply+0x358>
    e5ba:	f89d 300b 	ldrb.w	r3, [sp, #11]
    e5be:	2b01      	cmp	r3, #1
    e5c0:	f040 810a 	bne.w	e7d8 <am_hal_ble_patch_apply+0x358>
    e5c4:	f89d 300c 	ldrb.w	r3, [sp, #12]
    e5c8:	2b00      	cmp	r3, #0
    e5ca:	f040 8105 	bne.w	e7d8 <am_hal_ble_patch_apply+0x358>
    e5ce:	f8d6 a004 	ldr.w	sl, [r6, #4]
    e5d2:	f1ba 0f00 	cmp.w	sl, #0
    e5d6:	f000 8091 	beq.w	e6fc <am_hal_ble_patch_apply+0x27c>
    e5da:	f8df 9178 	ldr.w	r9, [pc, #376]	; e754 <am_hal_ble_patch_apply+0x2d4>
    e5de:	4f59      	ldr	r7, [pc, #356]	; (e744 <am_hal_ble_patch_apply+0x2c4>)
    e5e0:	9501      	str	r5, [sp, #4]
    e5e2:	469b      	mov	fp, r3
    e5e4:	2201      	movs	r2, #1
    e5e6:	f889 2000 	strb.w	r2, [r9]
    e5ea:	6833      	ldr	r3, [r6, #0]
    e5ec:	f889 3001 	strb.w	r3, [r9, #1]
    e5f0:	f1ba 0f80 	cmp.w	sl, #128	; 0x80
    e5f4:	46d0      	mov	r8, sl
    e5f6:	f04f 03f2 	mov.w	r3, #242	; 0xf2
    e5fa:	bf28      	it	cs
    e5fc:	f04f 0880 	movcs.w	r8, #128	; 0x80
    e600:	f889 3002 	strb.w	r3, [r9, #2]
    e604:	f889 8003 	strb.w	r8, [r9, #3]
    e608:	68f1      	ldr	r1, [r6, #12]
    e60a:	4851      	ldr	r0, [pc, #324]	; (e750 <am_hal_ble_patch_apply+0x2d0>)
    e60c:	f8cd 9018 	str.w	r9, [sp, #24]
    e610:	2300      	movs	r3, #0
    e612:	f02b 0503 	bic.w	r5, fp, #3
    e616:	9308      	str	r3, [sp, #32]
    e618:	4429      	add	r1, r5
    e61a:	f88d 2022 	strb.w	r2, [sp, #34]	; 0x22
    e61e:	f108 0504 	add.w	r5, r8, #4
    e622:	4642      	mov	r2, r8
    e624:	9307      	str	r3, [sp, #28]
    e626:	9309      	str	r3, [sp, #36]	; 0x24
    e628:	930a      	str	r3, [sp, #40]	; 0x28
    e62a:	930b      	str	r3, [sp, #44]	; 0x2c
    e62c:	f8ad 5020 	strh.w	r5, [sp, #32]
    e630:	f7fd fdb6 	bl	c1a0 <memcpy>
    e634:	6823      	ldr	r3, [r4, #0]
    e636:	9a01      	ldr	r2, [sp, #4]
    e638:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e63c:	4293      	cmp	r3, r2
    e63e:	d184      	bne.n	e54a <am_hal_ble_patch_apply+0xca>
    e640:	a906      	add	r1, sp, #24
    e642:	4620      	mov	r0, r4
    e644:	f7ff fa34 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    e648:	4603      	mov	r3, r0
    e64a:	2800      	cmp	r0, #0
    e64c:	f47f af7e 	bne.w	e54c <am_hal_ble_patch_apply+0xcc>
    e650:	f8d7 330c 	ldr.w	r3, [r7, #780]	; 0x30c
    e654:	061d      	lsls	r5, r3, #24
    e656:	d40b      	bmi.n	e670 <am_hal_ble_patch_apply+0x1f0>
    e658:	4d3b      	ldr	r5, [pc, #236]	; (e748 <am_hal_ble_patch_apply+0x2c8>)
    e65a:	e002      	b.n	e662 <am_hal_ble_patch_apply+0x1e2>
    e65c:	3d01      	subs	r5, #1
    e65e:	f43f af5d 	beq.w	e51c <am_hal_ble_patch_apply+0x9c>
    e662:	2010      	movs	r0, #16
    e664:	f000 ff4e 	bl	f504 <am_hal_flash_delay>
    e668:	f8d7 330c 	ldr.w	r3, [r7, #780]	; 0x30c
    e66c:	0618      	lsls	r0, r3, #24
    e66e:	d5f5      	bpl.n	e65c <am_hal_ble_patch_apply+0x1dc>
    e670:	ab02      	add	r3, sp, #8
    e672:	9306      	str	r3, [sp, #24]
    e674:	2300      	movs	r3, #0
    e676:	9308      	str	r3, [sp, #32]
    e678:	6822      	ldr	r2, [r4, #0]
    e67a:	9307      	str	r3, [sp, #28]
    e67c:	9309      	str	r3, [sp, #36]	; 0x24
    e67e:	930a      	str	r3, [sp, #40]	; 0x28
    e680:	930b      	str	r3, [sp, #44]	; 0x2c
    e682:	2305      	movs	r3, #5
    e684:	f8ad 3020 	strh.w	r3, [sp, #32]
    e688:	9b01      	ldr	r3, [sp, #4]
    e68a:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    e68e:	2102      	movs	r1, #2
    e690:	429a      	cmp	r2, r3
    e692:	f88d 1022 	strb.w	r1, [sp, #34]	; 0x22
    e696:	f47f af58 	bne.w	e54a <am_hal_ble_patch_apply+0xca>
    e69a:	a906      	add	r1, sp, #24
    e69c:	4620      	mov	r0, r4
    e69e:	f7ff fa07 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    e6a2:	4603      	mov	r3, r0
    e6a4:	2800      	cmp	r0, #0
    e6a6:	f47f af51 	bne.w	e54c <am_hal_ble_patch_apply+0xcc>
    e6aa:	2304      	movs	r3, #4
    e6ac:	f89d 1008 	ldrb.w	r1, [sp, #8]
    e6b0:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
    e6b4:	23f2      	movs	r3, #242	; 0xf2
    e6b6:	7832      	ldrb	r2, [r6, #0]
    e6b8:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
    e6bc:	2904      	cmp	r1, #4
    e6be:	f04f 0301 	mov.w	r3, #1
    e6c2:	f88d 0034 	strb.w	r0, [sp, #52]	; 0x34
    e6c6:	f88d 2031 	strb.w	r2, [sp, #49]	; 0x31
    e6ca:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
    e6ce:	f040 8083 	bne.w	e7d8 <am_hal_ble_patch_apply+0x358>
    e6d2:	f89d 3009 	ldrb.w	r3, [sp, #9]
    e6d6:	4293      	cmp	r3, r2
    e6d8:	d17e      	bne.n	e7d8 <am_hal_ble_patch_apply+0x358>
    e6da:	f89d 300a 	ldrb.w	r3, [sp, #10]
    e6de:	2bf2      	cmp	r3, #242	; 0xf2
    e6e0:	d17a      	bne.n	e7d8 <am_hal_ble_patch_apply+0x358>
    e6e2:	f89d 300b 	ldrb.w	r3, [sp, #11]
    e6e6:	2b01      	cmp	r3, #1
    e6e8:	d176      	bne.n	e7d8 <am_hal_ble_patch_apply+0x358>
    e6ea:	f89d 300c 	ldrb.w	r3, [sp, #12]
    e6ee:	2b00      	cmp	r3, #0
    e6f0:	d172      	bne.n	e7d8 <am_hal_ble_patch_apply+0x358>
    e6f2:	ebba 0a08 	subs.w	sl, sl, r8
    e6f6:	44c3      	add	fp, r8
    e6f8:	f47f af74 	bne.w	e5e4 <am_hal_ble_patch_apply+0x164>
    e6fc:	68b3      	ldr	r3, [r6, #8]
    e6fe:	f88d 2009 	strb.w	r2, [sp, #9]
    e702:	2101      	movs	r1, #1
    e704:	0a1a      	lsrs	r2, r3, #8
    e706:	20f3      	movs	r0, #243	; 0xf3
    e708:	f88d 300c 	strb.w	r3, [sp, #12]
    e70c:	f88d 200d 	strb.w	r2, [sp, #13]
    e710:	2306      	movs	r3, #6
    e712:	f88d 1008 	strb.w	r1, [sp, #8]
    e716:	f88d 000a 	strb.w	r0, [sp, #10]
    e71a:	2502      	movs	r5, #2
    e71c:	aa02      	add	r2, sp, #8
    e71e:	2100      	movs	r1, #0
    e720:	4620      	mov	r0, r4
    e722:	f88d 500b 	strb.w	r5, [sp, #11]
    e726:	f7ff fe65 	bl	e3f4 <am_hal_ble_blocking_hci_write>
    e72a:	4603      	mov	r3, r0
    e72c:	2800      	cmp	r0, #0
    e72e:	d153      	bne.n	e7d8 <am_hal_ble_patch_apply+0x358>
    e730:	4f04      	ldr	r7, [pc, #16]	; (e744 <am_hal_ble_patch_apply+0x2c4>)
    e732:	f8d7 230c 	ldr.w	r2, [r7, #780]	; 0x30c
    e736:	0611      	lsls	r1, r2, #24
    e738:	d41b      	bmi.n	e772 <am_hal_ble_patch_apply+0x2f2>
    e73a:	4d03      	ldr	r5, [pc, #12]	; (e748 <am_hal_ble_patch_apply+0x2c8>)
    e73c:	e00f      	b.n	e75e <am_hal_ble_patch_apply+0x2de>
    e73e:	bf00      	nop
    e740:	01775230 	.word	0x01775230
    e744:	5000c000 	.word	0x5000c000
    e748:	000f4240 	.word	0x000f4240
    e74c:	08000004 	.word	0x08000004
    e750:	10002510 	.word	0x10002510
    e754:	1000250c 	.word	0x1000250c
    e758:	3d01      	subs	r5, #1
    e75a:	f43f aedf 	beq.w	e51c <am_hal_ble_patch_apply+0x9c>
    e75e:	2010      	movs	r0, #16
    e760:	9301      	str	r3, [sp, #4]
    e762:	f000 fecf 	bl	f504 <am_hal_flash_delay>
    e766:	f8d7 230c 	ldr.w	r2, [r7, #780]	; 0x30c
    e76a:	9b01      	ldr	r3, [sp, #4]
    e76c:	f012 0f80 	tst.w	r2, #128	; 0x80
    e770:	d0f2      	beq.n	e758 <am_hal_ble_patch_apply+0x2d8>
    e772:	2200      	movs	r2, #0
    e774:	9301      	str	r3, [sp, #4]
    e776:	4620      	mov	r0, r4
    e778:	ab02      	add	r3, sp, #8
    e77a:	a906      	add	r1, sp, #24
    e77c:	2502      	movs	r5, #2
    e77e:	2405      	movs	r4, #5
    e780:	9208      	str	r2, [sp, #32]
    e782:	9306      	str	r3, [sp, #24]
    e784:	9207      	str	r2, [sp, #28]
    e786:	9209      	str	r2, [sp, #36]	; 0x24
    e788:	920a      	str	r2, [sp, #40]	; 0x28
    e78a:	920b      	str	r2, [sp, #44]	; 0x2c
    e78c:	f88d 5022 	strb.w	r5, [sp, #34]	; 0x22
    e790:	f8ad 4020 	strh.w	r4, [sp, #32]
    e794:	f7ff fe5e 	bl	e454 <am_hal_ble_blocking_transfer>
    e798:	9b01      	ldr	r3, [sp, #4]
    e79a:	b9f8      	cbnz	r0, e7dc <am_hal_ble_patch_apply+0x35c>
    e79c:	f89d 2008 	ldrb.w	r2, [sp, #8]
    e7a0:	6831      	ldr	r1, [r6, #0]
    e7a2:	f88d 1031 	strb.w	r1, [sp, #49]	; 0x31
    e7a6:	2a04      	cmp	r2, #4
    e7a8:	f04f 00f3 	mov.w	r0, #243	; 0xf3
    e7ac:	f04f 0101 	mov.w	r1, #1
    e7b0:	d112      	bne.n	e7d8 <am_hal_ble_patch_apply+0x358>
    e7b2:	f89d 4031 	ldrb.w	r4, [sp, #49]	; 0x31
    e7b6:	f89d 2009 	ldrb.w	r2, [sp, #9]
    e7ba:	4294      	cmp	r4, r2
    e7bc:	d10c      	bne.n	e7d8 <am_hal_ble_patch_apply+0x358>
    e7be:	f89d 200a 	ldrb.w	r2, [sp, #10]
    e7c2:	4290      	cmp	r0, r2
    e7c4:	d108      	bne.n	e7d8 <am_hal_ble_patch_apply+0x358>
    e7c6:	f89d 200b 	ldrb.w	r2, [sp, #11]
    e7ca:	4291      	cmp	r1, r2
    e7cc:	d104      	bne.n	e7d8 <am_hal_ble_patch_apply+0x358>
    e7ce:	f89d 200c 	ldrb.w	r2, [sp, #12]
    e7d2:	2a00      	cmp	r2, #0
    e7d4:	f43f aeba 	beq.w	e54c <am_hal_ble_patch_apply+0xcc>
    e7d8:	2301      	movs	r3, #1
    e7da:	e6b7      	b.n	e54c <am_hal_ble_patch_apply+0xcc>
    e7dc:	4603      	mov	r3, r0
    e7de:	e6b5      	b.n	e54c <am_hal_ble_patch_apply+0xcc>

0000e7e0 <am_hal_ble_int_enable>:
    e7e0:	b128      	cbz	r0, e7ee <am_hal_ble_int_enable+0xe>
    e7e2:	6803      	ldr	r3, [r0, #0]
    e7e4:	4a0c      	ldr	r2, [pc, #48]	; (e818 <am_hal_ble_int_enable+0x38>)
    e7e6:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e7ea:	4293      	cmp	r3, r2
    e7ec:	d001      	beq.n	e7f2 <am_hal_ble_int_enable+0x12>
    e7ee:	2002      	movs	r0, #2
    e7f0:	4770      	bx	lr
    e7f2:	b510      	push	{r4, lr}
    e7f4:	b082      	sub	sp, #8
    e7f6:	460c      	mov	r4, r1
    e7f8:	f001 f88e 	bl	f918 <am_hal_interrupt_master_disable>
    e7fc:	4b07      	ldr	r3, [pc, #28]	; (e81c <am_hal_ble_int_enable+0x3c>)
    e7fe:	9001      	str	r0, [sp, #4]
    e800:	f8d3 1220 	ldr.w	r1, [r3, #544]	; 0x220
    e804:	4321      	orrs	r1, r4
    e806:	f8c3 1220 	str.w	r1, [r3, #544]	; 0x220
    e80a:	9801      	ldr	r0, [sp, #4]
    e80c:	f001 f888 	bl	f920 <am_hal_interrupt_master_set>
    e810:	2000      	movs	r0, #0
    e812:	b002      	add	sp, #8
    e814:	bd10      	pop	{r4, pc}
    e816:	bf00      	nop
    e818:	01775230 	.word	0x01775230
    e81c:	5000c000 	.word	0x5000c000

0000e820 <am_hal_ble_int_clear>:
    e820:	b128      	cbz	r0, e82e <am_hal_ble_int_clear+0xe>
    e822:	6803      	ldr	r3, [r0, #0]
    e824:	4a05      	ldr	r2, [pc, #20]	; (e83c <am_hal_ble_int_clear+0x1c>)
    e826:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e82a:	4293      	cmp	r3, r2
    e82c:	d001      	beq.n	e832 <am_hal_ble_int_clear+0x12>
    e82e:	2002      	movs	r0, #2
    e830:	4770      	bx	lr
    e832:	4b03      	ldr	r3, [pc, #12]	; (e840 <am_hal_ble_int_clear+0x20>)
    e834:	2000      	movs	r0, #0
    e836:	f8c3 1228 	str.w	r1, [r3, #552]	; 0x228
    e83a:	4770      	bx	lr
    e83c:	01775230 	.word	0x01775230
    e840:	5000c000 	.word	0x5000c000

0000e844 <am_hal_ble_plf_reg_read>:
    e844:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    e848:	b092      	sub	sp, #72	; 0x48
    e84a:	0a0e      	lsrs	r6, r1, #8
    e84c:	0c0d      	lsrs	r5, r1, #16
    e84e:	2300      	movs	r3, #0
    e850:	ea4f 6e11 	mov.w	lr, r1, lsr #24
    e854:	f88d 100c 	strb.w	r1, [sp, #12]
    e858:	f88d 600d 	strb.w	r6, [sp, #13]
    e85c:	f88d 500e 	strb.w	r5, [sp, #14]
    e860:	2401      	movs	r4, #1
    e862:	2702      	movs	r7, #2
    e864:	26fd      	movs	r6, #253	; 0xfd
    e866:	2504      	movs	r5, #4
    e868:	4952      	ldr	r1, [pc, #328]	; (e9b4 <am_hal_ble_plf_reg_read+0x170>)
    e86a:	f88d e00f 	strb.w	lr, [sp, #15]
    e86e:	f88d 7009 	strb.w	r7, [sp, #9]
    e872:	f88d 500b 	strb.w	r5, [sp, #11]
    e876:	930a      	str	r3, [sp, #40]	; 0x28
    e878:	930b      	str	r3, [sp, #44]	; 0x2c
    e87a:	930c      	str	r3, [sp, #48]	; 0x30
    e87c:	f88d 4008 	strb.w	r4, [sp, #8]
    e880:	f88d 600a 	strb.w	r6, [sp, #10]
    e884:	f10d 0e08 	add.w	lr, sp, #8
    e888:	2508      	movs	r5, #8
    e88a:	f8d1 6220 	ldr.w	r6, [r1, #544]	; 0x220
    e88e:	f8c1 3220 	str.w	r3, [r1, #544]	; 0x220
    e892:	4617      	mov	r7, r2
    e894:	f88d 3014 	strb.w	r3, [sp, #20]
    e898:	f88d 3015 	strb.w	r3, [sp, #21]
    e89c:	f88d 3016 	strb.w	r3, [sp, #22]
    e8a0:	f88d 3017 	strb.w	r3, [sp, #23]
    e8a4:	f88d 401a 	strb.w	r4, [sp, #26]
    e8a8:	f88d 301b 	strb.w	r3, [sp, #27]
    e8ac:	f88d 301c 	strb.w	r3, [sp, #28]
    e8b0:	9308      	str	r3, [sp, #32]
    e8b2:	9309      	str	r3, [sp, #36]	; 0x24
    e8b4:	f8cd e010 	str.w	lr, [sp, #16]
    e8b8:	f8ad 5018 	strh.w	r5, [sp, #24]
    e8bc:	4680      	mov	r8, r0
    e8be:	b128      	cbz	r0, e8cc <am_hal_ble_plf_reg_read+0x88>
    e8c0:	6803      	ldr	r3, [r0, #0]
    e8c2:	4a3d      	ldr	r2, [pc, #244]	; (e9b8 <am_hal_ble_plf_reg_read+0x174>)
    e8c4:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e8c8:	4293      	cmp	r3, r2
    e8ca:	d06e      	beq.n	e9aa <am_hal_ble_plf_reg_read+0x166>
    e8cc:	4d39      	ldr	r5, [pc, #228]	; (e9b4 <am_hal_ble_plf_reg_read+0x170>)
    e8ce:	f8d5 3410 	ldr.w	r3, [r5, #1040]	; 0x410
    e8d2:	f043 0302 	orr.w	r3, r3, #2
    e8d6:	f8c5 3410 	str.w	r3, [r5, #1040]	; 0x410
    e8da:	f8d5 330c 	ldr.w	r3, [r5, #780]	; 0x30c
    e8de:	0619      	lsls	r1, r3, #24
    e8e0:	d40a      	bmi.n	e8f8 <am_hal_ble_plf_reg_read+0xb4>
    e8e2:	4c36      	ldr	r4, [pc, #216]	; (e9bc <am_hal_ble_plf_reg_read+0x178>)
    e8e4:	e001      	b.n	e8ea <am_hal_ble_plf_reg_read+0xa6>
    e8e6:	3c01      	subs	r4, #1
    e8e8:	d05b      	beq.n	e9a2 <am_hal_ble_plf_reg_read+0x15e>
    e8ea:	2010      	movs	r0, #16
    e8ec:	f000 fe0a 	bl	f504 <am_hal_flash_delay>
    e8f0:	f8d5 330c 	ldr.w	r3, [r5, #780]	; 0x30c
    e8f4:	061a      	lsls	r2, r3, #24
    e8f6:	d5f6      	bpl.n	e8e6 <am_hal_ble_plf_reg_read+0xa2>
    e8f8:	2300      	movs	r3, #0
    e8fa:	2202      	movs	r2, #2
    e8fc:	a901      	add	r1, sp, #4
    e8fe:	9104      	str	r1, [sp, #16]
    e900:	f88d 3014 	strb.w	r3, [sp, #20]
    e904:	f88d 3015 	strb.w	r3, [sp, #21]
    e908:	f88d 3016 	strb.w	r3, [sp, #22]
    e90c:	f88d 3017 	strb.w	r3, [sp, #23]
    e910:	f88d 301b 	strb.w	r3, [sp, #27]
    e914:	f88d 301c 	strb.w	r3, [sp, #28]
    e918:	9308      	str	r3, [sp, #32]
    e91a:	9309      	str	r3, [sp, #36]	; 0x24
    e91c:	f8ad 2018 	strh.w	r2, [sp, #24]
    e920:	f88d 201a 	strb.w	r2, [sp, #26]
    e924:	f1b8 0f00 	cmp.w	r8, #0
    e928:	d006      	beq.n	e938 <am_hal_ble_plf_reg_read+0xf4>
    e92a:	f8d8 4000 	ldr.w	r4, [r8]
    e92e:	4b22      	ldr	r3, [pc, #136]	; (e9b8 <am_hal_ble_plf_reg_read+0x174>)
    e930:	f024 447e 	bic.w	r4, r4, #4261412864	; 0xfe000000
    e934:	429c      	cmp	r4, r3
    e936:	d00e      	beq.n	e956 <am_hal_ble_plf_reg_read+0x112>
    e938:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
    e93c:	990c      	ldr	r1, [sp, #48]	; 0x30
    e93e:	4a1d      	ldr	r2, [pc, #116]	; (e9b4 <am_hal_ble_plf_reg_read+0x170>)
    e940:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
    e944:	2000      	movs	r0, #0
    e946:	603b      	str	r3, [r7, #0]
    e948:	f8c2 6228 	str.w	r6, [r2, #552]	; 0x228
    e94c:	f8c2 6220 	str.w	r6, [r2, #544]	; 0x220
    e950:	b012      	add	sp, #72	; 0x48
    e952:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e956:	4b17      	ldr	r3, [pc, #92]	; (e9b4 <am_hal_ble_plf_reg_read+0x170>)
    e958:	f8d3 330c 	ldr.w	r3, [r3, #780]	; 0x30c
    e95c:	061b      	lsls	r3, r3, #24
    e95e:	d5eb      	bpl.n	e938 <am_hal_ble_plf_reg_read+0xf4>
    e960:	a904      	add	r1, sp, #16
    e962:	4640      	mov	r0, r8
    e964:	f7ff f8a4 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    e968:	2800      	cmp	r0, #0
    e96a:	d1e5      	bne.n	e938 <am_hal_ble_plf_reg_read+0xf4>
    e96c:	f89d 2005 	ldrb.w	r2, [sp, #5]
    e970:	f89d 3004 	ldrb.w	r3, [sp, #4]
    e974:	eb03 2302 	add.w	r3, r3, r2, lsl #8
    e978:	b29b      	uxth	r3, r3
    e97a:	aa0a      	add	r2, sp, #40	; 0x28
    e97c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
    e980:	f8ad 3018 	strh.w	r3, [sp, #24]
    e984:	9204      	str	r2, [sp, #16]
    e986:	d8d7      	bhi.n	e938 <am_hal_ble_plf_reg_read+0xf4>
    e988:	f8d8 2000 	ldr.w	r2, [r8]
    e98c:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    e990:	42a2      	cmp	r2, r4
    e992:	d1d1      	bne.n	e938 <am_hal_ble_plf_reg_read+0xf4>
    e994:	2b00      	cmp	r3, #0
    e996:	d0cf      	beq.n	e938 <am_hal_ble_plf_reg_read+0xf4>
    e998:	a904      	add	r1, sp, #16
    e99a:	4640      	mov	r0, r8
    e99c:	f7ff f888 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    e9a0:	e7ca      	b.n	e938 <am_hal_ble_plf_reg_read+0xf4>
    e9a2:	4807      	ldr	r0, [pc, #28]	; (e9c0 <am_hal_ble_plf_reg_read+0x17c>)
    e9a4:	b012      	add	sp, #72	; 0x48
    e9a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e9aa:	a904      	add	r1, sp, #16
    e9ac:	f7ff f880 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    e9b0:	e78c      	b.n	e8cc <am_hal_ble_plf_reg_read+0x88>
    e9b2:	bf00      	nop
    e9b4:	5000c000 	.word	0x5000c000
    e9b8:	01775230 	.word	0x01775230
    e9bc:	0007a120 	.word	0x0007a120
    e9c0:	08000004 	.word	0x08000004

0000e9c4 <am_hal_ble_plf_reg_write>:
    e9c4:	b5f0      	push	{r4, r5, r6, r7, lr}
    e9c6:	b091      	sub	sp, #68	; 0x44
    e9c8:	0c0f      	lsrs	r7, r1, #16
    e9ca:	0e0e      	lsrs	r6, r1, #24
    e9cc:	0c14      	lsrs	r4, r2, #16
    e9ce:	0e13      	lsrs	r3, r2, #24
    e9d0:	ea4f 2e11 	mov.w	lr, r1, lsr #8
    e9d4:	0a15      	lsrs	r5, r2, #8
    e9d6:	f88d 2008 	strb.w	r2, [sp, #8]
    e9da:	f88d 6007 	strb.w	r6, [sp, #7]
    e9de:	f88d 400a 	strb.w	r4, [sp, #10]
    e9e2:	f88d 300b 	strb.w	r3, [sp, #11]
    e9e6:	f88d 1004 	strb.w	r1, [sp, #4]
    e9ea:	f88d e005 	strb.w	lr, [sp, #5]
    e9ee:	f88d 7006 	strb.w	r7, [sp, #6]
    e9f2:	f88d 5009 	strb.w	r5, [sp, #9]
    e9f6:	ab01      	add	r3, sp, #4
    e9f8:	4606      	mov	r6, r0
    e9fa:	e893 0003 	ldmia.w	r3, {r0, r1}
    e9fe:	ab04      	add	r3, sp, #16
    ea00:	e883 0003 	stmia.w	r3, {r0, r1}
    ea04:	4a47      	ldr	r2, [pc, #284]	; (eb24 <am_hal_ble_plf_reg_write+0x160>)
    ea06:	4b48      	ldr	r3, [pc, #288]	; (eb28 <am_hal_ble_plf_reg_write+0x164>)
    ea08:	9303      	str	r3, [sp, #12]
    ea0a:	ac03      	add	r4, sp, #12
    ea0c:	2300      	movs	r3, #0
    ea0e:	200c      	movs	r0, #12
    ea10:	2101      	movs	r1, #1
    ea12:	f8d2 7220 	ldr.w	r7, [r2, #544]	; 0x220
    ea16:	f8c2 3220 	str.w	r3, [r2, #544]	; 0x220
    ea1a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
    ea1e:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
    ea22:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
    ea26:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
    ea2a:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
    ea2e:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
    ea32:	930e      	str	r3, [sp, #56]	; 0x38
    ea34:	930f      	str	r3, [sp, #60]	; 0x3c
    ea36:	940a      	str	r4, [sp, #40]	; 0x28
    ea38:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
    ea3c:	f88d 1032 	strb.w	r1, [sp, #50]	; 0x32
    ea40:	b12e      	cbz	r6, ea4e <am_hal_ble_plf_reg_write+0x8a>
    ea42:	6833      	ldr	r3, [r6, #0]
    ea44:	4a39      	ldr	r2, [pc, #228]	; (eb2c <am_hal_ble_plf_reg_write+0x168>)
    ea46:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    ea4a:	4293      	cmp	r3, r2
    ea4c:	d064      	beq.n	eb18 <am_hal_ble_plf_reg_write+0x154>
    ea4e:	4d35      	ldr	r5, [pc, #212]	; (eb24 <am_hal_ble_plf_reg_write+0x160>)
    ea50:	f8d5 3410 	ldr.w	r3, [r5, #1040]	; 0x410
    ea54:	f043 0302 	orr.w	r3, r3, #2
    ea58:	f8c5 3410 	str.w	r3, [r5, #1040]	; 0x410
    ea5c:	f8d5 330c 	ldr.w	r3, [r5, #780]	; 0x30c
    ea60:	0619      	lsls	r1, r3, #24
    ea62:	bf58      	it	pl
    ea64:	f24c 3450 	movwpl	r4, #50000	; 0xc350
    ea68:	d502      	bpl.n	ea70 <am_hal_ble_plf_reg_write+0xac>
    ea6a:	e008      	b.n	ea7e <am_hal_ble_plf_reg_write+0xba>
    ea6c:	3c01      	subs	r4, #1
    ea6e:	d050      	beq.n	eb12 <am_hal_ble_plf_reg_write+0x14e>
    ea70:	2010      	movs	r0, #16
    ea72:	f000 fd47 	bl	f504 <am_hal_flash_delay>
    ea76:	f8d5 330c 	ldr.w	r3, [r5, #780]	; 0x30c
    ea7a:	061a      	lsls	r2, r3, #24
    ea7c:	d5f6      	bpl.n	ea6c <am_hal_ble_plf_reg_write+0xa8>
    ea7e:	2300      	movs	r3, #0
    ea80:	2202      	movs	r2, #2
    ea82:	f8cd d028 	str.w	sp, [sp, #40]	; 0x28
    ea86:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
    ea8a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
    ea8e:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
    ea92:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
    ea96:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
    ea9a:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
    ea9e:	930e      	str	r3, [sp, #56]	; 0x38
    eaa0:	930f      	str	r3, [sp, #60]	; 0x3c
    eaa2:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
    eaa6:	f88d 2032 	strb.w	r2, [sp, #50]	; 0x32
    eaaa:	b12e      	cbz	r6, eab8 <am_hal_ble_plf_reg_write+0xf4>
    eaac:	6834      	ldr	r4, [r6, #0]
    eaae:	4b1f      	ldr	r3, [pc, #124]	; (eb2c <am_hal_ble_plf_reg_write+0x168>)
    eab0:	f024 447e 	bic.w	r4, r4, #4261412864	; 0xfe000000
    eab4:	429c      	cmp	r4, r3
    eab6:	d007      	beq.n	eac8 <am_hal_ble_plf_reg_write+0x104>
    eab8:	4b1a      	ldr	r3, [pc, #104]	; (eb24 <am_hal_ble_plf_reg_write+0x160>)
    eaba:	2000      	movs	r0, #0
    eabc:	f8c3 7228 	str.w	r7, [r3, #552]	; 0x228
    eac0:	f8c3 7220 	str.w	r7, [r3, #544]	; 0x220
    eac4:	b011      	add	sp, #68	; 0x44
    eac6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    eac8:	4b16      	ldr	r3, [pc, #88]	; (eb24 <am_hal_ble_plf_reg_write+0x160>)
    eaca:	f8d3 330c 	ldr.w	r3, [r3, #780]	; 0x30c
    eace:	061b      	lsls	r3, r3, #24
    ead0:	d5f2      	bpl.n	eab8 <am_hal_ble_plf_reg_write+0xf4>
    ead2:	a90a      	add	r1, sp, #40	; 0x28
    ead4:	4630      	mov	r0, r6
    ead6:	f7fe ffeb 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    eada:	2800      	cmp	r0, #0
    eadc:	d1ec      	bne.n	eab8 <am_hal_ble_plf_reg_write+0xf4>
    eade:	f89d 2001 	ldrb.w	r2, [sp, #1]
    eae2:	f89d 3000 	ldrb.w	r3, [sp]
    eae6:	eb03 2302 	add.w	r3, r3, r2, lsl #8
    eaea:	b29b      	uxth	r3, r3
    eaec:	aa06      	add	r2, sp, #24
    eaee:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
    eaf2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
    eaf6:	920a      	str	r2, [sp, #40]	; 0x28
    eaf8:	d8de      	bhi.n	eab8 <am_hal_ble_plf_reg_write+0xf4>
    eafa:	6832      	ldr	r2, [r6, #0]
    eafc:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    eb00:	42a2      	cmp	r2, r4
    eb02:	d1d9      	bne.n	eab8 <am_hal_ble_plf_reg_write+0xf4>
    eb04:	2b00      	cmp	r3, #0
    eb06:	d0d7      	beq.n	eab8 <am_hal_ble_plf_reg_write+0xf4>
    eb08:	a90a      	add	r1, sp, #40	; 0x28
    eb0a:	4630      	mov	r0, r6
    eb0c:	f7fe ffd0 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    eb10:	e7d2      	b.n	eab8 <am_hal_ble_plf_reg_write+0xf4>
    eb12:	4807      	ldr	r0, [pc, #28]	; (eb30 <am_hal_ble_plf_reg_write+0x16c>)
    eb14:	b011      	add	sp, #68	; 0x44
    eb16:	bdf0      	pop	{r4, r5, r6, r7, pc}
    eb18:	a90a      	add	r1, sp, #40	; 0x28
    eb1a:	4630      	mov	r0, r6
    eb1c:	f7fe ffc8 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    eb20:	e795      	b.n	ea4e <am_hal_ble_plf_reg_write+0x8a>
    eb22:	bf00      	nop
    eb24:	5000c000 	.word	0x5000c000
    eb28:	08fd0301 	.word	0x08fd0301
    eb2c:	01775230 	.word	0x01775230
    eb30:	08000004 	.word	0x08000004

0000eb34 <am_hal_ble_transmitter_modex_set>:
    eb34:	b530      	push	{r4, r5, lr}
    eb36:	b085      	sub	sp, #20
    eb38:	4604      	mov	r4, r0
    eb3a:	2300      	movs	r3, #0
    eb3c:	f001 057f 	and.w	r5, r1, #127	; 0x7f
    eb40:	466a      	mov	r2, sp
    eb42:	4927      	ldr	r1, [pc, #156]	; (ebe0 <am_hal_ble_transmitter_modex_set+0xac>)
    eb44:	9303      	str	r3, [sp, #12]
    eb46:	f7ff fe7d 	bl	e844 <am_hal_ble_plf_reg_read>
    eb4a:	4620      	mov	r0, r4
    eb4c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    eb50:	4923      	ldr	r1, [pc, #140]	; (ebe0 <am_hal_ble_transmitter_modex_set+0xac>)
    eb52:	f7ff ff37 	bl	e9c4 <am_hal_ble_plf_reg_write>
    eb56:	aa03      	add	r2, sp, #12
    eb58:	4620      	mov	r0, r4
    eb5a:	4922      	ldr	r1, [pc, #136]	; (ebe4 <am_hal_ble_transmitter_modex_set+0xb0>)
    eb5c:	f7ff fe72 	bl	e844 <am_hal_ble_plf_reg_read>
    eb60:	9b03      	ldr	r3, [sp, #12]
    eb62:	aa02      	add	r2, sp, #8
    eb64:	f043 0308 	orr.w	r3, r3, #8
    eb68:	4620      	mov	r0, r4
    eb6a:	f04f 41a4 	mov.w	r1, #1375731712	; 0x52000000
    eb6e:	9303      	str	r3, [sp, #12]
    eb70:	f7ff fe68 	bl	e844 <am_hal_ble_plf_reg_read>
    eb74:	9b02      	ldr	r3, [sp, #8]
    eb76:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
    eb7a:	461a      	mov	r2, r3
    eb7c:	4620      	mov	r0, r4
    eb7e:	f04f 41a4 	mov.w	r1, #1375731712	; 0x52000000
    eb82:	9302      	str	r3, [sp, #8]
    eb84:	f7ff ff1e 	bl	e9c4 <am_hal_ble_plf_reg_write>
    eb88:	aa01      	add	r2, sp, #4
    eb8a:	4620      	mov	r0, r4
    eb8c:	4916      	ldr	r1, [pc, #88]	; (ebe8 <am_hal_ble_transmitter_modex_set+0xb4>)
    eb8e:	f7ff fe59 	bl	e844 <am_hal_ble_plf_reg_read>
    eb92:	9a01      	ldr	r2, [sp, #4]
    eb94:	4914      	ldr	r1, [pc, #80]	; (ebe8 <am_hal_ble_transmitter_modex_set+0xb4>)
    eb96:	4620      	mov	r0, r4
    eb98:	f042 0208 	orr.w	r2, r2, #8
    eb9c:	f7ff ff12 	bl	e9c4 <am_hal_ble_plf_reg_write>
    eba0:	006a      	lsls	r2, r5, #1
    eba2:	f042 0201 	orr.w	r2, r2, #1
    eba6:	4620      	mov	r0, r4
    eba8:	4910      	ldr	r1, [pc, #64]	; (ebec <am_hal_ble_transmitter_modex_set+0xb8>)
    ebaa:	f7ff ff0b 	bl	e9c4 <am_hal_ble_plf_reg_write>
    ebae:	490d      	ldr	r1, [pc, #52]	; (ebe4 <am_hal_ble_transmitter_modex_set+0xb0>)
    ebb0:	9a03      	ldr	r2, [sp, #12]
    ebb2:	4620      	mov	r0, r4
    ebb4:	f7ff ff06 	bl	e9c4 <am_hal_ble_plf_reg_write>
    ebb8:	4b0d      	ldr	r3, [pc, #52]	; (ebf0 <am_hal_ble_transmitter_modex_set+0xbc>)
    ebba:	68db      	ldr	r3, [r3, #12]
    ebbc:	b2db      	uxtb	r3, r3
    ebbe:	2b21      	cmp	r3, #33	; 0x21
    ebc0:	bf0c      	ite	eq
    ebc2:	490c      	ldreq	r1, [pc, #48]	; (ebf4 <am_hal_ble_transmitter_modex_set+0xc0>)
    ebc4:	490c      	ldrne	r1, [pc, #48]	; (ebf8 <am_hal_ble_transmitter_modex_set+0xc4>)
    ebc6:	462a      	mov	r2, r5
    ebc8:	4620      	mov	r0, r4
    ebca:	f7ff fefb 	bl	e9c4 <am_hal_ble_plf_reg_write>
    ebce:	4620      	mov	r0, r4
    ebd0:	9a00      	ldr	r2, [sp, #0]
    ebd2:	4903      	ldr	r1, [pc, #12]	; (ebe0 <am_hal_ble_transmitter_modex_set+0xac>)
    ebd4:	f7ff fef6 	bl	e9c4 <am_hal_ble_plf_reg_write>
    ebd8:	2000      	movs	r0, #0
    ebda:	b005      	add	sp, #20
    ebdc:	bd30      	pop	{r4, r5, pc}
    ebde:	bf00      	nop
    ebe0:	43000004 	.word	0x43000004
    ebe4:	52000008 	.word	0x52000008
    ebe8:	45800070 	.word	0x45800070
    ebec:	52000014 	.word	0x52000014
    ebf0:	40020000 	.word	0x40020000
    ebf4:	20006874 	.word	0x20006874
    ebf8:	20006070 	.word	0x20006070

0000ebfc <am_hal_ble_patch_complete.part.10>:
    ebfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    ec00:	b08c      	sub	sp, #48	; 0x30
    ec02:	2300      	movs	r3, #0
    ec04:	9308      	str	r3, [sp, #32]
    ec06:	2201      	movs	r2, #1
    ec08:	2506      	movs	r5, #6
    ec0a:	24ee      	movs	r4, #238	; 0xee
    ec0c:	21f1      	movs	r1, #241	; 0xf1
    ec0e:	9307      	str	r3, [sp, #28]
    ec10:	9309      	str	r3, [sp, #36]	; 0x24
    ec12:	930a      	str	r3, [sp, #40]	; 0x28
    ec14:	930b      	str	r3, [sp, #44]	; 0x2c
    ec16:	f88d 3004 	strb.w	r3, [sp, #4]
    ec1a:	f88d 3005 	strb.w	r3, [sp, #5]
    ec1e:	2302      	movs	r3, #2
    ec20:	f8ad 5020 	strh.w	r5, [sp, #32]
    ec24:	f88d 2022 	strb.w	r2, [sp, #34]	; 0x22
    ec28:	f88d 2000 	strb.w	r2, [sp]
    ec2c:	f8cd d018 	str.w	sp, [sp, #24]
    ec30:	f88d 4001 	strb.w	r4, [sp, #1]
    ec34:	f88d 1002 	strb.w	r1, [sp, #2]
    ec38:	f88d 3003 	strb.w	r3, [sp, #3]
    ec3c:	4605      	mov	r5, r0
    ec3e:	2800      	cmp	r0, #0
    ec40:	f000 80e4 	beq.w	ee0c <am_hal_ble_patch_complete.part.10+0x210>
    ec44:	4e7d      	ldr	r6, [pc, #500]	; (ee3c <am_hal_ble_patch_complete.part.10+0x240>)
    ec46:	f241 3488 	movw	r4, #5000	; 0x1388
    ec4a:	e001      	b.n	ec50 <am_hal_ble_patch_complete.part.10+0x54>
    ec4c:	3c01      	subs	r4, #1
    ec4e:	d00d      	beq.n	ec6c <am_hal_ble_patch_complete.part.10+0x70>
    ec50:	682b      	ldr	r3, [r5, #0]
    ec52:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    ec56:	42b3      	cmp	r3, r6
    ec58:	d1f8      	bne.n	ec4c <am_hal_ble_patch_complete.part.10+0x50>
    ec5a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
    ec5e:	a906      	add	r1, sp, #24
    ec60:	4628      	mov	r0, r5
    ec62:	b11b      	cbz	r3, ec6c <am_hal_ble_patch_complete.part.10+0x70>
    ec64:	f7fe ff24 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    ec68:	2800      	cmp	r0, #0
    ec6a:	d1ef      	bne.n	ec4c <am_hal_ble_patch_complete.part.10+0x50>
    ec6c:	4b74      	ldr	r3, [pc, #464]	; (ee40 <am_hal_ble_patch_complete.part.10+0x244>)
    ec6e:	f8d3 330c 	ldr.w	r3, [r3, #780]	; 0x30c
    ec72:	061b      	lsls	r3, r3, #24
    ec74:	f100 80d1 	bmi.w	ee1a <am_hal_ble_patch_complete.part.10+0x21e>
    ec78:	4c72      	ldr	r4, [pc, #456]	; (ee44 <am_hal_ble_patch_complete.part.10+0x248>)
    ec7a:	4e71      	ldr	r6, [pc, #452]	; (ee40 <am_hal_ble_patch_complete.part.10+0x244>)
    ec7c:	e001      	b.n	ec82 <am_hal_ble_patch_complete.part.10+0x86>
    ec7e:	3c01      	subs	r4, #1
    ec80:	d019      	beq.n	ecb6 <am_hal_ble_patch_complete.part.10+0xba>
    ec82:	2010      	movs	r0, #16
    ec84:	f000 fc3e 	bl	f504 <am_hal_flash_delay>
    ec88:	f8d6 330c 	ldr.w	r3, [r6, #780]	; 0x30c
    ec8c:	061f      	lsls	r7, r3, #24
    ec8e:	d5f6      	bpl.n	ec7e <am_hal_ble_patch_complete.part.10+0x82>
    ec90:	2302      	movs	r3, #2
    ec92:	af03      	add	r7, sp, #12
    ec94:	f88d 3022 	strb.w	r3, [sp, #34]	; 0x22
    ec98:	f8ad 3020 	strh.w	r3, [sp, #32]
    ec9c:	9706      	str	r7, [sp, #24]
    ec9e:	b12d      	cbz	r5, ecac <am_hal_ble_patch_complete.part.10+0xb0>
    eca0:	682e      	ldr	r6, [r5, #0]
    eca2:	4b66      	ldr	r3, [pc, #408]	; (ee3c <am_hal_ble_patch_complete.part.10+0x240>)
    eca4:	f026 467e 	bic.w	r6, r6, #4261412864	; 0xfe000000
    eca8:	429e      	cmp	r6, r3
    ecaa:	d009      	beq.n	ecc0 <am_hal_ble_patch_complete.part.10+0xc4>
    ecac:	2402      	movs	r4, #2
    ecae:	4620      	mov	r0, r4
    ecb0:	b00c      	add	sp, #48	; 0x30
    ecb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ecb6:	4c64      	ldr	r4, [pc, #400]	; (ee48 <am_hal_ble_patch_complete.part.10+0x24c>)
    ecb8:	4620      	mov	r0, r4
    ecba:	b00c      	add	sp, #48	; 0x30
    ecbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ecc0:	a906      	add	r1, sp, #24
    ecc2:	4628      	mov	r0, r5
    ecc4:	f7fe fef4 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    ecc8:	4604      	mov	r4, r0
    ecca:	2800      	cmp	r0, #0
    eccc:	d1ef      	bne.n	ecae <am_hal_ble_patch_complete.part.10+0xb2>
    ecce:	f89d 100d 	ldrb.w	r1, [sp, #13]
    ecd2:	29ee      	cmp	r1, #238	; 0xee
    ecd4:	d01a      	beq.n	ed0c <am_hal_ble_patch_complete.part.10+0x110>
    ecd6:	f89d 300c 	ldrb.w	r3, [sp, #12]
    ecda:	682a      	ldr	r2, [r5, #0]
    ecdc:	eb03 2301 	add.w	r3, r3, r1, lsl #8
    ece0:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    ece4:	b29b      	uxth	r3, r3
    ece6:	42b2      	cmp	r2, r6
    ece8:	f8ad 3020 	strh.w	r3, [sp, #32]
    ecec:	d1de      	bne.n	ecac <am_hal_ble_patch_complete.part.10+0xb0>
    ecee:	b133      	cbz	r3, ecfe <am_hal_ble_patch_complete.part.10+0x102>
    ecf0:	a906      	add	r1, sp, #24
    ecf2:	4628      	mov	r0, r5
    ecf4:	f7fe fedc 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    ecf8:	b108      	cbz	r0, ecfe <am_hal_ble_patch_complete.part.10+0x102>
    ecfa:	4604      	mov	r4, r0
    ecfc:	e7d7      	b.n	ecae <am_hal_ble_patch_complete.part.10+0xb2>
    ecfe:	2301      	movs	r3, #1
    ed00:	4620      	mov	r0, r4
    ed02:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    ed06:	b00c      	add	sp, #48	; 0x30
    ed08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ed0c:	682b      	ldr	r3, [r5, #0]
    ed0e:	f023 487e 	bic.w	r8, r3, #4261412864	; 0xfe000000
    ed12:	2203      	movs	r2, #3
    ed14:	45b0      	cmp	r8, r6
    ed16:	f8ad 2020 	strh.w	r2, [sp, #32]
    ed1a:	d1c7      	bne.n	ecac <am_hal_ble_patch_complete.part.10+0xb0>
    ed1c:	a906      	add	r1, sp, #24
    ed1e:	4628      	mov	r0, r5
    ed20:	f7fe fec6 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    ed24:	4604      	mov	r4, r0
    ed26:	2800      	cmp	r0, #0
    ed28:	d1c1      	bne.n	ecae <am_hal_ble_patch_complete.part.10+0xb2>
    ed2a:	2301      	movs	r3, #1
    ed2c:	2005      	movs	r0, #5
    ed2e:	2104      	movs	r1, #4
    ed30:	22fd      	movs	r2, #253	; 0xfd
    ed32:	9408      	str	r4, [sp, #32]
    ed34:	9407      	str	r4, [sp, #28]
    ed36:	9409      	str	r4, [sp, #36]	; 0x24
    ed38:	940a      	str	r4, [sp, #40]	; 0x28
    ed3a:	940b      	str	r4, [sp, #44]	; 0x2c
    ed3c:	f8cd d018 	str.w	sp, [sp, #24]
    ed40:	f88d 3022 	strb.w	r3, [sp, #34]	; 0x22
    ed44:	f88d 3000 	strb.w	r3, [sp]
    ed48:	f88d 3003 	strb.w	r3, [sp, #3]
    ed4c:	f88d 3004 	strb.w	r3, [sp, #4]
    ed50:	f8ad 0020 	strh.w	r0, [sp, #32]
    ed54:	f88d 1001 	strb.w	r1, [sp, #1]
    ed58:	f88d 2002 	strb.w	r2, [sp, #2]
    ed5c:	f241 3688 	movw	r6, #5000	; 0x1388
    ed60:	e002      	b.n	ed68 <am_hal_ble_patch_complete.part.10+0x16c>
    ed62:	2402      	movs	r4, #2
    ed64:	3e01      	subs	r6, #1
    ed66:	d0a2      	beq.n	ecae <am_hal_ble_patch_complete.part.10+0xb2>
    ed68:	682b      	ldr	r3, [r5, #0]
    ed6a:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    ed6e:	4543      	cmp	r3, r8
    ed70:	d1f7      	bne.n	ed62 <am_hal_ble_patch_complete.part.10+0x166>
    ed72:	f8bd 3020 	ldrh.w	r3, [sp, #32]
    ed76:	a906      	add	r1, sp, #24
    ed78:	4628      	mov	r0, r5
    ed7a:	b123      	cbz	r3, ed86 <am_hal_ble_patch_complete.part.10+0x18a>
    ed7c:	f7fe fe98 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    ed80:	4604      	mov	r4, r0
    ed82:	2800      	cmp	r0, #0
    ed84:	d1ee      	bne.n	ed64 <am_hal_ble_patch_complete.part.10+0x168>
    ed86:	4e2e      	ldr	r6, [pc, #184]	; (ee40 <am_hal_ble_patch_complete.part.10+0x244>)
    ed88:	f8d6 330c 	ldr.w	r3, [r6, #780]	; 0x30c
    ed8c:	0619      	lsls	r1, r3, #24
    ed8e:	d40a      	bmi.n	eda6 <am_hal_ble_patch_complete.part.10+0x1aa>
    ed90:	4c2c      	ldr	r4, [pc, #176]	; (ee44 <am_hal_ble_patch_complete.part.10+0x248>)
    ed92:	e001      	b.n	ed98 <am_hal_ble_patch_complete.part.10+0x19c>
    ed94:	3c01      	subs	r4, #1
    ed96:	d08e      	beq.n	ecb6 <am_hal_ble_patch_complete.part.10+0xba>
    ed98:	2010      	movs	r0, #16
    ed9a:	f000 fbb3 	bl	f504 <am_hal_flash_delay>
    ed9e:	f8d6 330c 	ldr.w	r3, [r6, #780]	; 0x30c
    eda2:	0618      	lsls	r0, r3, #24
    eda4:	d5f6      	bpl.n	ed94 <am_hal_ble_patch_complete.part.10+0x198>
    eda6:	682e      	ldr	r6, [r5, #0]
    eda8:	4b24      	ldr	r3, [pc, #144]	; (ee3c <am_hal_ble_patch_complete.part.10+0x240>)
    edaa:	9706      	str	r7, [sp, #24]
    edac:	f026 467e 	bic.w	r6, r6, #4261412864	; 0xfe000000
    edb0:	2702      	movs	r7, #2
    edb2:	2209      	movs	r2, #9
    edb4:	429e      	cmp	r6, r3
    edb6:	f88d 7022 	strb.w	r7, [sp, #34]	; 0x22
    edba:	f8ad 2020 	strh.w	r2, [sp, #32]
    edbe:	f47f af75 	bne.w	ecac <am_hal_ble_patch_complete.part.10+0xb0>
    edc2:	a906      	add	r1, sp, #24
    edc4:	4628      	mov	r0, r5
    edc6:	f7fe fe73 	bl	dab0 <am_hal_ble_blocking_transfer.part.7>
    edca:	4604      	mov	r4, r0
    edcc:	2800      	cmp	r0, #0
    edce:	f47f af6e 	bne.w	ecae <am_hal_ble_patch_complete.part.10+0xb2>
    edd2:	682b      	ldr	r3, [r5, #0]
    edd4:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    edd8:	42b3      	cmp	r3, r6
    edda:	d026      	beq.n	ee2a <am_hal_ble_patch_complete.part.10+0x22e>
    eddc:	2301      	movs	r3, #1
    edde:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    ede2:	481a      	ldr	r0, [pc, #104]	; (ee4c <am_hal_ble_patch_complete.part.10+0x250>)
    ede4:	f000 fb8e 	bl	f504 <am_hal_flash_delay>
    ede8:	4a19      	ldr	r2, [pc, #100]	; (ee50 <am_hal_ble_patch_complete.part.10+0x254>)
    edea:	4b1a      	ldr	r3, [pc, #104]	; (ee54 <am_hal_ble_patch_complete.part.10+0x258>)
    edec:	6811      	ldr	r1, [r2, #0]
    edee:	f021 02ff 	bic.w	r2, r1, #255	; 0xff
    edf2:	429a      	cmp	r2, r3
    edf4:	f47f af5b 	bne.w	ecae <am_hal_ble_patch_complete.part.10+0xb2>
    edf8:	b2c9      	uxtb	r1, r1
    edfa:	f1a1 0320 	sub.w	r3, r1, #32
    edfe:	2b20      	cmp	r3, #32
    ee00:	f63f af55 	bhi.w	ecae <am_hal_ble_patch_complete.part.10+0xb2>
    ee04:	4628      	mov	r0, r5
    ee06:	f7ff fe95 	bl	eb34 <am_hal_ble_transmitter_modex_set>
    ee0a:	e750      	b.n	ecae <am_hal_ble_patch_complete.part.10+0xb2>
    ee0c:	4b0c      	ldr	r3, [pc, #48]	; (ee40 <am_hal_ble_patch_complete.part.10+0x244>)
    ee0e:	f8d3 330c 	ldr.w	r3, [r3, #780]	; 0x30c
    ee12:	061a      	lsls	r2, r3, #24
    ee14:	f57f af30 	bpl.w	ec78 <am_hal_ble_patch_complete.part.10+0x7c>
    ee18:	e748      	b.n	ecac <am_hal_ble_patch_complete.part.10+0xb0>
    ee1a:	2302      	movs	r3, #2
    ee1c:	af03      	add	r7, sp, #12
    ee1e:	f88d 3022 	strb.w	r3, [sp, #34]	; 0x22
    ee22:	f8ad 3020 	strh.w	r3, [sp, #32]
    ee26:	9706      	str	r7, [sp, #24]
    ee28:	e73a      	b.n	eca0 <am_hal_ble_patch_complete.part.10+0xa4>
    ee2a:	4b05      	ldr	r3, [pc, #20]	; (ee40 <am_hal_ble_patch_complete.part.10+0x244>)
    ee2c:	f8b3 2304 	ldrh.w	r2, [r3, #772]	; 0x304
    ee30:	f367 0283 	bfi	r2, r7, #2, #2
    ee34:	f8a3 2304 	strh.w	r2, [r3, #772]	; 0x304
    ee38:	e7d0      	b.n	eddc <am_hal_ble_patch_complete.part.10+0x1e0>
    ee3a:	bf00      	nop
    ee3c:	01775230 	.word	0x01775230
    ee40:	5000c000 	.word	0x5000c000
    ee44:	000186a0 	.word	0x000186a0
    ee48:	08000004 	.word	0x08000004
    ee4c:	007a1200 	.word	0x007a1200
    ee50:	50023808 	.word	0x50023808
    ee54:	18240600 	.word	0x18240600

0000ee58 <am_hal_ble_boot>:
    ee58:	b128      	cbz	r0, ee66 <am_hal_ble_boot+0xe>
    ee5a:	6803      	ldr	r3, [r0, #0]
    ee5c:	4a59      	ldr	r2, [pc, #356]	; (efc4 <am_hal_ble_boot+0x16c>)
    ee5e:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    ee62:	4293      	cmp	r3, r2
    ee64:	d001      	beq.n	ee6a <am_hal_ble_boot+0x12>
    ee66:	2002      	movs	r0, #2
    ee68:	4770      	bx	lr
    ee6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    ee6e:	7a03      	ldrb	r3, [r0, #8]
    ee70:	b082      	sub	sp, #8
    ee72:	4604      	mov	r4, r0
    ee74:	2b00      	cmp	r3, #0
    ee76:	d065      	beq.n	ef44 <am_hal_ble_boot+0xec>
    ee78:	4a53      	ldr	r2, [pc, #332]	; (efc8 <am_hal_ble_boot+0x170>)
    ee7a:	68d3      	ldr	r3, [r2, #12]
    ee7c:	b2db      	uxtb	r3, r3
    ee7e:	2b11      	cmp	r3, #17
    ee80:	d076      	beq.n	ef70 <am_hal_ble_boot+0x118>
    ee82:	68d3      	ldr	r3, [r2, #12]
    ee84:	b2db      	uxtb	r3, r3
    ee86:	2b12      	cmp	r3, #18
    ee88:	d072      	beq.n	ef70 <am_hal_ble_boot+0x118>
    ee8a:	4b4f      	ldr	r3, [pc, #316]	; (efc8 <am_hal_ble_boot+0x170>)
    ee8c:	68db      	ldr	r3, [r3, #12]
    ee8e:	b2db      	uxtb	r3, r3
    ee90:	2b21      	cmp	r3, #33	; 0x21
    ee92:	f000 808d 	beq.w	efb0 <am_hal_ble_boot+0x158>
    ee96:	4b4d      	ldr	r3, [pc, #308]	; (efcc <am_hal_ble_boot+0x174>)
    ee98:	68da      	ldr	r2, [r3, #12]
    ee9a:	4b4d      	ldr	r3, [pc, #308]	; (efd0 <am_hal_ble_boot+0x178>)
    ee9c:	681b      	ldr	r3, [r3, #0]
    ee9e:	ba1b      	rev	r3, r3
    eea0:	1c5d      	adds	r5, r3, #1
    eea2:	bf18      	it	ne
    eea4:	6093      	strne	r3, [r2, #8]
    eea6:	4b4b      	ldr	r3, [pc, #300]	; (efd4 <am_hal_ble_boot+0x17c>)
    eea8:	681b      	ldr	r3, [r3, #0]
    eeaa:	1c58      	adds	r0, r3, #1
    eeac:	d009      	beq.n	eec2 <am_hal_ble_boot+0x6a>
    eeae:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    eeb2:	ba1b      	rev	r3, r3
    eeb4:	1c59      	adds	r1, r3, #1
    eeb6:	d004      	beq.n	eec2 <am_hal_ble_boot+0x6a>
    eeb8:	68d1      	ldr	r1, [r2, #12]
    eeba:	f421 71f8 	bic.w	r1, r1, #496	; 0x1f0
    eebe:	430b      	orrs	r3, r1
    eec0:	60d3      	str	r3, [r2, #12]
    eec2:	4a41      	ldr	r2, [pc, #260]	; (efc8 <am_hal_ble_boot+0x170>)
    eec4:	68d3      	ldr	r3, [r2, #12]
    eec6:	b2db      	uxtb	r3, r3
    eec8:	2b11      	cmp	r3, #17
    eeca:	d031      	beq.n	ef30 <am_hal_ble_boot+0xd8>
    eecc:	68d3      	ldr	r3, [r2, #12]
    eece:	b2db      	uxtb	r3, r3
    eed0:	2b12      	cmp	r3, #18
    eed2:	d02d      	beq.n	ef30 <am_hal_ble_boot+0xd8>
    eed4:	4a40      	ldr	r2, [pc, #256]	; (efd8 <am_hal_ble_boot+0x180>)
    eed6:	4b41      	ldr	r3, [pc, #260]	; (efdc <am_hal_ble_boot+0x184>)
    eed8:	6816      	ldr	r6, [r2, #0]
    eeda:	681b      	ldr	r3, [r3, #0]
    eedc:	b1f6      	cbz	r6, ef1c <am_hal_ble_boot+0xc4>
    eede:	4d40      	ldr	r5, [pc, #256]	; (efe0 <am_hal_ble_boot+0x188>)
    eee0:	f1a3 0804 	sub.w	r8, r3, #4
    eee4:	2700      	movs	r7, #0
    eee6:	f858 1f04 	ldr.w	r1, [r8, #4]!
    eeea:	684b      	ldr	r3, [r1, #4]
    eeec:	68c8      	ldr	r0, [r1, #12]
    eeee:	b16b      	cbz	r3, ef0c <am_hal_ble_boot+0xb4>
    eef0:	eb00 0e03 	add.w	lr, r0, r3
    eef4:	2300      	movs	r3, #0
    eef6:	f810 2b01 	ldrb.w	r2, [r0], #1
    eefa:	ea82 2213 	eor.w	r2, r2, r3, lsr #8
    eefe:	4570      	cmp	r0, lr
    ef00:	f835 2012 	ldrh.w	r2, [r5, r2, lsl #1]
    ef04:	ea82 2303 	eor.w	r3, r2, r3, lsl #8
    ef08:	b29b      	uxth	r3, r3
    ef0a:	d1f4      	bne.n	eef6 <am_hal_ble_boot+0x9e>
    ef0c:	608b      	str	r3, [r1, #8]
    ef0e:	4620      	mov	r0, r4
    ef10:	f7ff fab6 	bl	e480 <am_hal_ble_patch_apply>
    ef14:	b948      	cbnz	r0, ef2a <am_hal_ble_boot+0xd2>
    ef16:	3701      	adds	r7, #1
    ef18:	42b7      	cmp	r7, r6
    ef1a:	d1e4      	bne.n	eee6 <am_hal_ble_boot+0x8e>
    ef1c:	6823      	ldr	r3, [r4, #0]
    ef1e:	4a29      	ldr	r2, [pc, #164]	; (efc4 <am_hal_ble_boot+0x16c>)
    ef20:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    ef24:	4293      	cmp	r3, r2
    ef26:	d008      	beq.n	ef3a <am_hal_ble_boot+0xe2>
    ef28:	2002      	movs	r0, #2
    ef2a:	b002      	add	sp, #8
    ef2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ef30:	4a2c      	ldr	r2, [pc, #176]	; (efe4 <am_hal_ble_boot+0x18c>)
    ef32:	4b2d      	ldr	r3, [pc, #180]	; (efe8 <am_hal_ble_boot+0x190>)
    ef34:	6816      	ldr	r6, [r2, #0]
    ef36:	681b      	ldr	r3, [r3, #0]
    ef38:	e7d0      	b.n	eedc <am_hal_ble_boot+0x84>
    ef3a:	4620      	mov	r0, r4
    ef3c:	f7ff fe5e 	bl	ebfc <am_hal_ble_patch_complete.part.10>
    ef40:	2800      	cmp	r0, #0
    ef42:	d1f2      	bne.n	ef2a <am_hal_ble_boot+0xd2>
    ef44:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    ef48:	4b1f      	ldr	r3, [pc, #124]	; (efc8 <am_hal_ble_boot+0x170>)
    ef4a:	9201      	str	r2, [sp, #4]
    ef4c:	68db      	ldr	r3, [r3, #12]
    ef4e:	b2db      	uxtb	r3, r3
    ef50:	2b21      	cmp	r3, #33	; 0x21
    ef52:	d030      	beq.n	efb6 <am_hal_ble_boot+0x15e>
    ef54:	4620      	mov	r0, r4
    ef56:	aa01      	add	r2, sp, #4
    ef58:	4924      	ldr	r1, [pc, #144]	; (efec <am_hal_ble_boot+0x194>)
    ef5a:	f7ff fc73 	bl	e844 <am_hal_ble_plf_reg_read>
    ef5e:	9b01      	ldr	r3, [sp, #4]
    ef60:	4823      	ldr	r0, [pc, #140]	; (eff0 <am_hal_ble_boot+0x198>)
    ef62:	f5a3 43f6 	sub.w	r3, r3, #31488	; 0x7b00
    ef66:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
    ef6a:	bf98      	it	ls
    ef6c:	2000      	movls	r0, #0
    ef6e:	e7dc      	b.n	ef2a <am_hal_ble_boot+0xd2>
    ef70:	4b20      	ldr	r3, [pc, #128]	; (eff4 <am_hal_ble_boot+0x19c>)
    ef72:	681b      	ldr	r3, [r3, #0]
    ef74:	6819      	ldr	r1, [r3, #0]
    ef76:	684b      	ldr	r3, [r1, #4]
    ef78:	68c8      	ldr	r0, [r1, #12]
    ef7a:	b16b      	cbz	r3, ef98 <am_hal_ble_boot+0x140>
    ef7c:	4e18      	ldr	r6, [pc, #96]	; (efe0 <am_hal_ble_boot+0x188>)
    ef7e:	18c5      	adds	r5, r0, r3
    ef80:	2300      	movs	r3, #0
    ef82:	f810 2b01 	ldrb.w	r2, [r0], #1
    ef86:	ea82 2213 	eor.w	r2, r2, r3, lsr #8
    ef8a:	4285      	cmp	r5, r0
    ef8c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
    ef90:	ea82 2303 	eor.w	r3, r2, r3, lsl #8
    ef94:	b29b      	uxth	r3, r3
    ef96:	d1f4      	bne.n	ef82 <am_hal_ble_boot+0x12a>
    ef98:	608b      	str	r3, [r1, #8]
    ef9a:	4620      	mov	r0, r4
    ef9c:	f7ff fa70 	bl	e480 <am_hal_ble_patch_apply>
    efa0:	2800      	cmp	r0, #0
    efa2:	d1c2      	bne.n	ef2a <am_hal_ble_boot+0xd2>
    efa4:	4620      	mov	r0, r4
    efa6:	f7ff f98d 	bl	e2c4 <am_hal_ble_patch_copy_end_apply>
    efaa:	2800      	cmp	r0, #0
    efac:	d1bd      	bne.n	ef2a <am_hal_ble_boot+0xd2>
    efae:	e76c      	b.n	ee8a <am_hal_ble_boot+0x32>
    efb0:	4b11      	ldr	r3, [pc, #68]	; (eff8 <am_hal_ble_boot+0x1a0>)
    efb2:	68da      	ldr	r2, [r3, #12]
    efb4:	e771      	b.n	ee9a <am_hal_ble_boot+0x42>
    efb6:	4620      	mov	r0, r4
    efb8:	aa01      	add	r2, sp, #4
    efba:	4910      	ldr	r1, [pc, #64]	; (effc <am_hal_ble_boot+0x1a4>)
    efbc:	f7ff fc42 	bl	e844 <am_hal_ble_plf_reg_read>
    efc0:	e7cd      	b.n	ef5e <am_hal_ble_boot+0x106>
    efc2:	bf00      	nop
    efc4:	01775230 	.word	0x01775230
    efc8:	40020000 	.word	0x40020000
    efcc:	10001044 	.word	0x10001044
    efd0:	50023800 	.word	0x50023800
    efd4:	50023804 	.word	0x50023804
    efd8:	000121d4 	.word	0x000121d4
    efdc:	10001af0 	.word	0x10001af0
    efe0:	00010984 	.word	0x00010984
    efe4:	000118bc 	.word	0x000118bc
    efe8:	10001168 	.word	0x10001168
    efec:	20006054 	.word	0x20006054
    eff0:	0800000b 	.word	0x0800000b
    eff4:	10001030 	.word	0x10001030
    eff8:	10001af4 	.word	0x10001af4
    effc:	20006858 	.word	0x20006858

0000f000 <am_hal_ble_tx_power_set>:
    f000:	b570      	push	{r4, r5, r6, lr}
    f002:	b082      	sub	sp, #8
    f004:	4605      	mov	r5, r0
    f006:	2300      	movs	r3, #0
    f008:	460e      	mov	r6, r1
    f00a:	466a      	mov	r2, sp
    f00c:	040c      	lsls	r4, r1, #16
    f00e:	4919      	ldr	r1, [pc, #100]	; (f074 <am_hal_ble_tx_power_set+0x74>)
    f010:	9301      	str	r3, [sp, #4]
    f012:	f7ff fc17 	bl	e844 <am_hal_ble_plf_reg_read>
    f016:	4917      	ldr	r1, [pc, #92]	; (f074 <am_hal_ble_tx_power_set+0x74>)
    f018:	4628      	mov	r0, r5
    f01a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    f01e:	f7ff fcd1 	bl	e9c4 <am_hal_ble_plf_reg_write>
    f022:	4b15      	ldr	r3, [pc, #84]	; (f078 <am_hal_ble_tx_power_set+0x78>)
    f024:	68db      	ldr	r3, [r3, #12]
    f026:	b2db      	uxtb	r3, r3
    f028:	2b21      	cmp	r3, #33	; 0x21
    f02a:	f404 2470 	and.w	r4, r4, #983040	; 0xf0000
    f02e:	bf0c      	ite	eq
    f030:	4912      	ldreq	r1, [pc, #72]	; (f07c <am_hal_ble_tx_power_set+0x7c>)
    f032:	4913      	ldrne	r1, [pc, #76]	; (f080 <am_hal_ble_tx_power_set+0x80>)
    f034:	aa01      	add	r2, sp, #4
    f036:	f044 0408 	orr.w	r4, r4, #8
    f03a:	4628      	mov	r0, r5
    f03c:	f7ff fc02 	bl	e844 <am_hal_ble_plf_reg_read>
    f040:	4910      	ldr	r1, [pc, #64]	; (f084 <am_hal_ble_tx_power_set+0x84>)
    f042:	f88d 6004 	strb.w	r6, [sp, #4]
    f046:	4622      	mov	r2, r4
    f048:	4628      	mov	r0, r5
    f04a:	f7ff fcbb 	bl	e9c4 <am_hal_ble_plf_reg_write>
    f04e:	4b0a      	ldr	r3, [pc, #40]	; (f078 <am_hal_ble_tx_power_set+0x78>)
    f050:	9a01      	ldr	r2, [sp, #4]
    f052:	68db      	ldr	r3, [r3, #12]
    f054:	b2db      	uxtb	r3, r3
    f056:	2b21      	cmp	r3, #33	; 0x21
    f058:	bf0c      	ite	eq
    f05a:	4908      	ldreq	r1, [pc, #32]	; (f07c <am_hal_ble_tx_power_set+0x7c>)
    f05c:	4908      	ldrne	r1, [pc, #32]	; (f080 <am_hal_ble_tx_power_set+0x80>)
    f05e:	4628      	mov	r0, r5
    f060:	f7ff fcb0 	bl	e9c4 <am_hal_ble_plf_reg_write>
    f064:	4628      	mov	r0, r5
    f066:	9a00      	ldr	r2, [sp, #0]
    f068:	4902      	ldr	r1, [pc, #8]	; (f074 <am_hal_ble_tx_power_set+0x74>)
    f06a:	f7ff fcab 	bl	e9c4 <am_hal_ble_plf_reg_write>
    f06e:	2000      	movs	r0, #0
    f070:	b002      	add	sp, #8
    f072:	bd70      	pop	{r4, r5, r6, pc}
    f074:	43000004 	.word	0x43000004
    f078:	40020000 	.word	0x40020000
    f07c:	20006838 	.word	0x20006838
    f080:	20006038 	.word	0x20006038
    f084:	52400018 	.word	0x52400018

0000f088 <am_hal_cachectrl_config>:
    f088:	b530      	push	{r4, r5, lr}
    f08a:	b083      	sub	sp, #12
    f08c:	4605      	mov	r5, r0
    f08e:	f000 fc43 	bl	f918 <am_hal_interrupt_master_disable>
    f092:	4c0f      	ldr	r4, [pc, #60]	; (f0d0 <am_hal_cachectrl_config+0x48>)
    f094:	9001      	str	r0, [sp, #4]
    f096:	6823      	ldr	r3, [r4, #0]
    f098:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    f09c:	6023      	str	r3, [r4, #0]
    f09e:	9801      	ldr	r0, [sp, #4]
    f0a0:	f000 fc3e 	bl	f920 <am_hal_interrupt_master_set>
    f0a4:	78ab      	ldrb	r3, [r5, #2]
    f0a6:	782a      	ldrb	r2, [r5, #0]
    f0a8:	7869      	ldrb	r1, [r5, #1]
    f0aa:	005b      	lsls	r3, r3, #1
    f0ac:	0112      	lsls	r2, r2, #4
    f0ae:	b2d2      	uxtb	r2, r2
    f0b0:	f003 0302 	and.w	r3, r3, #2
    f0b4:	4313      	orrs	r3, r2
    f0b6:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    f0ba:	020a      	lsls	r2, r1, #8
    f0bc:	f402 7240 	and.w	r2, r2, #768	; 0x300
    f0c0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
    f0c4:	4313      	orrs	r3, r2
    f0c6:	2000      	movs	r0, #0
    f0c8:	6023      	str	r3, [r4, #0]
    f0ca:	b003      	add	sp, #12
    f0cc:	bd30      	pop	{r4, r5, pc}
    f0ce:	bf00      	nop
    f0d0:	40018000 	.word	0x40018000

0000f0d4 <am_hal_cachectrl_enable>:
    f0d4:	4a03      	ldr	r2, [pc, #12]	; (f0e4 <am_hal_cachectrl_enable+0x10>)
    f0d6:	6813      	ldr	r3, [r2, #0]
    f0d8:	f043 0301 	orr.w	r3, r3, #1
    f0dc:	6013      	str	r3, [r2, #0]
    f0de:	2000      	movs	r0, #0
    f0e0:	4770      	bx	lr
    f0e2:	bf00      	nop
    f0e4:	40018000 	.word	0x40018000

0000f0e8 <am_hal_cachectrl_control>:
    f0e8:	b510      	push	{r4, lr}
    f0ea:	3801      	subs	r0, #1
    f0ec:	b08e      	sub	sp, #56	; 0x38
    f0ee:	2810      	cmp	r0, #16
    f0f0:	f200 8143 	bhi.w	f37a <am_hal_cachectrl_control+0x292>
    f0f4:	e8df f010 	tbh	[pc, r0, lsl #1]
    f0f8:	01380136 	.word	0x01380136
    f0fc:	0011013e 	.word	0x0011013e
    f100:	001a0018 	.word	0x001a0018
    f104:	001f001c 	.word	0x001f001c
    f108:	00300022 	.word	0x00300022
    f10c:	0074003c 	.word	0x0074003c
    f110:	00e400ac 	.word	0x00e400ac
    f114:	011a00ff 	.word	0x011a00ff
    f118:	0120      	.short	0x0120
    f11a:	f44f 7208 	mov.w	r2, #544	; 0x220
    f11e:	4ba8      	ldr	r3, [pc, #672]	; (f3c0 <am_hal_cachectrl_control+0x2d8>)
    f120:	2000      	movs	r0, #0
    f122:	609a      	str	r2, [r3, #8]
    f124:	b00e      	add	sp, #56	; 0x38
    f126:	bd10      	pop	{r4, pc}
    f128:	2240      	movs	r2, #64	; 0x40
    f12a:	e7f8      	b.n	f11e <am_hal_cachectrl_control+0x36>
    f12c:	2220      	movs	r2, #32
    f12e:	e7f6      	b.n	f11e <am_hal_cachectrl_control+0x36>
    f130:	f44f 6280 	mov.w	r2, #1024	; 0x400
    f134:	e7f3      	b.n	f11e <am_hal_cachectrl_control+0x36>
    f136:	f44f 7200 	mov.w	r2, #512	; 0x200
    f13a:	e7f0      	b.n	f11e <am_hal_cachectrl_control+0x36>
    f13c:	f000 fbec 	bl	f918 <am_hal_interrupt_master_disable>
    f140:	4a9f      	ldr	r2, [pc, #636]	; (f3c0 <am_hal_cachectrl_control+0x2d8>)
    f142:	9000      	str	r0, [sp, #0]
    f144:	6813      	ldr	r3, [r2, #0]
    f146:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
    f14a:	6013      	str	r3, [r2, #0]
    f14c:	9800      	ldr	r0, [sp, #0]
    f14e:	f000 fbe7 	bl	f920 <am_hal_interrupt_master_set>
    f152:	2000      	movs	r0, #0
    f154:	b00e      	add	sp, #56	; 0x38
    f156:	bd10      	pop	{r4, pc}
    f158:	f000 fbde 	bl	f918 <am_hal_interrupt_master_disable>
    f15c:	4a98      	ldr	r2, [pc, #608]	; (f3c0 <am_hal_cachectrl_control+0x2d8>)
    f15e:	9001      	str	r0, [sp, #4]
    f160:	6813      	ldr	r3, [r2, #0]
    f162:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    f166:	6013      	str	r3, [r2, #0]
    f168:	9801      	ldr	r0, [sp, #4]
    f16a:	f000 fbd9 	bl	f920 <am_hal_interrupt_master_set>
    f16e:	e7f0      	b.n	f152 <am_hal_cachectrl_control+0x6a>
    f170:	f000 fbd2 	bl	f918 <am_hal_interrupt_master_disable>
    f174:	4603      	mov	r3, r0
    f176:	4893      	ldr	r0, [pc, #588]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f178:	9302      	str	r3, [sp, #8]
    f17a:	f000 fa0d 	bl	f598 <am_hal_flash_load_ui32>
    f17e:	f420 517c 	bic.w	r1, r0, #16128	; 0x3f00
    f182:	f441 61e0 	orr.w	r1, r1, #1792	; 0x700
    f186:	488f      	ldr	r0, [pc, #572]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f188:	f000 fa0a 	bl	f5a0 <am_hal_flash_store_ui32>
    f18c:	9802      	ldr	r0, [sp, #8]
    f18e:	f000 fbc7 	bl	f920 <am_hal_interrupt_master_set>
    f192:	f000 fbc1 	bl	f918 <am_hal_interrupt_master_disable>
    f196:	4603      	mov	r3, r0
    f198:	488a      	ldr	r0, [pc, #552]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f19a:	9303      	str	r3, [sp, #12]
    f19c:	f000 f9fc 	bl	f598 <am_hal_flash_load_ui32>
    f1a0:	f420 6177 	bic.w	r1, r0, #3952	; 0xf70
    f1a4:	f441 61ee 	orr.w	r1, r1, #1904	; 0x770
    f1a8:	4886      	ldr	r0, [pc, #536]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f1aa:	f000 f9f9 	bl	f5a0 <am_hal_flash_store_ui32>
    f1ae:	9803      	ldr	r0, [sp, #12]
    f1b0:	f000 fbb6 	bl	f920 <am_hal_interrupt_master_set>
    f1b4:	f000 fbb0 	bl	f918 <am_hal_interrupt_master_disable>
    f1b8:	4603      	mov	r3, r0
    f1ba:	4882      	ldr	r0, [pc, #520]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f1bc:	9304      	str	r3, [sp, #16]
    f1be:	f000 f9eb 	bl	f598 <am_hal_flash_load_ui32>
    f1c2:	f420 6170 	bic.w	r1, r0, #3840	; 0xf00
    f1c6:	f021 010f 	bic.w	r1, r1, #15
    f1ca:	f441 61e0 	orr.w	r1, r1, #1792	; 0x700
    f1ce:	f041 0103 	orr.w	r1, r1, #3
    f1d2:	487c      	ldr	r0, [pc, #496]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f1d4:	f000 f9e4 	bl	f5a0 <am_hal_flash_store_ui32>
    f1d8:	9804      	ldr	r0, [sp, #16]
    f1da:	f000 fba1 	bl	f920 <am_hal_interrupt_master_set>
    f1de:	e7b8      	b.n	f152 <am_hal_cachectrl_control+0x6a>
    f1e0:	f000 fb9a 	bl	f918 <am_hal_interrupt_master_disable>
    f1e4:	4603      	mov	r3, r0
    f1e6:	4877      	ldr	r0, [pc, #476]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f1e8:	9305      	str	r3, [sp, #20]
    f1ea:	f000 f9d5 	bl	f598 <am_hal_flash_load_ui32>
    f1ee:	f420 517c 	bic.w	r1, r0, #16128	; 0x3f00
    f1f2:	f441 51b8 	orr.w	r1, r1, #5888	; 0x1700
    f1f6:	4873      	ldr	r0, [pc, #460]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f1f8:	f000 f9d2 	bl	f5a0 <am_hal_flash_store_ui32>
    f1fc:	9805      	ldr	r0, [sp, #20]
    f1fe:	f000 fb8f 	bl	f920 <am_hal_interrupt_master_set>
    f202:	f000 fb89 	bl	f918 <am_hal_interrupt_master_disable>
    f206:	4603      	mov	r3, r0
    f208:	486e      	ldr	r0, [pc, #440]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f20a:	9306      	str	r3, [sp, #24]
    f20c:	f000 f9c4 	bl	f598 <am_hal_flash_load_ui32>
    f210:	f420 6177 	bic.w	r1, r0, #3952	; 0xf70
    f214:	f441 61ea 	orr.w	r1, r1, #1872	; 0x750
    f218:	486a      	ldr	r0, [pc, #424]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f21a:	f000 f9c1 	bl	f5a0 <am_hal_flash_store_ui32>
    f21e:	9806      	ldr	r0, [sp, #24]
    f220:	f000 fb7e 	bl	f920 <am_hal_interrupt_master_set>
    f224:	f000 fb78 	bl	f918 <am_hal_interrupt_master_disable>
    f228:	4603      	mov	r3, r0
    f22a:	4866      	ldr	r0, [pc, #408]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f22c:	9307      	str	r3, [sp, #28]
    f22e:	f000 f9b3 	bl	f598 <am_hal_flash_load_ui32>
    f232:	f420 6170 	bic.w	r1, r0, #3840	; 0xf00
    f236:	f021 010f 	bic.w	r1, r1, #15
    f23a:	f441 61e0 	orr.w	r1, r1, #1792	; 0x700
    f23e:	f041 0101 	orr.w	r1, r1, #1
    f242:	4860      	ldr	r0, [pc, #384]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f244:	f000 f9ac 	bl	f5a0 <am_hal_flash_store_ui32>
    f248:	9807      	ldr	r0, [sp, #28]
    f24a:	f000 fb69 	bl	f920 <am_hal_interrupt_master_set>
    f24e:	e780      	b.n	f152 <am_hal_cachectrl_control+0x6a>
    f250:	f000 fb62 	bl	f918 <am_hal_interrupt_master_disable>
    f254:	4603      	mov	r3, r0
    f256:	485b      	ldr	r0, [pc, #364]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f258:	9308      	str	r3, [sp, #32]
    f25a:	f000 f99d 	bl	f598 <am_hal_flash_load_ui32>
    f25e:	f420 517c 	bic.w	r1, r0, #16128	; 0x3f00
    f262:	f441 51b8 	orr.w	r1, r1, #5888	; 0x1700
    f266:	4857      	ldr	r0, [pc, #348]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f268:	f000 f99a 	bl	f5a0 <am_hal_flash_store_ui32>
    f26c:	9808      	ldr	r0, [sp, #32]
    f26e:	f000 fb57 	bl	f920 <am_hal_interrupt_master_set>
    f272:	f000 fb51 	bl	f918 <am_hal_interrupt_master_disable>
    f276:	4603      	mov	r3, r0
    f278:	4852      	ldr	r0, [pc, #328]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f27a:	9309      	str	r3, [sp, #36]	; 0x24
    f27c:	f000 f98c 	bl	f598 <am_hal_flash_load_ui32>
    f280:	f420 6177 	bic.w	r1, r0, #3952	; 0xf70
    f284:	f441 61ec 	orr.w	r1, r1, #1888	; 0x760
    f288:	484e      	ldr	r0, [pc, #312]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f28a:	f000 f989 	bl	f5a0 <am_hal_flash_store_ui32>
    f28e:	9809      	ldr	r0, [sp, #36]	; 0x24
    f290:	f000 fb46 	bl	f920 <am_hal_interrupt_master_set>
    f294:	f000 fb40 	bl	f918 <am_hal_interrupt_master_disable>
    f298:	4603      	mov	r3, r0
    f29a:	484a      	ldr	r0, [pc, #296]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f29c:	930a      	str	r3, [sp, #40]	; 0x28
    f29e:	f000 f97b 	bl	f598 <am_hal_flash_load_ui32>
    f2a2:	f420 6170 	bic.w	r1, r0, #3840	; 0xf00
    f2a6:	f021 010f 	bic.w	r1, r1, #15
    f2aa:	f441 61e0 	orr.w	r1, r1, #1792	; 0x700
    f2ae:	f041 0101 	orr.w	r1, r1, #1
    f2b2:	4844      	ldr	r0, [pc, #272]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f2b4:	f000 f974 	bl	f5a0 <am_hal_flash_store_ui32>
    f2b8:	980a      	ldr	r0, [sp, #40]	; 0x28
    f2ba:	f000 fb31 	bl	f920 <am_hal_interrupt_master_set>
    f2be:	e748      	b.n	f152 <am_hal_cachectrl_control+0x6a>
    f2c0:	2900      	cmp	r1, #0
    f2c2:	d05a      	beq.n	f37a <am_hal_cachectrl_control+0x292>
    f2c4:	680c      	ldr	r4, [r1, #0]
    f2c6:	2c03      	cmp	r4, #3
    f2c8:	d834      	bhi.n	f334 <am_hal_cachectrl_control+0x24c>
    f2ca:	f000 fb25 	bl	f918 <am_hal_interrupt_master_disable>
    f2ce:	4603      	mov	r3, r0
    f2d0:	483c      	ldr	r0, [pc, #240]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f2d2:	930b      	str	r3, [sp, #44]	; 0x2c
    f2d4:	f000 f960 	bl	f598 <am_hal_flash_load_ui32>
    f2d8:	0323      	lsls	r3, r4, #12
    f2da:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
    f2de:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
    f2e2:	f420 517c 	bic.w	r1, r0, #16128	; 0x3f00
    f2e6:	4319      	orrs	r1, r3
    f2e8:	4836      	ldr	r0, [pc, #216]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f2ea:	f000 f959 	bl	f5a0 <am_hal_flash_store_ui32>
    f2ee:	980b      	ldr	r0, [sp, #44]	; 0x2c
    f2f0:	f000 fb16 	bl	f920 <am_hal_interrupt_master_set>
    f2f4:	e72d      	b.n	f152 <am_hal_cachectrl_control+0x6a>
    f2f6:	2900      	cmp	r1, #0
    f2f8:	d03f      	beq.n	f37a <am_hal_cachectrl_control+0x292>
    f2fa:	680c      	ldr	r4, [r1, #0]
    f2fc:	2c07      	cmp	r4, #7
    f2fe:	d819      	bhi.n	f334 <am_hal_cachectrl_control+0x24c>
    f300:	f000 fb0a 	bl	f918 <am_hal_interrupt_master_disable>
    f304:	4603      	mov	r3, r0
    f306:	482f      	ldr	r0, [pc, #188]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f308:	930c      	str	r3, [sp, #48]	; 0x30
    f30a:	f000 f945 	bl	f598 <am_hal_flash_load_ui32>
    f30e:	0123      	lsls	r3, r4, #4
    f310:	f003 0370 	and.w	r3, r3, #112	; 0x70
    f314:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
    f318:	f420 6177 	bic.w	r1, r0, #3952	; 0xf70
    f31c:	4319      	orrs	r1, r3
    f31e:	4829      	ldr	r0, [pc, #164]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f320:	f000 f93e 	bl	f5a0 <am_hal_flash_store_ui32>
    f324:	980c      	ldr	r0, [sp, #48]	; 0x30
    f326:	f000 fafb 	bl	f920 <am_hal_interrupt_master_set>
    f32a:	e712      	b.n	f152 <am_hal_cachectrl_control+0x6a>
    f32c:	b329      	cbz	r1, f37a <am_hal_cachectrl_control+0x292>
    f32e:	680c      	ldr	r4, [r1, #0]
    f330:	2c0f      	cmp	r4, #15
    f332:	d926      	bls.n	f382 <am_hal_cachectrl_control+0x29a>
    f334:	2001      	movs	r0, #1
    f336:	e6f5      	b.n	f124 <am_hal_cachectrl_control+0x3c>
    f338:	b1f9      	cbz	r1, f37a <am_hal_cachectrl_control+0x292>
    f33a:	684a      	ldr	r2, [r1, #4]
    f33c:	4b22      	ldr	r3, [pc, #136]	; (f3c8 <am_hal_cachectrl_control+0x2e0>)
    f33e:	4013      	ands	r3, r2
    f340:	b9db      	cbnz	r3, f37a <am_hal_cachectrl_control+0x292>
    f342:	688b      	ldr	r3, [r1, #8]
    f344:	4820      	ldr	r0, [pc, #128]	; (f3c8 <am_hal_cachectrl_control+0x2e0>)
    f346:	4018      	ands	r0, r3
    f348:	b9b8      	cbnz	r0, f37a <am_hal_cachectrl_control+0x292>
    f34a:	780c      	ldrb	r4, [r1, #0]
    f34c:	b374      	cbz	r4, f3ac <am_hal_cachectrl_control+0x2c4>
    f34e:	2c01      	cmp	r4, #1
    f350:	d113      	bne.n	f37a <am_hal_cachectrl_control+0x292>
    f352:	4c1b      	ldr	r4, [pc, #108]	; (f3c0 <am_hal_cachectrl_control+0x2d8>)
    f354:	61a2      	str	r2, [r4, #24]
    f356:	61e3      	str	r3, [r4, #28]
    f358:	784a      	ldrb	r2, [r1, #1]
    f35a:	6823      	ldr	r3, [r4, #0]
    f35c:	f362 03c3 	bfi	r3, r2, #3, #1
    f360:	6023      	str	r3, [r4, #0]
    f362:	e6df      	b.n	f124 <am_hal_cachectrl_control+0x3c>
    f364:	2201      	movs	r2, #1
    f366:	e6da      	b.n	f11e <am_hal_cachectrl_control+0x36>
    f368:	4b15      	ldr	r3, [pc, #84]	; (f3c0 <am_hal_cachectrl_control+0x2d8>)
    f36a:	681b      	ldr	r3, [r3, #0]
    f36c:	01db      	lsls	r3, r3, #7
    f36e:	d406      	bmi.n	f37e <am_hal_cachectrl_control+0x296>
    f370:	2007      	movs	r0, #7
    f372:	e6d7      	b.n	f124 <am_hal_cachectrl_control+0x3c>
    f374:	f44f 6288 	mov.w	r2, #1088	; 0x440
    f378:	e6d1      	b.n	f11e <am_hal_cachectrl_control+0x36>
    f37a:	2006      	movs	r0, #6
    f37c:	e6d2      	b.n	f124 <am_hal_cachectrl_control+0x3c>
    f37e:	2202      	movs	r2, #2
    f380:	e6cd      	b.n	f11e <am_hal_cachectrl_control+0x36>
    f382:	f000 fac9 	bl	f918 <am_hal_interrupt_master_disable>
    f386:	4603      	mov	r3, r0
    f388:	480e      	ldr	r0, [pc, #56]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f38a:	930d      	str	r3, [sp, #52]	; 0x34
    f38c:	f000 f904 	bl	f598 <am_hal_flash_load_ui32>
    f390:	f420 6170 	bic.w	r1, r0, #3840	; 0xf00
    f394:	f444 64e0 	orr.w	r4, r4, #1792	; 0x700
    f398:	f021 010f 	bic.w	r1, r1, #15
    f39c:	4321      	orrs	r1, r4
    f39e:	4809      	ldr	r0, [pc, #36]	; (f3c4 <am_hal_cachectrl_control+0x2dc>)
    f3a0:	f000 f8fe 	bl	f5a0 <am_hal_flash_store_ui32>
    f3a4:	980d      	ldr	r0, [sp, #52]	; 0x34
    f3a6:	f000 fabb 	bl	f920 <am_hal_interrupt_master_set>
    f3aa:	e6d2      	b.n	f152 <am_hal_cachectrl_control+0x6a>
    f3ac:	4c04      	ldr	r4, [pc, #16]	; (f3c0 <am_hal_cachectrl_control+0x2d8>)
    f3ae:	6122      	str	r2, [r4, #16]
    f3b0:	6163      	str	r3, [r4, #20]
    f3b2:	784a      	ldrb	r2, [r1, #1]
    f3b4:	6823      	ldr	r3, [r4, #0]
    f3b6:	f362 0382 	bfi	r3, r2, #2, #1
    f3ba:	6023      	str	r3, [r4, #0]
    f3bc:	e6b2      	b.n	f124 <am_hal_cachectrl_control+0x3c>
    f3be:	bf00      	nop
    f3c0:	40018000 	.word	0x40018000
    f3c4:	40018004 	.word	0x40018004
    f3c8:	f800000f 	.word	0xf800000f

0000f3cc <am_hal_clkgen_control>:
    f3cc:	4b41      	ldr	r3, [pc, #260]	; (f4d4 <am_hal_clkgen_control+0x108>)
    f3ce:	681a      	ldr	r2, [r3, #0]
    f3d0:	b912      	cbnz	r2, f3d8 <am_hal_clkgen_control+0xc>
    f3d2:	4a41      	ldr	r2, [pc, #260]	; (f4d8 <am_hal_clkgen_control+0x10c>)
    f3d4:	6812      	ldr	r2, [r2, #0]
    f3d6:	601a      	str	r2, [r3, #0]
    f3d8:	2809      	cmp	r0, #9
    f3da:	d878      	bhi.n	f4ce <am_hal_clkgen_control+0x102>
    f3dc:	e8df f000 	tbb	[pc, r0]
    f3e0:	261e160d 	.word	0x261e160d
    f3e4:	524c423a 	.word	0x524c423a
    f3e8:	055a      	.short	0x055a
    f3ea:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    f3ee:	2000      	movs	r0, #0
    f3f0:	6a1a      	ldr	r2, [r3, #32]
    f3f2:	f36f 0200 	bfc	r2, #0, #1
    f3f6:	621a      	str	r2, [r3, #32]
    f3f8:	4770      	bx	lr
    f3fa:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    f3fe:	2200      	movs	r2, #0
    f400:	2147      	movs	r1, #71	; 0x47
    f402:	6159      	str	r1, [r3, #20]
    f404:	4610      	mov	r0, r2
    f406:	619a      	str	r2, [r3, #24]
    f408:	615a      	str	r2, [r3, #20]
    f40a:	4770      	bx	lr
    f40c:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f410:	2000      	movs	r0, #0
    f412:	68d3      	ldr	r3, [r2, #12]
    f414:	f023 0301 	bic.w	r3, r3, #1
    f418:	60d3      	str	r3, [r2, #12]
    f41a:	4770      	bx	lr
    f41c:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f420:	2000      	movs	r0, #0
    f422:	68d3      	ldr	r3, [r2, #12]
    f424:	f023 0302 	bic.w	r3, r3, #2
    f428:	60d3      	str	r3, [r2, #12]
    f42a:	4770      	bx	lr
    f42c:	4a2b      	ldr	r2, [pc, #172]	; (f4dc <am_hal_clkgen_control+0x110>)
    f42e:	68d3      	ldr	r3, [r2, #12]
    f430:	b2db      	uxtb	r3, r3
    f432:	2b21      	cmp	r3, #33	; 0x21
    f434:	d106      	bne.n	f444 <am_hal_clkgen_control+0x78>
    f436:	f8b2 3120 	ldrh.w	r3, [r2, #288]	; 0x120
    f43a:	2101      	movs	r1, #1
    f43c:	f361 2309 	bfi	r3, r1, #8, #2
    f440:	f8a2 3120 	strh.w	r3, [r2, #288]	; 0x120
    f444:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f448:	2000      	movs	r0, #0
    f44a:	68d3      	ldr	r3, [r2, #12]
    f44c:	f043 0301 	orr.w	r3, r3, #1
    f450:	60d3      	str	r3, [r2, #12]
    f452:	4770      	bx	lr
    f454:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f458:	2000      	movs	r0, #0
    f45a:	68d3      	ldr	r3, [r2, #12]
    f45c:	f043 0302 	orr.w	r3, r3, #2
    f460:	60d3      	str	r3, [r2, #12]
    f462:	4770      	bx	lr
    f464:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    f468:	2200      	movs	r2, #0
    f46a:	2047      	movs	r0, #71	; 0x47
    f46c:	2101      	movs	r1, #1
    f46e:	6158      	str	r0, [r3, #20]
    f470:	6199      	str	r1, [r3, #24]
    f472:	4610      	mov	r0, r2
    f474:	615a      	str	r2, [r3, #20]
    f476:	4770      	bx	lr
    f478:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    f47c:	2000      	movs	r0, #0
    f47e:	68da      	ldr	r2, [r3, #12]
    f480:	60da      	str	r2, [r3, #12]
    f482:	4770      	bx	lr
    f484:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f488:	2000      	movs	r0, #0
    f48a:	68d3      	ldr	r3, [r2, #12]
    f48c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    f490:	60d3      	str	r3, [r2, #12]
    f492:	4770      	bx	lr
    f494:	b510      	push	{r4, lr}
    f496:	4a11      	ldr	r2, [pc, #68]	; (f4dc <am_hal_clkgen_control+0x110>)
    f498:	68d3      	ldr	r3, [r2, #12]
    f49a:	b2db      	uxtb	r3, r3
    f49c:	2b21      	cmp	r3, #33	; 0x21
    f49e:	460c      	mov	r4, r1
    f4a0:	d008      	beq.n	f4b4 <am_hal_clkgen_control+0xe8>
    f4a2:	b194      	cbz	r4, f4ca <am_hal_clkgen_control+0xfe>
    f4a4:	6823      	ldr	r3, [r4, #0]
    f4a6:	f043 0301 	orr.w	r3, r3, #1
    f4aa:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f4ae:	2000      	movs	r0, #0
    f4b0:	6213      	str	r3, [r2, #32]
    f4b2:	bd10      	pop	{r4, pc}
    f4b4:	f8b2 3120 	ldrh.w	r3, [r2, #288]	; 0x120
    f4b8:	f443 7340 	orr.w	r3, r3, #768	; 0x300
    f4bc:	f8a2 3120 	strh.w	r3, [r2, #288]	; 0x120
    f4c0:	f44f 507a 	mov.w	r0, #16000	; 0x3e80
    f4c4:	f000 f81e 	bl	f504 <am_hal_flash_delay>
    f4c8:	e7eb      	b.n	f4a2 <am_hal_clkgen_control+0xd6>
    f4ca:	4b05      	ldr	r3, [pc, #20]	; (f4e0 <am_hal_clkgen_control+0x114>)
    f4cc:	e7ed      	b.n	f4aa <am_hal_clkgen_control+0xde>
    f4ce:	2006      	movs	r0, #6
    f4d0:	4770      	bx	lr
    f4d2:	bf00      	nop
    f4d4:	10001c3c 	.word	0x10001c3c
    f4d8:	4ffff000 	.word	0x4ffff000
    f4dc:	40020000 	.word	0x40020000
    f4e0:	0025b801 	.word	0x0025b801

0000f4e4 <am_hal_ctimer_int_clear>:
    f4e4:	b510      	push	{r4, lr}
    f4e6:	b082      	sub	sp, #8
    f4e8:	4604      	mov	r4, r0
    f4ea:	f000 fa15 	bl	f918 <am_hal_interrupt_master_disable>
    f4ee:	4b04      	ldr	r3, [pc, #16]	; (f500 <am_hal_ctimer_int_clear+0x1c>)
    f4f0:	9001      	str	r0, [sp, #4]
    f4f2:	f8c3 4208 	str.w	r4, [r3, #520]	; 0x208
    f4f6:	9801      	ldr	r0, [sp, #4]
    f4f8:	f000 fa12 	bl	f920 <am_hal_interrupt_master_set>
    f4fc:	b002      	add	sp, #8
    f4fe:	bd10      	pop	{r4, pc}
    f500:	40008000 	.word	0x40008000

0000f504 <am_hal_flash_delay>:
    f504:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    f508:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    f50a:	075b      	lsls	r3, r3, #29
    f50c:	bf46      	itte	mi
    f50e:	0040      	lslmi	r0, r0, #1
    f510:	230e      	movmi	r3, #14
    f512:	230b      	movpl	r3, #11
    f514:	4298      	cmp	r0, r3
    f516:	d800      	bhi.n	f51a <am_hal_flash_delay+0x16>
    f518:	4770      	bx	lr
    f51a:	1ac0      	subs	r0, r0, r3
    f51c:	4b00      	ldr	r3, [pc, #0]	; (f520 <am_hal_flash_delay+0x1c>)
    f51e:	4718      	bx	r3
    f520:	0800009d 	.word	0x0800009d

0000f524 <am_hal_flash_delay_status_check>:
    f524:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    f528:	f89d 4020 	ldrb.w	r4, [sp, #32]
    f52c:	460d      	mov	r5, r1
    f52e:	4616      	mov	r6, r2
    f530:	461f      	mov	r7, r3
    f532:	b1b4      	cbz	r4, f562 <am_hal_flash_delay_status_check+0x3e>
    f534:	4604      	mov	r4, r0
    f536:	f04f 2940 	mov.w	r9, #1073758208	; 0x40004000
    f53a:	f8df 8058 	ldr.w	r8, [pc, #88]	; f594 <am_hal_flash_delay_status_check+0x70>
    f53e:	e009      	b.n	f554 <am_hal_flash_delay_status_check+0x30>
    f540:	b324      	cbz	r4, f58c <am_hal_flash_delay_status_check+0x68>
    f542:	f8d9 3034 	ldr.w	r3, [r9, #52]	; 0x34
    f546:	f013 0f04 	tst.w	r3, #4
    f54a:	bf14      	ite	ne
    f54c:	2012      	movne	r0, #18
    f54e:	2005      	moveq	r0, #5
    f550:	3c01      	subs	r4, #1
    f552:	47c0      	blx	r8
    f554:	682b      	ldr	r3, [r5, #0]
    f556:	4033      	ands	r3, r6
    f558:	429f      	cmp	r7, r3
    f55a:	d1f1      	bne.n	f540 <am_hal_flash_delay_status_check+0x1c>
    f55c:	2000      	movs	r0, #0
    f55e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    f562:	f8df 8030 	ldr.w	r8, [pc, #48]	; f594 <am_hal_flash_delay_status_check+0x70>
    f566:	4604      	mov	r4, r0
    f568:	f04f 2940 	mov.w	r9, #1073758208	; 0x40004000
    f56c:	e009      	b.n	f582 <am_hal_flash_delay_status_check+0x5e>
    f56e:	b16c      	cbz	r4, f58c <am_hal_flash_delay_status_check+0x68>
    f570:	f8d9 3034 	ldr.w	r3, [r9, #52]	; 0x34
    f574:	f013 0f04 	tst.w	r3, #4
    f578:	bf14      	ite	ne
    f57a:	2012      	movne	r0, #18
    f57c:	2005      	moveq	r0, #5
    f57e:	3c01      	subs	r4, #1
    f580:	47c0      	blx	r8
    f582:	682b      	ldr	r3, [r5, #0]
    f584:	4033      	ands	r3, r6
    f586:	429f      	cmp	r7, r3
    f588:	d0f1      	beq.n	f56e <am_hal_flash_delay_status_check+0x4a>
    f58a:	e7e7      	b.n	f55c <am_hal_flash_delay_status_check+0x38>
    f58c:	2004      	movs	r0, #4
    f58e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    f592:	bf00      	nop
    f594:	0800009d 	.word	0x0800009d

0000f598 <am_hal_flash_load_ui32>:
    f598:	4b00      	ldr	r3, [pc, #0]	; (f59c <am_hal_flash_load_ui32+0x4>)
    f59a:	4718      	bx	r3
    f59c:	08000075 	.word	0x08000075

0000f5a0 <am_hal_flash_store_ui32>:
    f5a0:	4b01      	ldr	r3, [pc, #4]	; (f5a8 <am_hal_flash_store_ui32+0x8>)
    f5a2:	f043 0301 	orr.w	r3, r3, #1
    f5a6:	4718      	bx	r3
    f5a8:	10001b04 	.word	0x10001b04

0000f5ac <am_hal_gpio_pinconfig>:
    f5ac:	2831      	cmp	r0, #49	; 0x31
    f5ae:	d901      	bls.n	f5b4 <am_hal_gpio_pinconfig+0x8>
    f5b0:	2006      	movs	r0, #6
    f5b2:	4770      	bx	lr
    f5b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f5b8:	f001 0307 	and.w	r3, r1, #7
    f5bc:	f011 06e0 	ands.w	r6, r1, #224	; 0xe0
    f5c0:	b085      	sub	sp, #20
    f5c2:	ea4f 02c3 	mov.w	r2, r3, lsl #3
    f5c6:	f3c1 04c1 	ubfx	r4, r1, #3, #2
    f5ca:	d014      	beq.n	f5f6 <am_hal_gpio_pinconfig+0x4a>
    f5cc:	f3c1 1742 	ubfx	r7, r1, #5, #3
    f5d0:	1dbd      	adds	r5, r7, #6
    f5d2:	f005 0507 	and.w	r5, r5, #7
    f5d6:	2d03      	cmp	r5, #3
    f5d8:	f042 0201 	orr.w	r2, r2, #1
    f5dc:	f200 80a7 	bhi.w	f72e <am_hal_gpio_pinconfig+0x182>
    f5e0:	4d82      	ldr	r5, [pc, #520]	; (f7ec <am_hal_gpio_pinconfig+0x240>)
    f5e2:	5c2d      	ldrb	r5, [r5, r0]
    f5e4:	07ee      	lsls	r6, r5, #31
    f5e6:	d403      	bmi.n	f5f0 <am_hal_gpio_pinconfig+0x44>
    f5e8:	4881      	ldr	r0, [pc, #516]	; (f7f0 <am_hal_gpio_pinconfig+0x244>)
    f5ea:	b005      	add	sp, #20
    f5ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f5f0:	3f02      	subs	r7, #2
    f5f2:	ea42 1287 	orr.w	r2, r2, r7, lsl #6
    f5f6:	2c00      	cmp	r4, #0
    f5f8:	f040 8091 	bne.w	f71e <am_hal_gpio_pinconfig+0x172>
    f5fc:	4c7d      	ldr	r4, [pc, #500]	; (f7f4 <am_hal_gpio_pinconfig+0x248>)
    f5fe:	4d7e      	ldr	r5, [pc, #504]	; (f7f8 <am_hal_gpio_pinconfig+0x24c>)
    f600:	5c24      	ldrb	r4, [r4, r0]
    f602:	5c2d      	ldrb	r5, [r5, r0]
    f604:	411c      	asrs	r4, r3
    f606:	f014 0f01 	tst.w	r4, #1
    f60a:	bf0c      	ite	eq
    f60c:	2400      	moveq	r4, #0
    f60e:	2402      	movne	r4, #2
    f610:	42ab      	cmp	r3, r5
    f612:	ea42 0204 	orr.w	r2, r2, r4
    f616:	f000 8096 	beq.w	f746 <am_hal_gpio_pinconfig+0x19a>
    f61a:	f3c1 3341 	ubfx	r3, r1, #13, #2
    f61e:	105d      	asrs	r5, r3, #1
    f620:	f3c1 2681 	ubfx	r6, r1, #10, #2
    f624:	00db      	lsls	r3, r3, #3
    f626:	f3c1 2e07 	ubfx	lr, r1, #8, #8
    f62a:	f003 0408 	and.w	r4, r3, #8
    f62e:	ea45 0346 	orr.w	r3, r5, r6, lsl #1
    f632:	f00e 060c 	and.w	r6, lr, #12
    f636:	f3c1 3500 	ubfx	r5, r1, #12, #1
    f63a:	2e04      	cmp	r6, #4
    f63c:	ea43 0304 	orr.w	r3, r3, r4
    f640:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
    f644:	462c      	mov	r4, r5
    f646:	f000 808b 	beq.w	f760 <am_hal_gpio_pinconfig+0x1b4>
    f64a:	4c6c      	ldr	r4, [pc, #432]	; (f7fc <am_hal_gpio_pinconfig+0x250>)
    f64c:	6827      	ldr	r7, [r4, #0]
    f64e:	1bcf      	subs	r7, r1, r7
    f650:	fab7 f787 	clz	r7, r7
    f654:	097f      	lsrs	r7, r7, #5
    f656:	f01e 0f60 	tst.w	lr, #96	; 0x60
    f65a:	bf04      	itt	eq
    f65c:	f3c1 34c0 	ubfxeq	r4, r1, #15, #1
    f660:	f364 0300 	bfieq	r3, r4, #0, #1
    f664:	0084      	lsls	r4, r0, #2
    f666:	f3c1 2101 	ubfx	r1, r1, #8, #2
    f66a:	2902      	cmp	r1, #2
    f66c:	ea4f 05c0 	mov.w	r5, r0, lsl #3
    f670:	d078      	beq.n	f764 <am_hal_gpio_pinconfig+0x1b8>
    f672:	d87f      	bhi.n	f774 <am_hal_gpio_pinconfig+0x1c8>
    f674:	2901      	cmp	r1, #1
    f676:	f04f 0100 	mov.w	r1, #0
    f67a:	bf08      	it	eq
    f67c:	f042 0204 	orreq.w	r2, r2, #4
    f680:	f005 0518 	and.w	r5, r5, #24
    f684:	9101      	str	r1, [sp, #4]
    f686:	f004 041c 	and.w	r4, r4, #28
    f68a:	f020 0a03 	bic.w	sl, r0, #3
    f68e:	f04f 090f 	mov.w	r9, #15
    f692:	fa09 f904 	lsl.w	r9, r9, r4
    f696:	0841      	lsrs	r1, r0, #1
    f698:	26ff      	movs	r6, #255	; 0xff
    f69a:	fa03 f404 	lsl.w	r4, r3, r4
    f69e:	f10a 4380 	add.w	r3, sl, #1073741824	; 0x40000000
    f6a2:	40ae      	lsls	r6, r5
    f6a4:	9300      	str	r3, [sp, #0]
    f6a6:	fa02 f505 	lsl.w	r5, r2, r5
    f6aa:	4683      	mov	fp, r0
    f6ac:	f021 0803 	bic.w	r8, r1, #3
    f6b0:	f000 f932 	bl	f918 <am_hal_interrupt_master_disable>
    f6b4:	9b00      	ldr	r3, [sp, #0]
    f6b6:	9003      	str	r0, [sp, #12]
    f6b8:	ea6f 0909 	mvn.w	r9, r9
    f6bc:	43f6      	mvns	r6, r6
    f6be:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
    f6c2:	f8df e15c 	ldr.w	lr, [pc, #348]	; f820 <am_hal_gpio_pinconfig+0x274>
    f6c6:	4a4e      	ldr	r2, [pc, #312]	; (f800 <am_hal_gpio_pinconfig+0x254>)
    f6c8:	b15f      	cbz	r7, f6e2 <am_hal_gpio_pinconfig+0x136>
    f6ca:	ea4f 07db 	mov.w	r7, fp, lsr #3
    f6ce:	f00b 001f 	and.w	r0, fp, #31
    f6d2:	f007 0704 	and.w	r7, r7, #4
    f6d6:	f04f 0b01 	mov.w	fp, #1
    f6da:	494a      	ldr	r1, [pc, #296]	; (f804 <am_hal_gpio_pinconfig+0x258>)
    f6dc:	fa0b f000 	lsl.w	r0, fp, r0
    f6e0:	5078      	str	r0, [r7, r1]
    f6e2:	4849      	ldr	r0, [pc, #292]	; (f808 <am_hal_gpio_pinconfig+0x25c>)
    f6e4:	2773      	movs	r7, #115	; 0x73
    f6e6:	6607      	str	r7, [r0, #96]	; 0x60
    f6e8:	681f      	ldr	r7, [r3, #0]
    f6ea:	4037      	ands	r7, r6
    f6ec:	433d      	orrs	r5, r7
    f6ee:	601d      	str	r5, [r3, #0]
    f6f0:	f858 300e 	ldr.w	r3, [r8, lr]
    f6f4:	ea09 0303 	and.w	r3, r9, r3
    f6f8:	4323      	orrs	r3, r4
    f6fa:	f848 300e 	str.w	r3, [r8, lr]
    f6fe:	f85a 3002 	ldr.w	r3, [sl, r2]
    f702:	401e      	ands	r6, r3
    f704:	9b01      	ldr	r3, [sp, #4]
    f706:	2400      	movs	r4, #0
    f708:	431e      	orrs	r6, r3
    f70a:	f84a 6002 	str.w	r6, [sl, r2]
    f70e:	6604      	str	r4, [r0, #96]	; 0x60
    f710:	9803      	ldr	r0, [sp, #12]
    f712:	f000 f905 	bl	f920 <am_hal_interrupt_master_set>
    f716:	4620      	mov	r0, r4
    f718:	b005      	add	sp, #20
    f71a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f71e:	2c01      	cmp	r4, #1
    f720:	d017      	beq.n	f752 <am_hal_gpio_pinconfig+0x1a6>
    f722:	2c02      	cmp	r4, #2
    f724:	d035      	beq.n	f792 <am_hal_gpio_pinconfig+0x1e6>
    f726:	4839      	ldr	r0, [pc, #228]	; (f80c <am_hal_gpio_pinconfig+0x260>)
    f728:	b005      	add	sp, #20
    f72a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f72e:	2ec0      	cmp	r6, #192	; 0xc0
    f730:	d02a      	beq.n	f788 <am_hal_gpio_pinconfig+0x1dc>
    f732:	2e20      	cmp	r6, #32
    f734:	f47f af5f 	bne.w	f5f6 <am_hal_gpio_pinconfig+0x4a>
    f738:	2814      	cmp	r0, #20
    f73a:	f43f af55 	beq.w	f5e8 <am_hal_gpio_pinconfig+0x3c>
    f73e:	2c00      	cmp	r4, #0
    f740:	f43f af5c 	beq.w	f5fc <am_hal_gpio_pinconfig+0x50>
    f744:	e7eb      	b.n	f71e <am_hal_gpio_pinconfig+0x172>
    f746:	f3c1 4402 	ubfx	r4, r1, #16, #3
    f74a:	2c07      	cmp	r4, #7
    f74c:	d128      	bne.n	f7a0 <am_hal_gpio_pinconfig+0x1f4>
    f74e:	4830      	ldr	r0, [pc, #192]	; (f810 <am_hal_gpio_pinconfig+0x264>)
    f750:	e74b      	b.n	f5ea <am_hal_gpio_pinconfig+0x3e>
    f752:	4c26      	ldr	r4, [pc, #152]	; (f7ec <am_hal_gpio_pinconfig+0x240>)
    f754:	5c24      	ldrb	r4, [r4, r0]
    f756:	07a5      	lsls	r5, r4, #30
    f758:	d5e5      	bpl.n	f726 <am_hal_gpio_pinconfig+0x17a>
    f75a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    f75e:	e74d      	b.n	f5fc <am_hal_gpio_pinconfig+0x50>
    f760:	2701      	movs	r7, #1
    f762:	e778      	b.n	f656 <am_hal_gpio_pinconfig+0xaa>
    f764:	f005 0518 	and.w	r5, r5, #24
    f768:	f04f 0801 	mov.w	r8, #1
    f76c:	fa08 f105 	lsl.w	r1, r8, r5
    f770:	9101      	str	r1, [sp, #4]
    f772:	e788      	b.n	f686 <am_hal_gpio_pinconfig+0xda>
    f774:	f005 0518 	and.w	r5, r5, #24
    f778:	f04f 0801 	mov.w	r8, #1
    f77c:	fa08 f105 	lsl.w	r1, r8, r5
    f780:	f042 0204 	orr.w	r2, r2, #4
    f784:	9101      	str	r1, [sp, #4]
    f786:	e77e      	b.n	f686 <am_hal_gpio_pinconfig+0xda>
    f788:	2814      	cmp	r0, #20
    f78a:	f43f af34 	beq.w	f5f6 <am_hal_gpio_pinconfig+0x4a>
    f78e:	4821      	ldr	r0, [pc, #132]	; (f814 <am_hal_gpio_pinconfig+0x268>)
    f790:	e72b      	b.n	f5ea <am_hal_gpio_pinconfig+0x3e>
    f792:	4c16      	ldr	r4, [pc, #88]	; (f7ec <am_hal_gpio_pinconfig+0x240>)
    f794:	5c24      	ldrb	r4, [r4, r0]
    f796:	0764      	lsls	r4, r4, #29
    f798:	d5c5      	bpl.n	f726 <am_hal_gpio_pinconfig+0x17a>
    f79a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    f79e:	e72d      	b.n	f5fc <am_hal_gpio_pinconfig+0x50>
    f7a0:	4d1d      	ldr	r5, [pc, #116]	; (f818 <am_hal_gpio_pinconfig+0x26c>)
    f7a2:	f3c1 43c1 	ubfx	r3, r1, #19, #2
    f7a6:	f815 6020 	ldrb.w	r6, [r5, r0, lsl #2]
    f7aa:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
    f7ae:	429e      	cmp	r6, r3
    f7b0:	d00c      	beq.n	f7cc <am_hal_gpio_pinconfig+0x220>
    f7b2:	0084      	lsls	r4, r0, #2
    f7b4:	4425      	add	r5, r4
    f7b6:	786e      	ldrb	r6, [r5, #1]
    f7b8:	429e      	cmp	r6, r3
    f7ba:	d012      	beq.n	f7e2 <am_hal_gpio_pinconfig+0x236>
    f7bc:	78ae      	ldrb	r6, [r5, #2]
    f7be:	429e      	cmp	r6, r3
    f7c0:	d00d      	beq.n	f7de <am_hal_gpio_pinconfig+0x232>
    f7c2:	78ed      	ldrb	r5, [r5, #3]
    f7c4:	429d      	cmp	r5, r3
    f7c6:	d00e      	beq.n	f7e6 <am_hal_gpio_pinconfig+0x23a>
    f7c8:	4814      	ldr	r0, [pc, #80]	; (f81c <am_hal_gpio_pinconfig+0x270>)
    f7ca:	e70e      	b.n	f5ea <am_hal_gpio_pinconfig+0x3e>
    f7cc:	2300      	movs	r3, #0
    f7ce:	0084      	lsls	r4, r0, #2
    f7d0:	005b      	lsls	r3, r3, #1
    f7d2:	f3c1 5540 	ubfx	r5, r1, #21, #1
    f7d6:	ea43 03c5 	orr.w	r3, r3, r5, lsl #3
    f7da:	2700      	movs	r7, #0
    f7dc:	e743      	b.n	f666 <am_hal_gpio_pinconfig+0xba>
    f7de:	2302      	movs	r3, #2
    f7e0:	e7f6      	b.n	f7d0 <am_hal_gpio_pinconfig+0x224>
    f7e2:	2301      	movs	r3, #1
    f7e4:	e7f4      	b.n	f7d0 <am_hal_gpio_pinconfig+0x224>
    f7e6:	2303      	movs	r3, #3
    f7e8:	e7f2      	b.n	f7d0 <am_hal_gpio_pinconfig+0x224>
    f7ea:	bf00      	nop
    f7ec:	000121e0 	.word	0x000121e0
    f7f0:	08000100 	.word	0x08000100
    f7f4:	000122dc 	.word	0x000122dc
    f7f8:	00012318 	.word	0x00012318
    f7fc:	00012310 	.word	0x00012310
    f800:	400100e0 	.word	0x400100e0
    f804:	400100b4 	.word	0x400100b4
    f808:	40010000 	.word	0x40010000
    f80c:	08000102 	.word	0x08000102
    f810:	08000103 	.word	0x08000103
    f814:	08000101 	.word	0x08000101
    f818:	00012214 	.word	0x00012214
    f81c:	08000104 	.word	0x08000104
    f820:	40010040 	.word	0x40010040

0000f824 <am_hal_gpio_state_read>:
    f824:	b1ca      	cbz	r2, f85a <am_hal_gpio_state_read+0x36>
    f826:	2831      	cmp	r0, #49	; 0x31
    f828:	d904      	bls.n	f834 <am_hal_gpio_state_read+0x10>
    f82a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    f82e:	6013      	str	r3, [r2, #0]
    f830:	2005      	movs	r0, #5
    f832:	4770      	bx	lr
    f834:	08c3      	lsrs	r3, r0, #3
    f836:	2901      	cmp	r1, #1
    f838:	f003 0304 	and.w	r3, r3, #4
    f83c:	f000 001f 	and.w	r0, r0, #31
    f840:	d00d      	beq.n	f85e <am_hal_gpio_state_read+0x3a>
    f842:	d313      	bcc.n	f86c <am_hal_gpio_state_read+0x48>
    f844:	2902      	cmp	r1, #2
    f846:	d108      	bne.n	f85a <am_hal_gpio_state_read+0x36>
    f848:	490c      	ldr	r1, [pc, #48]	; (f87c <am_hal_gpio_state_read+0x58>)
    f84a:	585b      	ldr	r3, [r3, r1]
    f84c:	fa23 f000 	lsr.w	r0, r3, r0
    f850:	f000 0001 	and.w	r0, r0, #1
    f854:	6010      	str	r0, [r2, #0]
    f856:	2000      	movs	r0, #0
    f858:	4770      	bx	lr
    f85a:	2006      	movs	r0, #6
    f85c:	4770      	bx	lr
    f85e:	4908      	ldr	r1, [pc, #32]	; (f880 <am_hal_gpio_state_read+0x5c>)
    f860:	585b      	ldr	r3, [r3, r1]
    f862:	fa23 f000 	lsr.w	r0, r3, r0
    f866:	f000 0001 	and.w	r0, r0, #1
    f86a:	e7f3      	b.n	f854 <am_hal_gpio_state_read+0x30>
    f86c:	4905      	ldr	r1, [pc, #20]	; (f884 <am_hal_gpio_state_read+0x60>)
    f86e:	585b      	ldr	r3, [r3, r1]
    f870:	fa23 f000 	lsr.w	r0, r3, r0
    f874:	f000 0001 	and.w	r0, r0, #1
    f878:	e7ec      	b.n	f854 <am_hal_gpio_state_read+0x30>
    f87a:	bf00      	nop
    f87c:	400100a0 	.word	0x400100a0
    f880:	40010088 	.word	0x40010088
    f884:	40010080 	.word	0x40010080

0000f888 <am_hal_gpio_state_write>:
    f888:	2831      	cmp	r0, #49	; 0x31
    f88a:	d901      	bls.n	f890 <am_hal_gpio_state_write+0x8>
    f88c:	2005      	movs	r0, #5
    f88e:	4770      	bx	lr
    f890:	2905      	cmp	r1, #5
    f892:	d901      	bls.n	f898 <am_hal_gpio_state_write+0x10>
    f894:	2006      	movs	r0, #6
    f896:	4770      	bx	lr
    f898:	b570      	push	{r4, r5, r6, lr}
    f89a:	f000 031f 	and.w	r3, r0, #31
    f89e:	b082      	sub	sp, #8
    f8a0:	08c0      	lsrs	r0, r0, #3
    f8a2:	2201      	movs	r2, #1
    f8a4:	460d      	mov	r5, r1
    f8a6:	f000 0404 	and.w	r4, r0, #4
    f8aa:	fa02 f603 	lsl.w	r6, r2, r3
    f8ae:	f000 f833 	bl	f918 <am_hal_interrupt_master_disable>
    f8b2:	1e69      	subs	r1, r5, #1
    f8b4:	9001      	str	r0, [sp, #4]
    f8b6:	2904      	cmp	r1, #4
    f8b8:	d817      	bhi.n	f8ea <am_hal_gpio_state_write+0x62>
    f8ba:	e8df f001 	tbb	[pc, r1]
    f8be:	0e13      	.short	0x0e13
    f8c0:	030b      	.short	0x030b
    f8c2:	19          	.byte	0x19
    f8c3:	00          	.byte	0x00
    f8c4:	4b0d      	ldr	r3, [pc, #52]	; (f8fc <am_hal_gpio_state_write+0x74>)
    f8c6:	50e6      	str	r6, [r4, r3]
    f8c8:	9801      	ldr	r0, [sp, #4]
    f8ca:	f000 f829 	bl	f920 <am_hal_interrupt_master_set>
    f8ce:	2000      	movs	r0, #0
    f8d0:	b002      	add	sp, #8
    f8d2:	bd70      	pop	{r4, r5, r6, pc}
    f8d4:	4b0a      	ldr	r3, [pc, #40]	; (f900 <am_hal_gpio_state_write+0x78>)
    f8d6:	50e6      	str	r6, [r4, r3]
    f8d8:	e7f6      	b.n	f8c8 <am_hal_gpio_state_write+0x40>
    f8da:	4a0a      	ldr	r2, [pc, #40]	; (f904 <am_hal_gpio_state_write+0x7c>)
    f8dc:	58a3      	ldr	r3, [r4, r2]
    f8de:	4073      	eors	r3, r6
    f8e0:	50a3      	str	r3, [r4, r2]
    f8e2:	e7f1      	b.n	f8c8 <am_hal_gpio_state_write+0x40>
    f8e4:	4b08      	ldr	r3, [pc, #32]	; (f908 <am_hal_gpio_state_write+0x80>)
    f8e6:	50e6      	str	r6, [r4, r3]
    f8e8:	e7ee      	b.n	f8c8 <am_hal_gpio_state_write+0x40>
    f8ea:	4b08      	ldr	r3, [pc, #32]	; (f90c <am_hal_gpio_state_write+0x84>)
    f8ec:	50e6      	str	r6, [r4, r3]
    f8ee:	e7eb      	b.n	f8c8 <am_hal_gpio_state_write+0x40>
    f8f0:	4a03      	ldr	r2, [pc, #12]	; (f900 <am_hal_gpio_state_write+0x78>)
    f8f2:	58a3      	ldr	r3, [r4, r2]
    f8f4:	4073      	eors	r3, r6
    f8f6:	50a3      	str	r3, [r4, r2]
    f8f8:	e7e6      	b.n	f8c8 <am_hal_gpio_state_write+0x40>
    f8fa:	bf00      	nop
    f8fc:	400100a8 	.word	0x400100a8
    f900:	400100b4 	.word	0x400100b4
    f904:	40010088 	.word	0x40010088
    f908:	40010090 	.word	0x40010090
    f90c:	40010098 	.word	0x40010098

0000f910 <am_hal_interrupt_master_enable>:
    f910:	f3ef 8010 	mrs	r0, PRIMASK
    f914:	b662      	cpsie	i
    f916:	4770      	bx	lr

0000f918 <am_hal_interrupt_master_disable>:
    f918:	f3ef 8010 	mrs	r0, PRIMASK
    f91c:	b672      	cpsid	i
    f91e:	4770      	bx	lr

0000f920 <am_hal_interrupt_master_set>:
    f920:	f380 8810 	msr	PRIMASK, r0
    f924:	4770      	bx	lr
    f926:	bf00      	nop

0000f928 <am_hal_itm_disable>:
    f928:	b510      	push	{r4, lr}
    f92a:	4b25      	ldr	r3, [pc, #148]	; (f9c0 <am_hal_itm_disable+0x98>)
    f92c:	f8d3 3250 	ldr.w	r3, [r3, #592]	; 0x250
    f930:	b9b3      	cbnz	r3, f960 <am_hal_itm_disable+0x38>
    f932:	4b24      	ldr	r3, [pc, #144]	; (f9c4 <am_hal_itm_disable+0x9c>)
    f934:	68da      	ldr	r2, [r3, #12]
    f936:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
    f93a:	60da      	str	r2, [r3, #12]
    f93c:	68da      	ldr	r2, [r3, #12]
    f93e:	01d2      	lsls	r2, r2, #7
    f940:	d5fc      	bpl.n	f93c <am_hal_itm_disable+0x14>
    f942:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
    f946:	4920      	ldr	r1, [pc, #128]	; (f9c8 <am_hal_itm_disable+0xa0>)
    f948:	f8c3 1fb0 	str.w	r1, [r3, #4016]	; 0xfb0
    f94c:	4a1f      	ldr	r2, [pc, #124]	; (f9cc <am_hal_itm_disable+0xa4>)
    f94e:	200f      	movs	r0, #15
    f950:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    f954:	f8c3 0e40 	str.w	r0, [r3, #3648]	; 0xe40
    f958:	f8c3 1e00 	str.w	r1, [r3, #3584]	; 0xe00
    f95c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
    f960:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
    f964:	f8d2 3e80 	ldr.w	r3, [r2, #3712]	; 0xe80
    f968:	021b      	lsls	r3, r3, #8
    f96a:	f04f 4460 	mov.w	r4, #3758096384	; 0xe0000000
    f96e:	d4f9      	bmi.n	f964 <am_hal_itm_disable+0x3c>
    f970:	f44f 7048 	mov.w	r0, #800	; 0x320
    f974:	f7ff fdc6 	bl	f504 <am_hal_flash_delay>
    f978:	4b13      	ldr	r3, [pc, #76]	; (f9c8 <am_hal_itm_disable+0xa0>)
    f97a:	f8c4 3fb0 	str.w	r3, [r4, #4016]	; 0xfb0
    f97e:	4621      	mov	r1, r4
    f980:	2064      	movs	r0, #100	; 0x64
    f982:	f8d1 3e80 	ldr.w	r3, [r1, #3712]	; 0xe80
    f986:	f023 0301 	bic.w	r3, r3, #1
    f98a:	f8c1 3e80 	str.w	r3, [r1, #3712]	; 0xe80
    f98e:	f8d1 2e80 	ldr.w	r2, [r1, #3712]	; 0xe80
    f992:	4b0f      	ldr	r3, [pc, #60]	; (f9d0 <am_hal_itm_disable+0xa8>)
    f994:	4013      	ands	r3, r2
    f996:	2b00      	cmp	r3, #0
    f998:	d1f9      	bne.n	f98e <am_hal_itm_disable+0x66>
    f99a:	3801      	subs	r0, #1
    f99c:	d1f1      	bne.n	f982 <am_hal_itm_disable+0x5a>
    f99e:	4a09      	ldr	r2, [pc, #36]	; (f9c4 <am_hal_itm_disable+0x9c>)
    f9a0:	68d3      	ldr	r3, [r2, #12]
    f9a2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    f9a6:	60d3      	str	r3, [r2, #12]
    f9a8:	68d3      	ldr	r3, [r2, #12]
    f9aa:	f013 7380 	ands.w	r3, r3, #16777216	; 0x1000000
    f9ae:	d1fb      	bne.n	f9a8 <am_hal_itm_disable+0x80>
    f9b0:	4a03      	ldr	r2, [pc, #12]	; (f9c0 <am_hal_itm_disable+0x98>)
    f9b2:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
    f9b6:	f8d2 3250 	ldr.w	r3, [r2, #592]	; 0x250
    f9ba:	2b00      	cmp	r3, #0
    f9bc:	d1fb      	bne.n	f9b6 <am_hal_itm_disable+0x8e>
    f9be:	bd10      	pop	{r4, pc}
    f9c0:	40020000 	.word	0x40020000
    f9c4:	e000edf0 	.word	0xe000edf0
    f9c8:	c5acce55 	.word	0xc5acce55
    f9cc:	00150511 	.word	0x00150511
    f9d0:	00800001 	.word	0x00800001

0000f9d4 <am_hal_mcuctrl_info_get>:
    f9d4:	b4f0      	push	{r4, r5, r6, r7}
    f9d6:	b121      	cbz	r1, f9e2 <am_hal_mcuctrl_info_get+0xe>
    f9d8:	2801      	cmp	r0, #1
    f9da:	d038      	beq.n	fa4e <am_hal_mcuctrl_info_get+0x7a>
    f9dc:	d320      	bcc.n	fa20 <am_hal_mcuctrl_info_get+0x4c>
    f9de:	2802      	cmp	r0, #2
    f9e0:	d002      	beq.n	f9e8 <am_hal_mcuctrl_info_get+0x14>
    f9e2:	2006      	movs	r0, #6
    f9e4:	bcf0      	pop	{r4, r5, r6, r7}
    f9e6:	4770      	bx	lr
    f9e8:	4a41      	ldr	r2, [pc, #260]	; (faf0 <am_hal_mcuctrl_info_get+0x11c>)
    f9ea:	684d      	ldr	r5, [r1, #4]
    f9ec:	f8d2 31cc 	ldr.w	r3, [r2, #460]	; 0x1cc
    f9f0:	694c      	ldr	r4, [r1, #20]
    f9f2:	f003 0601 	and.w	r6, r3, #1
    f9f6:	f3c3 0040 	ubfx	r0, r3, #1, #1
    f9fa:	f3c3 0380 	ubfx	r3, r3, #2, #1
    f9fe:	700e      	strb	r6, [r1, #0]
    fa00:	7208      	strb	r0, [r1, #8]
    fa02:	740b      	strb	r3, [r1, #16]
    fa04:	f8d2 31c4 	ldr.w	r3, [r2, #452]	; 0x1c4
    fa08:	60cb      	str	r3, [r1, #12]
    fa0a:	f8d2 01c0 	ldr.w	r0, [r2, #448]	; 0x1c0
    fa0e:	4328      	orrs	r0, r5
    fa10:	6048      	str	r0, [r1, #4]
    fa12:	f8d2 31c8 	ldr.w	r3, [r2, #456]	; 0x1c8
    fa16:	4323      	orrs	r3, r4
    fa18:	2000      	movs	r0, #0
    fa1a:	614b      	str	r3, [r1, #20]
    fa1c:	bcf0      	pop	{r4, r5, r6, r7}
    fa1e:	4770      	bx	lr
    fa20:	4a33      	ldr	r2, [pc, #204]	; (faf0 <am_hal_mcuctrl_info_get+0x11c>)
    fa22:	6993      	ldr	r3, [r2, #24]
    fa24:	f3c3 1080 	ubfx	r0, r3, #6, #1
    fa28:	f3c3 0380 	ubfx	r3, r3, #2, #1
    fa2c:	7008      	strb	r0, [r1, #0]
    fa2e:	704b      	strb	r3, [r1, #1]
    fa30:	f8d2 31a0 	ldr.w	r3, [r2, #416]	; 0x1a0
    fa34:	f3c3 6381 	ubfx	r3, r3, #26, #2
    fa38:	710b      	strb	r3, [r1, #4]
    fa3a:	6953      	ldr	r3, [r2, #20]
    fa3c:	f3c3 0240 	ubfx	r2, r3, #1, #1
    fa40:	f003 0301 	and.w	r3, r3, #1
    fa44:	2000      	movs	r0, #0
    fa46:	708a      	strb	r2, [r1, #2]
    fa48:	70cb      	strb	r3, [r1, #3]
    fa4a:	bcf0      	pop	{r4, r5, r6, r7}
    fa4c:	4770      	bx	lr
    fa4e:	4b28      	ldr	r3, [pc, #160]	; (faf0 <am_hal_mcuctrl_info_get+0x11c>)
    fa50:	4c28      	ldr	r4, [pc, #160]	; (faf4 <am_hal_mcuctrl_info_get+0x120>)
    fa52:	681a      	ldr	r2, [r3, #0]
    fa54:	600a      	str	r2, [r1, #0]
    fa56:	6858      	ldr	r0, [r3, #4]
    fa58:	6048      	str	r0, [r1, #4]
    fa5a:	6898      	ldr	r0, [r3, #8]
    fa5c:	6088      	str	r0, [r1, #8]
    fa5e:	68d8      	ldr	r0, [r3, #12]
    fa60:	60c8      	str	r0, [r1, #12]
    fa62:	691d      	ldr	r5, [r3, #16]
    fa64:	4824      	ldr	r0, [pc, #144]	; (faf8 <am_hal_mcuctrl_info_get+0x124>)
    fa66:	610d      	str	r5, [r1, #16]
    fa68:	f3c2 5703 	ubfx	r7, r2, #20, #4
    fa6c:	f3c2 4603 	ubfx	r6, r2, #16, #4
    fa70:	695d      	ldr	r5, [r3, #20]
    fa72:	f854 4027 	ldr.w	r4, [r4, r7, lsl #2]
    fa76:	4b21      	ldr	r3, [pc, #132]	; (fafc <am_hal_mcuctrl_info_get+0x128>)
    fa78:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
    fa7c:	6208      	str	r0, [r1, #32]
    fa7e:	f002 0201 	and.w	r2, r2, #1
    fa82:	614d      	str	r5, [r1, #20]
    fa84:	61cc      	str	r4, [r1, #28]
    fa86:	618a      	str	r2, [r1, #24]
    fa88:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
    fa8c:	f8d3 40e4 	ldr.w	r4, [r3, #228]	; 0xe4
    fa90:	b2d0      	uxtb	r0, r2
    fa92:	f004 020f 	and.w	r2, r4, #15
    fa96:	ea40 2202 	orr.w	r2, r0, r2, lsl #8
    fa9a:	624a      	str	r2, [r1, #36]	; 0x24
    fa9c:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    faa0:	f8d3 40e8 	ldr.w	r4, [r3, #232]	; 0xe8
    faa4:	f3c2 1003 	ubfx	r0, r2, #4, #4
    faa8:	f004 020f 	and.w	r2, r4, #15
    faac:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
    fab0:	628a      	str	r2, [r1, #40]	; 0x28
    fab2:	f8d3 00e8 	ldr.w	r0, [r3, #232]	; 0xe8
    fab6:	f8d3 20ec 	ldr.w	r2, [r3, #236]	; 0xec
    faba:	f000 00f0 	and.w	r0, r0, #240	; 0xf0
    fabe:	f3c2 1203 	ubfx	r2, r2, #4, #4
    fac2:	4302      	orrs	r2, r0
    fac4:	62ca      	str	r2, [r1, #44]	; 0x2c
    fac6:	f8d3 50fc 	ldr.w	r5, [r3, #252]	; 0xfc
    faca:	f8d3 00f8 	ldr.w	r0, [r3, #248]	; 0xf8
    face:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
    fad2:	f8d3 20f0 	ldr.w	r2, [r3, #240]	; 0xf0
    fad6:	b2c0      	uxtb	r0, r0
    fad8:	0400      	lsls	r0, r0, #16
    fada:	ea40 6305 	orr.w	r3, r0, r5, lsl #24
    fade:	b2d2      	uxtb	r2, r2
    fae0:	431a      	orrs	r2, r3
    fae2:	b2e3      	uxtb	r3, r4
    fae4:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
    fae8:	630b      	str	r3, [r1, #48]	; 0x30
    faea:	2000      	movs	r0, #0
    faec:	bcf0      	pop	{r4, r5, r6, r7}
    faee:	4770      	bx	lr
    faf0:	40020000 	.word	0x40020000
    faf4:	00012350 	.word	0x00012350
    faf8:	00012390 	.word	0x00012390
    fafc:	f0000f00 	.word	0xf0000f00

0000fb00 <am_hal_pwrctrl_periph_enable>:
    fb00:	b570      	push	{r4, r5, r6, lr}
    fb02:	b082      	sub	sp, #8
    fb04:	4604      	mov	r4, r0
    fb06:	f7ff ff07 	bl	f918 <am_hal_interrupt_master_disable>
    fb0a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
    fb0e:	4d0f      	ldr	r5, [pc, #60]	; (fb4c <am_hal_pwrctrl_periph_enable+0x4c>)
    fb10:	4e0f      	ldr	r6, [pc, #60]	; (fb50 <am_hal_pwrctrl_periph_enable+0x50>)
    fb12:	9001      	str	r0, [sp, #4]
    fb14:	00a4      	lsls	r4, r4, #2
    fb16:	68aa      	ldr	r2, [r5, #8]
    fb18:	5933      	ldr	r3, [r6, r4]
    fb1a:	4313      	orrs	r3, r2
    fb1c:	60ab      	str	r3, [r5, #8]
    fb1e:	9801      	ldr	r0, [sp, #4]
    fb20:	4434      	add	r4, r6
    fb22:	f7ff fefd 	bl	f920 <am_hal_interrupt_master_set>
    fb26:	20a0      	movs	r0, #160	; 0xa0
    fb28:	f7ff fcec 	bl	f504 <am_hal_flash_delay>
    fb2c:	69ab      	ldr	r3, [r5, #24]
    fb2e:	6864      	ldr	r4, [r4, #4]
    fb30:	4223      	tst	r3, r4
    fb32:	d103      	bne.n	fb3c <am_hal_pwrctrl_periph_enable+0x3c>
    fb34:	20a0      	movs	r0, #160	; 0xa0
    fb36:	f7ff fce5 	bl	f504 <am_hal_flash_delay>
    fb3a:	69ab      	ldr	r3, [r5, #24]
    fb3c:	4b03      	ldr	r3, [pc, #12]	; (fb4c <am_hal_pwrctrl_periph_enable+0x4c>)
    fb3e:	699b      	ldr	r3, [r3, #24]
    fb40:	4223      	tst	r3, r4
    fb42:	bf0c      	ite	eq
    fb44:	2001      	moveq	r0, #1
    fb46:	2000      	movne	r0, #0
    fb48:	b002      	add	sp, #8
    fb4a:	bd70      	pop	{r4, r5, r6, pc}
    fb4c:	40021000 	.word	0x40021000
    fb50:	000123d0 	.word	0x000123d0

0000fb54 <am_hal_pwrctrl_periph_disable>:
    fb54:	b570      	push	{r4, r5, r6, lr}
    fb56:	b082      	sub	sp, #8
    fb58:	4604      	mov	r4, r0
    fb5a:	f7ff fedd 	bl	f918 <am_hal_interrupt_master_disable>
    fb5e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
    fb62:	4d10      	ldr	r5, [pc, #64]	; (fba4 <am_hal_pwrctrl_periph_disable+0x50>)
    fb64:	4e10      	ldr	r6, [pc, #64]	; (fba8 <am_hal_pwrctrl_periph_disable+0x54>)
    fb66:	9001      	str	r0, [sp, #4]
    fb68:	00a4      	lsls	r4, r4, #2
    fb6a:	68ab      	ldr	r3, [r5, #8]
    fb6c:	5932      	ldr	r2, [r6, r4]
    fb6e:	ea23 0302 	bic.w	r3, r3, r2
    fb72:	60ab      	str	r3, [r5, #8]
    fb74:	9801      	ldr	r0, [sp, #4]
    fb76:	4434      	add	r4, r6
    fb78:	f7ff fed2 	bl	f920 <am_hal_interrupt_master_set>
    fb7c:	20a0      	movs	r0, #160	; 0xa0
    fb7e:	f7ff fcc1 	bl	f504 <am_hal_flash_delay>
    fb82:	69ab      	ldr	r3, [r5, #24]
    fb84:	6864      	ldr	r4, [r4, #4]
    fb86:	4223      	tst	r3, r4
    fb88:	d003      	beq.n	fb92 <am_hal_pwrctrl_periph_disable+0x3e>
    fb8a:	20a0      	movs	r0, #160	; 0xa0
    fb8c:	f7ff fcba 	bl	f504 <am_hal_flash_delay>
    fb90:	69ab      	ldr	r3, [r5, #24]
    fb92:	4b04      	ldr	r3, [pc, #16]	; (fba4 <am_hal_pwrctrl_periph_disable+0x50>)
    fb94:	699b      	ldr	r3, [r3, #24]
    fb96:	4223      	tst	r3, r4
    fb98:	bf14      	ite	ne
    fb9a:	2001      	movne	r0, #1
    fb9c:	2000      	moveq	r0, #0
    fb9e:	b002      	add	sp, #8
    fba0:	bd70      	pop	{r4, r5, r6, pc}
    fba2:	bf00      	nop
    fba4:	40021000 	.word	0x40021000
    fba8:	000123d0 	.word	0x000123d0

0000fbac <am_hal_pwrctrl_low_power_init>:
    fbac:	b530      	push	{r4, r5, lr}
    fbae:	4b33      	ldr	r3, [pc, #204]	; (fc7c <am_hal_pwrctrl_low_power_init+0xd0>)
    fbb0:	681a      	ldr	r2, [r3, #0]
    fbb2:	b085      	sub	sp, #20
    fbb4:	b912      	cbnz	r2, fbbc <am_hal_pwrctrl_low_power_init+0x10>
    fbb6:	4a32      	ldr	r2, [pc, #200]	; (fc80 <am_hal_pwrctrl_low_power_init+0xd4>)
    fbb8:	6812      	ldr	r2, [r2, #0]
    fbba:	601a      	str	r2, [r3, #0]
    fbbc:	4b31      	ldr	r3, [pc, #196]	; (fc84 <am_hal_pwrctrl_low_power_init+0xd8>)
    fbbe:	68db      	ldr	r3, [r3, #12]
    fbc0:	b2db      	uxtb	r3, r3
    fbc2:	2b12      	cmp	r3, #18
    fbc4:	d00a      	beq.n	fbdc <am_hal_pwrctrl_low_power_init+0x30>
    fbc6:	4c30      	ldr	r4, [pc, #192]	; (fc88 <am_hal_pwrctrl_low_power_init+0xdc>)
    fbc8:	2100      	movs	r1, #0
    fbca:	200c      	movs	r0, #12
    fbcc:	f7ff fa8c 	bl	f0e8 <am_hal_cachectrl_control>
    fbd0:	69a3      	ldr	r3, [r4, #24]
    fbd2:	05d8      	lsls	r0, r3, #23
    fbd4:	d520      	bpl.n	fc18 <am_hal_pwrctrl_low_power_init+0x6c>
    fbd6:	2000      	movs	r0, #0
    fbd8:	b005      	add	sp, #20
    fbda:	bd30      	pop	{r4, r5, pc}
    fbdc:	4c2a      	ldr	r4, [pc, #168]	; (fc88 <am_hal_pwrctrl_low_power_init+0xdc>)
    fbde:	6863      	ldr	r3, [r4, #4]
    fbe0:	07d9      	lsls	r1, r3, #31
    fbe2:	d5f0      	bpl.n	fbc6 <am_hal_pwrctrl_low_power_init+0x1a>
    fbe4:	f7ff fe98 	bl	f918 <am_hal_interrupt_master_disable>
    fbe8:	9003      	str	r0, [sp, #12]
    fbea:	68a3      	ldr	r3, [r4, #8]
    fbec:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
    fbf0:	60a3      	str	r3, [r4, #8]
    fbf2:	9803      	ldr	r0, [sp, #12]
    fbf4:	f7ff fe94 	bl	f920 <am_hal_interrupt_master_set>
    fbf8:	20a0      	movs	r0, #160	; 0xa0
    fbfa:	f7ff fc83 	bl	f504 <am_hal_flash_delay>
    fbfe:	69a3      	ldr	r3, [r4, #24]
    fc00:	061a      	lsls	r2, r3, #24
    fc02:	d403      	bmi.n	fc0c <am_hal_pwrctrl_low_power_init+0x60>
    fc04:	20a0      	movs	r0, #160	; 0xa0
    fc06:	f7ff fc7d 	bl	f504 <am_hal_flash_delay>
    fc0a:	69a3      	ldr	r3, [r4, #24]
    fc0c:	4b1e      	ldr	r3, [pc, #120]	; (fc88 <am_hal_pwrctrl_low_power_init+0xdc>)
    fc0e:	699b      	ldr	r3, [r3, #24]
    fc10:	061b      	lsls	r3, r3, #24
    fc12:	d4d8      	bmi.n	fbc6 <am_hal_pwrctrl_low_power_init+0x1a>
    fc14:	2001      	movs	r0, #1
    fc16:	e7df      	b.n	fbd8 <am_hal_pwrctrl_low_power_init+0x2c>
    fc18:	4d1a      	ldr	r5, [pc, #104]	; (fc84 <am_hal_pwrctrl_low_power_init+0xd8>)
    fc1a:	491c      	ldr	r1, [pc, #112]	; (fc8c <am_hal_pwrctrl_low_power_init+0xe0>)
    fc1c:	7e2a      	ldrb	r2, [r5, #24]
    fc1e:	2001      	movs	r0, #1
    fc20:	4302      	orrs	r2, r0
    fc22:	2307      	movs	r3, #7
    fc24:	762a      	strb	r2, [r5, #24]
    fc26:	9000      	str	r0, [sp, #0]
    fc28:	461a      	mov	r2, r3
    fc2a:	f242 7010 	movw	r0, #10000	; 0x2710
    fc2e:	f7ff fc79 	bl	f524 <am_hal_flash_delay_status_check>
    fc32:	b110      	cbz	r0, fc3a <am_hal_pwrctrl_low_power_init+0x8e>
    fc34:	2004      	movs	r0, #4
    fc36:	b005      	add	sp, #20
    fc38:	bd30      	pop	{r4, r5, pc}
    fc3a:	6823      	ldr	r3, [r4, #0]
    fc3c:	f043 0301 	orr.w	r3, r3, #1
    fc40:	6023      	str	r3, [r4, #0]
    fc42:	6a63      	ldr	r3, [r4, #36]	; 0x24
    fc44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    fc48:	6263      	str	r3, [r4, #36]	; 0x24
    fc4a:	68eb      	ldr	r3, [r5, #12]
    fc4c:	b2db      	uxtb	r3, r3
    fc4e:	2b11      	cmp	r3, #17
    fc50:	d1c1      	bne.n	fbd6 <am_hal_pwrctrl_low_power_init+0x2a>
    fc52:	f8d5 335c 	ldr.w	r3, [r5, #860]	; 0x35c
    fc56:	f360 5356 	bfi	r3, r0, #21, #2
    fc5a:	f8c5 335c 	str.w	r3, [r5, #860]	; 0x35c
    fc5e:	f8d5 3368 	ldr.w	r3, [r5, #872]	; 0x368
    fc62:	220f      	movs	r2, #15
    fc64:	f362 138b 	bfi	r3, r2, #6, #6
    fc68:	f8c5 3368 	str.w	r3, [r5, #872]	; 0x368
    fc6c:	f8d5 3368 	ldr.w	r3, [r5, #872]	; 0x368
    fc70:	f362 0305 	bfi	r3, r2, #0, #6
    fc74:	f8c5 3368 	str.w	r3, [r5, #872]	; 0x368
    fc78:	e7ae      	b.n	fbd8 <am_hal_pwrctrl_low_power_init+0x2c>
    fc7a:	bf00      	nop
    fc7c:	10001c3c 	.word	0x10001c3c
    fc80:	4ffff000 	.word	0x4ffff000
    fc84:	40020000 	.word	0x40020000
    fc88:	40021000 	.word	0x40021000
    fc8c:	40020018 	.word	0x40020018

0000fc90 <am_hal_queue_init>:
    fc90:	b410      	push	{r4}
    fc92:	2400      	movs	r4, #0
    fc94:	6004      	str	r4, [r0, #0]
    fc96:	6044      	str	r4, [r0, #4]
    fc98:	6084      	str	r4, [r0, #8]
    fc9a:	60c3      	str	r3, [r0, #12]
    fc9c:	6102      	str	r2, [r0, #16]
    fc9e:	6141      	str	r1, [r0, #20]
    fca0:	f85d 4b04 	ldr.w	r4, [sp], #4
    fca4:	4770      	bx	lr
    fca6:	bf00      	nop

0000fca8 <am_hal_queue_item_add>:
    fca8:	b5f0      	push	{r4, r5, r6, r7, lr}
    fcaa:	4604      	mov	r4, r0
    fcac:	6906      	ldr	r6, [r0, #16]
    fcae:	b083      	sub	sp, #12
    fcb0:	fb06 f602 	mul.w	r6, r6, r2
    fcb4:	460d      	mov	r5, r1
    fcb6:	f7ff fe2f 	bl	f918 <am_hal_interrupt_master_disable>
    fcba:	68e7      	ldr	r7, [r4, #12]
    fcbc:	68a2      	ldr	r2, [r4, #8]
    fcbe:	9001      	str	r0, [sp, #4]
    fcc0:	1abb      	subs	r3, r7, r2
    fcc2:	429e      	cmp	r6, r3
    fcc4:	d826      	bhi.n	fd14 <am_hal_queue_item_add+0x6c>
    fcc6:	b196      	cbz	r6, fcee <am_hal_queue_item_add+0x46>
    fcc8:	6823      	ldr	r3, [r4, #0]
    fcca:	4629      	mov	r1, r5
    fccc:	b1c5      	cbz	r5, fd00 <am_hal_queue_item_add+0x58>
    fcce:	19af      	adds	r7, r5, r6
    fcd0:	6962      	ldr	r2, [r4, #20]
    fcd2:	f811 0b01 	ldrb.w	r0, [r1], #1
    fcd6:	54d0      	strb	r0, [r2, r3]
    fcd8:	6823      	ldr	r3, [r4, #0]
    fcda:	68e5      	ldr	r5, [r4, #12]
    fcdc:	3301      	adds	r3, #1
    fcde:	42b9      	cmp	r1, r7
    fce0:	fbb3 f0f5 	udiv	r0, r3, r5
    fce4:	fb05 3310 	mls	r3, r5, r0, r3
    fce8:	6023      	str	r3, [r4, #0]
    fcea:	d1f1      	bne.n	fcd0 <am_hal_queue_item_add+0x28>
    fcec:	68a2      	ldr	r2, [r4, #8]
    fcee:	4432      	add	r2, r6
    fcf0:	60a2      	str	r2, [r4, #8]
    fcf2:	2401      	movs	r4, #1
    fcf4:	9801      	ldr	r0, [sp, #4]
    fcf6:	f7ff fe13 	bl	f920 <am_hal_interrupt_master_set>
    fcfa:	4620      	mov	r0, r4
    fcfc:	b003      	add	sp, #12
    fcfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    fd00:	3101      	adds	r1, #1
    fd02:	3301      	adds	r3, #1
    fd04:	428e      	cmp	r6, r1
    fd06:	fbb3 f0f7 	udiv	r0, r3, r7
    fd0a:	fb07 3310 	mls	r3, r7, r0, r3
    fd0e:	d1f7      	bne.n	fd00 <am_hal_queue_item_add+0x58>
    fd10:	6023      	str	r3, [r4, #0]
    fd12:	e7ec      	b.n	fcee <am_hal_queue_item_add+0x46>
    fd14:	2400      	movs	r4, #0
    fd16:	e7ed      	b.n	fcf4 <am_hal_queue_item_add+0x4c>

0000fd18 <am_hal_queue_item_get>:
    fd18:	b5f0      	push	{r4, r5, r6, r7, lr}
    fd1a:	4604      	mov	r4, r0
    fd1c:	6906      	ldr	r6, [r0, #16]
    fd1e:	b083      	sub	sp, #12
    fd20:	fb06 f602 	mul.w	r6, r6, r2
    fd24:	460d      	mov	r5, r1
    fd26:	f7ff fdf7 	bl	f918 <am_hal_interrupt_master_disable>
    fd2a:	68a2      	ldr	r2, [r4, #8]
    fd2c:	9001      	str	r0, [sp, #4]
    fd2e:	4296      	cmp	r6, r2
    fd30:	d81c      	bhi.n	fd6c <am_hal_queue_item_get+0x54>
    fd32:	b196      	cbz	r6, fd5a <am_hal_queue_item_get+0x42>
    fd34:	6863      	ldr	r3, [r4, #4]
    fd36:	b1dd      	cbz	r5, fd70 <am_hal_queue_item_get+0x58>
    fd38:	4629      	mov	r1, r5
    fd3a:	19af      	adds	r7, r5, r6
    fd3c:	6962      	ldr	r2, [r4, #20]
    fd3e:	5cd3      	ldrb	r3, [r2, r3]
    fd40:	f801 3b01 	strb.w	r3, [r1], #1
    fd44:	6863      	ldr	r3, [r4, #4]
    fd46:	68e5      	ldr	r5, [r4, #12]
    fd48:	3301      	adds	r3, #1
    fd4a:	428f      	cmp	r7, r1
    fd4c:	fbb3 f0f5 	udiv	r0, r3, r5
    fd50:	fb05 3310 	mls	r3, r5, r0, r3
    fd54:	6063      	str	r3, [r4, #4]
    fd56:	d1f1      	bne.n	fd3c <am_hal_queue_item_get+0x24>
    fd58:	68a2      	ldr	r2, [r4, #8]
    fd5a:	1b92      	subs	r2, r2, r6
    fd5c:	60a2      	str	r2, [r4, #8]
    fd5e:	2401      	movs	r4, #1
    fd60:	9801      	ldr	r0, [sp, #4]
    fd62:	f7ff fddd 	bl	f920 <am_hal_interrupt_master_set>
    fd66:	4620      	mov	r0, r4
    fd68:	b003      	add	sp, #12
    fd6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    fd6c:	2400      	movs	r4, #0
    fd6e:	e7f7      	b.n	fd60 <am_hal_queue_item_get+0x48>
    fd70:	68e0      	ldr	r0, [r4, #12]
    fd72:	4629      	mov	r1, r5
    fd74:	3101      	adds	r1, #1
    fd76:	3301      	adds	r3, #1
    fd78:	428e      	cmp	r6, r1
    fd7a:	fbb3 f5f0 	udiv	r5, r3, r0
    fd7e:	fb00 3315 	mls	r3, r0, r5, r3
    fd82:	d1f7      	bne.n	fd74 <am_hal_queue_item_get+0x5c>
    fd84:	6063      	str	r3, [r4, #4]
    fd86:	e7e8      	b.n	fd5a <am_hal_queue_item_get+0x42>

0000fd88 <am_hal_rtc_osc_select>:
    fd88:	b928      	cbnz	r0, fd96 <am_hal_rtc_osc_select+0xe>
    fd8a:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    fd8e:	68d3      	ldr	r3, [r2, #12]
    fd90:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    fd94:	60d3      	str	r3, [r2, #12]
    fd96:	4770      	bx	lr

0000fd98 <am_hal_rtc_osc_disable>:
    fd98:	4a03      	ldr	r2, [pc, #12]	; (fda8 <am_hal_rtc_osc_disable+0x10>)
    fd9a:	f892 3050 	ldrb.w	r3, [r2, #80]	; 0x50
    fd9e:	f043 0310 	orr.w	r3, r3, #16
    fda2:	f882 3050 	strb.w	r3, [r2, #80]	; 0x50
    fda6:	4770      	bx	lr
    fda8:	40004200 	.word	0x40004200

0000fdac <am_hal_sysctrl_sleep>:
    fdac:	b510      	push	{r4, lr}
    fdae:	b082      	sub	sp, #8
    fdb0:	4604      	mov	r4, r0
    fdb2:	f7ff fdb1 	bl	f918 <am_hal_interrupt_master_disable>
    fdb6:	9001      	str	r0, [sp, #4]
    fdb8:	b124      	cbz	r4, fdc4 <am_hal_sysctrl_sleep+0x18>
    fdba:	4b12      	ldr	r3, [pc, #72]	; (fe04 <am_hal_sysctrl_sleep+0x58>)
    fdbc:	f8d3 3250 	ldr.w	r3, [r3, #592]	; 0x250
    fdc0:	07db      	lsls	r3, r3, #31
    fdc2:	d512      	bpl.n	fdea <am_hal_sysctrl_sleep+0x3e>
    fdc4:	4a10      	ldr	r2, [pc, #64]	; (fe08 <am_hal_sysctrl_sleep+0x5c>)
    fdc6:	6913      	ldr	r3, [r2, #16]
    fdc8:	f023 0304 	bic.w	r3, r3, #4
    fdcc:	6113      	str	r3, [r2, #16]
    fdce:	f3bf 8f4f 	dsb	sy
    fdd2:	4a0e      	ldr	r2, [pc, #56]	; (fe0c <am_hal_sysctrl_sleep+0x60>)
    fdd4:	4b0e      	ldr	r3, [pc, #56]	; (fe10 <am_hal_sysctrl_sleep+0x64>)
    fdd6:	6812      	ldr	r2, [r2, #0]
    fdd8:	601a      	str	r2, [r3, #0]
    fdda:	bf30      	wfi
    fddc:	f3bf 8f6f 	isb	sy
    fde0:	9801      	ldr	r0, [sp, #4]
    fde2:	f7ff fd9d 	bl	f920 <am_hal_interrupt_master_set>
    fde6:	b002      	add	sp, #8
    fde8:	bd10      	pop	{r4, pc}
    fdea:	4b0a      	ldr	r3, [pc, #40]	; (fe14 <am_hal_sysctrl_sleep+0x68>)
    fdec:	681a      	ldr	r2, [r3, #0]
    fdee:	b912      	cbnz	r2, fdf6 <am_hal_sysctrl_sleep+0x4a>
    fdf0:	4a09      	ldr	r2, [pc, #36]	; (fe18 <am_hal_sysctrl_sleep+0x6c>)
    fdf2:	6812      	ldr	r2, [r2, #0]
    fdf4:	601a      	str	r2, [r3, #0]
    fdf6:	4a04      	ldr	r2, [pc, #16]	; (fe08 <am_hal_sysctrl_sleep+0x5c>)
    fdf8:	6913      	ldr	r3, [r2, #16]
    fdfa:	f043 0304 	orr.w	r3, r3, #4
    fdfe:	6113      	str	r3, [r2, #16]
    fe00:	e7e5      	b.n	fdce <am_hal_sysctrl_sleep+0x22>
    fe02:	bf00      	nop
    fe04:	40020000 	.word	0x40020000
    fe08:	e000ed00 	.word	0xe000ed00
    fe0c:	5fff0000 	.word	0x5fff0000
    fe10:	10001c40 	.word	0x10001c40
    fe14:	10001c3c 	.word	0x10001c3c
    fe18:	4ffff000 	.word	0x4ffff000

0000fe1c <am_hal_uart_initialize>:
    fe1c:	2801      	cmp	r0, #1
    fe1e:	d901      	bls.n	fe24 <am_hal_uart_initialize+0x8>
    fe20:	2005      	movs	r0, #5
    fe22:	4770      	bx	lr
    fe24:	b169      	cbz	r1, fe42 <am_hal_uart_initialize+0x26>
    fe26:	b5f0      	push	{r4, r5, r6, r7, lr}
    fe28:	2264      	movs	r2, #100	; 0x64
    fe2a:	4e0e      	ldr	r6, [pc, #56]	; (fe64 <am_hal_uart_initialize+0x48>)
    fe2c:	fb02 f200 	mul.w	r2, r2, r0
    fe30:	18b4      	adds	r4, r6, r2
    fe32:	4603      	mov	r3, r0
    fe34:	78e0      	ldrb	r0, [r4, #3]
    fe36:	f3c0 0700 	ubfx	r7, r0, #0, #1
    fe3a:	b2fd      	uxtb	r5, r7
    fe3c:	b11d      	cbz	r5, fe46 <am_hal_uart_initialize+0x2a>
    fe3e:	2007      	movs	r0, #7
    fe40:	bdf0      	pop	{r4, r5, r6, r7, pc}
    fe42:	2006      	movs	r0, #6
    fe44:	4770      	bx	lr
    fe46:	f040 0001 	orr.w	r0, r0, #1
    fe4a:	70e0      	strb	r0, [r4, #3]
    fe4c:	58b0      	ldr	r0, [r6, r2]
    fe4e:	f8df e018 	ldr.w	lr, [pc, #24]	; fe68 <am_hal_uart_initialize+0x4c>
    fe52:	f36e 0017 	bfi	r0, lr, #0, #24
    fe56:	50b0      	str	r0, [r6, r2]
    fe58:	6263      	str	r3, [r4, #36]	; 0x24
    fe5a:	7127      	strb	r7, [r4, #4]
    fe5c:	6625      	str	r5, [r4, #96]	; 0x60
    fe5e:	4628      	mov	r0, r5
    fe60:	600c      	str	r4, [r1, #0]
    fe62:	bdf0      	pop	{r4, r5, r6, r7, pc}
    fe64:	10002590 	.word	0x10002590
    fe68:	00ea9e06 	.word	0x00ea9e06

0000fe6c <am_hal_uart_deinitialize>:
    fe6c:	b128      	cbz	r0, fe7a <am_hal_uart_deinitialize+0xe>
    fe6e:	6803      	ldr	r3, [r0, #0]
    fe70:	4a07      	ldr	r2, [pc, #28]	; (fe90 <am_hal_uart_deinitialize+0x24>)
    fe72:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    fe76:	4293      	cmp	r3, r2
    fe78:	d001      	beq.n	fe7e <am_hal_uart_deinitialize+0x12>
    fe7a:	2002      	movs	r0, #2
    fe7c:	4770      	bx	lr
    fe7e:	78c2      	ldrb	r2, [r0, #3]
    fe80:	2300      	movs	r3, #0
    fe82:	f36f 0200 	bfc	r2, #0, #1
    fe86:	70c2      	strb	r2, [r0, #3]
    fe88:	6243      	str	r3, [r0, #36]	; 0x24
    fe8a:	7103      	strb	r3, [r0, #4]
    fe8c:	4618      	mov	r0, r3
    fe8e:	4770      	bx	lr
    fe90:	01ea9e06 	.word	0x01ea9e06

0000fe94 <am_hal_uart_power_control>:
    fe94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    fe98:	6804      	ldr	r4, [r0, #0]
    fe9a:	4b36      	ldr	r3, [pc, #216]	; (ff74 <am_hal_uart_power_control+0xe0>)
    fe9c:	f024 447e 	bic.w	r4, r4, #4261412864	; 0xfe000000
    fea0:	429c      	cmp	r4, r3
    fea2:	b083      	sub	sp, #12
    fea4:	d003      	beq.n	feae <am_hal_uart_power_control+0x1a>
    fea6:	2002      	movs	r0, #2
    fea8:	b003      	add	sp, #12
    feaa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    feae:	6a47      	ldr	r7, [r0, #36]	; 0x24
    feb0:	4605      	mov	r5, r0
    feb2:	f107 0008 	add.w	r0, r7, #8
    feb6:	4691      	mov	r9, r2
    feb8:	460e      	mov	r6, r1
    feba:	fa5f f880 	uxtb.w	r8, r0
    febe:	b181      	cbz	r1, fee2 <am_hal_uart_power_control+0x4e>
    fec0:	2902      	cmp	r1, #2
    fec2:	d80c      	bhi.n	fede <am_hal_uart_power_control+0x4a>
    fec4:	b992      	cbnz	r2, feec <am_hal_uart_power_control+0x58>
    fec6:	f507 2780 	add.w	r7, r7, #262144	; 0x40000
    feca:	371c      	adds	r7, #28
    fecc:	033f      	lsls	r7, r7, #12
    fece:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    fed2:	647b      	str	r3, [r7, #68]	; 0x44
    fed4:	4640      	mov	r0, r8
    fed6:	f7ff fe3d 	bl	fb54 <am_hal_pwrctrl_periph_disable>
    feda:	2000      	movs	r0, #0
    fedc:	e7e4      	b.n	fea8 <am_hal_uart_power_control+0x14>
    fede:	2006      	movs	r0, #6
    fee0:	e7e2      	b.n	fea8 <am_hal_uart_power_control+0x14>
    fee2:	b322      	cbz	r2, ff2e <am_hal_uart_power_control+0x9a>
    fee4:	792b      	ldrb	r3, [r5, #4]
    fee6:	bb3b      	cbnz	r3, ff38 <am_hal_uart_power_control+0xa4>
    fee8:	2007      	movs	r0, #7
    feea:	e7dd      	b.n	fea8 <am_hal_uart_power_control+0x14>
    feec:	f7ff fd14 	bl	f918 <am_hal_interrupt_master_disable>
    fef0:	f507 2380 	add.w	r3, r7, #262144	; 0x40000
    fef4:	331c      	adds	r3, #28
    fef6:	031b      	lsls	r3, r3, #12
    fef8:	9001      	str	r0, [sp, #4]
    fefa:	6a1a      	ldr	r2, [r3, #32]
    fefc:	60aa      	str	r2, [r5, #8]
    fefe:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    ff00:	60ea      	str	r2, [r5, #12]
    ff02:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    ff04:	612a      	str	r2, [r5, #16]
    ff06:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    ff08:	616a      	str	r2, [r5, #20]
    ff0a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    ff0c:	61aa      	str	r2, [r5, #24]
    ff0e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    ff10:	61ea      	str	r2, [r5, #28]
    ff12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    ff14:	622b      	str	r3, [r5, #32]
    ff16:	2301      	movs	r3, #1
    ff18:	712b      	strb	r3, [r5, #4]
    ff1a:	9801      	ldr	r0, [sp, #4]
    ff1c:	f7ff fd00 	bl	f920 <am_hal_interrupt_master_set>
    ff20:	682b      	ldr	r3, [r5, #0]
    ff22:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    ff26:	42a3      	cmp	r3, r4
    ff28:	d1d4      	bne.n	fed4 <am_hal_uart_power_control+0x40>
    ff2a:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    ff2c:	e7cb      	b.n	fec6 <am_hal_uart_power_control+0x32>
    ff2e:	4640      	mov	r0, r8
    ff30:	f7ff fde6 	bl	fb00 <am_hal_pwrctrl_periph_enable>
    ff34:	4648      	mov	r0, r9
    ff36:	e7b7      	b.n	fea8 <am_hal_uart_power_control+0x14>
    ff38:	4640      	mov	r0, r8
    ff3a:	f7ff fde1 	bl	fb00 <am_hal_pwrctrl_periph_enable>
    ff3e:	f7ff fceb 	bl	f918 <am_hal_interrupt_master_disable>
    ff42:	f507 2380 	add.w	r3, r7, #262144	; 0x40000
    ff46:	331c      	adds	r3, #28
    ff48:	031b      	lsls	r3, r3, #12
    ff4a:	68aa      	ldr	r2, [r5, #8]
    ff4c:	9000      	str	r0, [sp, #0]
    ff4e:	621a      	str	r2, [r3, #32]
    ff50:	68ea      	ldr	r2, [r5, #12]
    ff52:	625a      	str	r2, [r3, #36]	; 0x24
    ff54:	692a      	ldr	r2, [r5, #16]
    ff56:	629a      	str	r2, [r3, #40]	; 0x28
    ff58:	696a      	ldr	r2, [r5, #20]
    ff5a:	62da      	str	r2, [r3, #44]	; 0x2c
    ff5c:	69aa      	ldr	r2, [r5, #24]
    ff5e:	631a      	str	r2, [r3, #48]	; 0x30
    ff60:	69ea      	ldr	r2, [r5, #28]
    ff62:	635a      	str	r2, [r3, #52]	; 0x34
    ff64:	6a2a      	ldr	r2, [r5, #32]
    ff66:	639a      	str	r2, [r3, #56]	; 0x38
    ff68:	9800      	ldr	r0, [sp, #0]
    ff6a:	712e      	strb	r6, [r5, #4]
    ff6c:	f7ff fcd8 	bl	f920 <am_hal_interrupt_master_set>
    ff70:	4630      	mov	r0, r6
    ff72:	e799      	b.n	fea8 <am_hal_uart_power_control+0x14>
    ff74:	01ea9e06 	.word	0x01ea9e06

0000ff78 <am_hal_uart_configure>:
    ff78:	6803      	ldr	r3, [r0, #0]
    ff7a:	4a84      	ldr	r2, [pc, #528]	; (1018c <am_hal_uart_configure+0x214>)
    ff7c:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    ff80:	4293      	cmp	r3, r2
    ff82:	d001      	beq.n	ff88 <am_hal_uart_configure+0x10>
    ff84:	2002      	movs	r0, #2
    ff86:	4770      	bx	lr
    ff88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    ff8c:	6a45      	ldr	r5, [r0, #36]	; 0x24
    ff8e:	f505 2580 	add.w	r5, r5, #262144	; 0x40000
    ff92:	351c      	adds	r5, #28
    ff94:	032d      	lsls	r5, r5, #12
    ff96:	2700      	movs	r7, #0
    ff98:	b084      	sub	sp, #16
    ff9a:	632f      	str	r7, [r5, #48]	; 0x30
    ff9c:	460e      	mov	r6, r1
    ff9e:	4604      	mov	r4, r0
    ffa0:	f7ff fcba 	bl	f918 <am_hal_interrupt_master_disable>
    ffa4:	9001      	str	r0, [sp, #4]
    ffa6:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    ffa8:	f043 0308 	orr.w	r3, r3, #8
    ffac:	862b      	strh	r3, [r5, #48]	; 0x30
    ffae:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    ffb0:	2201      	movs	r2, #1
    ffb2:	f362 1306 	bfi	r3, r2, #4, #3
    ffb6:	862b      	strh	r3, [r5, #48]	; 0x30
    ffb8:	9801      	ldr	r0, [sp, #4]
    ffba:	f7ff fcb1 	bl	f920 <am_hal_interrupt_master_set>
    ffbe:	f7ff fcab 	bl	f918 <am_hal_interrupt_master_disable>
    ffc2:	9002      	str	r0, [sp, #8]
    ffc4:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    ffc6:	f367 0300 	bfi	r3, r7, #0, #1
    ffca:	862b      	strh	r3, [r5, #48]	; 0x30
    ffcc:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    ffce:	f367 2349 	bfi	r3, r7, #9, #1
    ffd2:	862b      	strh	r3, [r5, #48]	; 0x30
    ffd4:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    ffd6:	f367 2308 	bfi	r3, r7, #8, #1
    ffda:	862b      	strh	r3, [r5, #48]	; 0x30
    ffdc:	9802      	ldr	r0, [sp, #8]
    ffde:	f7ff fc9f 	bl	f920 <am_hal_interrupt_master_set>
    ffe2:	4a6b      	ldr	r2, [pc, #428]	; (10190 <am_hal_uart_configure+0x218>)
    ffe4:	6833      	ldr	r3, [r6, #0]
    ffe6:	68d2      	ldr	r2, [r2, #12]
    ffe8:	b2d2      	uxtb	r2, r2
    ffea:	2a12      	cmp	r2, #18
    ffec:	d00b      	beq.n	10006 <am_hal_uart_configure+0x8e>
    ffee:	4a68      	ldr	r2, [pc, #416]	; (10190 <am_hal_uart_configure+0x218>)
    fff0:	68d2      	ldr	r2, [r2, #12]
    fff2:	b2d2      	uxtb	r2, r2
    fff4:	2a20      	cmp	r2, #32
    fff6:	d90a      	bls.n	1000e <am_hal_uart_configure+0x96>
    fff8:	4a66      	ldr	r2, [pc, #408]	; (10194 <am_hal_uart_configure+0x21c>)
    fffa:	4293      	cmp	r3, r2
    fffc:	d907      	bls.n	1000e <am_hal_uart_configure+0x96>
    fffe:	4866      	ldr	r0, [pc, #408]	; (10198 <am_hal_uart_configure+0x220>)
   10000:	b004      	add	sp, #16
   10002:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   10006:	f5b3 2f61 	cmp.w	r3, #921600	; 0xe1000
   1000a:	d8f8      	bhi.n	fffe <am_hal_uart_configure+0x86>
   1000c:	e7ef      	b.n	ffee <am_hal_uart_configure+0x76>
   1000e:	6b2a      	ldr	r2, [r5, #48]	; 0x30
   10010:	f3c2 1202 	ubfx	r2, r2, #4, #3
   10014:	3a01      	subs	r2, #1
   10016:	2a03      	cmp	r2, #3
   10018:	d852      	bhi.n	100c0 <am_hal_uart_configure+0x148>
   1001a:	e8df f002 	tbb	[pc, r2]
   1001e:	020f      	.short	0x020f
   10020:	1215      	.short	0x1215
   10022:	4a5e      	ldr	r2, [pc, #376]	; (1019c <am_hal_uart_configure+0x224>)
   10024:	495e      	ldr	r1, [pc, #376]	; (101a0 <am_hal_uart_configure+0x228>)
   10026:	011b      	lsls	r3, r3, #4
   10028:	fbb2 f2f3 	udiv	r2, r2, r3
   1002c:	fbb1 f3f3 	udiv	r3, r1, r3
   10030:	eba2 1283 	sub.w	r2, r2, r3, lsl #6
   10034:	b95b      	cbnz	r3, 1004e <am_hal_uart_configure+0xd6>
   10036:	6623      	str	r3, [r4, #96]	; 0x60
   10038:	4857      	ldr	r0, [pc, #348]	; (10198 <am_hal_uart_configure+0x220>)
   1003a:	e7e1      	b.n	10000 <am_hal_uart_configure+0x88>
   1003c:	4a59      	ldr	r2, [pc, #356]	; (101a4 <am_hal_uart_configure+0x22c>)
   1003e:	495a      	ldr	r1, [pc, #360]	; (101a8 <am_hal_uart_configure+0x230>)
   10040:	e7f1      	b.n	10026 <am_hal_uart_configure+0xae>
   10042:	4a5a      	ldr	r2, [pc, #360]	; (101ac <am_hal_uart_configure+0x234>)
   10044:	495a      	ldr	r1, [pc, #360]	; (101b0 <am_hal_uart_configure+0x238>)
   10046:	e7ee      	b.n	10026 <am_hal_uart_configure+0xae>
   10048:	4a5a      	ldr	r2, [pc, #360]	; (101b4 <am_hal_uart_configure+0x23c>)
   1004a:	495b      	ldr	r1, [pc, #364]	; (101b8 <am_hal_uart_configure+0x240>)
   1004c:	e7eb      	b.n	10026 <am_hal_uart_configure+0xae>
   1004e:	0890      	lsrs	r0, r2, #2
   10050:	626b      	str	r3, [r5, #36]	; 0x24
   10052:	eb00 1003 	add.w	r0, r0, r3, lsl #4
   10056:	626b      	str	r3, [r5, #36]	; 0x24
   10058:	fbb1 f1f0 	udiv	r1, r1, r0
   1005c:	62aa      	str	r2, [r5, #40]	; 0x28
   1005e:	6621      	str	r1, [r4, #96]	; 0x60
   10060:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
   10062:	f36f 338e 	bfc	r3, #14, #1
   10066:	862b      	strh	r3, [r5, #48]	; 0x30
   10068:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
   1006a:	f36f 33cf 	bfc	r3, #15, #1
   1006e:	862b      	strh	r3, [r5, #48]	; 0x30
   10070:	6b2a      	ldr	r2, [r5, #48]	; 0x30
   10072:	6933      	ldr	r3, [r6, #16]
   10074:	4313      	orrs	r3, r2
   10076:	632b      	str	r3, [r5, #48]	; 0x30
   10078:	6973      	ldr	r3, [r6, #20]
   1007a:	636b      	str	r3, [r5, #52]	; 0x34
   1007c:	6871      	ldr	r1, [r6, #4]
   1007e:	68b3      	ldr	r3, [r6, #8]
   10080:	68f2      	ldr	r2, [r6, #12]
   10082:	430b      	orrs	r3, r1
   10084:	f043 0310 	orr.w	r3, r3, #16
   10088:	4313      	orrs	r3, r2
   1008a:	62eb      	str	r3, [r5, #44]	; 0x2c
   1008c:	f7ff fc44 	bl	f918 <am_hal_interrupt_master_disable>
   10090:	9003      	str	r0, [sp, #12]
   10092:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
   10094:	f043 0301 	orr.w	r3, r3, #1
   10098:	862b      	strh	r3, [r5, #48]	; 0x30
   1009a:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
   1009c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   100a0:	862b      	strh	r3, [r5, #48]	; 0x30
   100a2:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
   100a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
   100a8:	862b      	strh	r3, [r5, #48]	; 0x30
   100aa:	9803      	ldr	r0, [sp, #12]
   100ac:	f7ff fc38 	bl	f920 <am_hal_interrupt_master_set>
   100b0:	6825      	ldr	r5, [r4, #0]
   100b2:	4b36      	ldr	r3, [pc, #216]	; (1018c <am_hal_uart_configure+0x214>)
   100b4:	f025 457e 	bic.w	r5, r5, #4261412864	; 0xfe000000
   100b8:	429d      	cmp	r5, r3
   100ba:	d005      	beq.n	100c8 <am_hal_uart_configure+0x150>
   100bc:	2000      	movs	r0, #0
   100be:	e79f      	b.n	10000 <am_hal_uart_configure+0x88>
   100c0:	2300      	movs	r3, #0
   100c2:	6623      	str	r3, [r4, #96]	; 0x60
   100c4:	483d      	ldr	r0, [pc, #244]	; (101bc <am_hal_uart_configure+0x244>)
   100c6:	e79b      	b.n	10000 <am_hal_uart_configure+0x88>
   100c8:	69b1      	ldr	r1, [r6, #24]
   100ca:	6a37      	ldr	r7, [r6, #32]
   100cc:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
   100d0:	b109      	cbz	r1, 100d6 <am_hal_uart_configure+0x15e>
   100d2:	69f3      	ldr	r3, [r6, #28]
   100d4:	bb3b      	cbnz	r3, 10126 <am_hal_uart_configure+0x1ae>
   100d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
   100d8:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
   100dc:	f103 021c 	add.w	r2, r3, #28
   100e0:	0312      	lsls	r2, r2, #12
   100e2:	2100      	movs	r1, #0
   100e4:	f884 1028 	strb.w	r1, [r4, #40]	; 0x28
   100e8:	6b91      	ldr	r1, [r2, #56]	; 0x38
   100ea:	f021 0120 	bic.w	r1, r1, #32
   100ee:	6391      	str	r1, [r2, #56]	; 0x38
   100f0:	b1b7      	cbz	r7, 10120 <am_hal_uart_configure+0x1a8>
   100f2:	f1b8 0f00 	cmp.w	r8, #0
   100f6:	d12e      	bne.n	10156 <am_hal_uart_configure+0x1de>
   100f8:	6823      	ldr	r3, [r4, #0]
   100fa:	4a24      	ldr	r2, [pc, #144]	; (1018c <am_hal_uart_configure+0x214>)
   100fc:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
   10100:	2100      	movs	r1, #0
   10102:	4293      	cmp	r3, r2
   10104:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
   10108:	d1d8      	bne.n	100bc <am_hal_uart_configure+0x144>
   1010a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1010c:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
   10110:	331c      	adds	r3, #28
   10112:	031b      	lsls	r3, r3, #12
   10114:	2000      	movs	r0, #0
   10116:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   10118:	f022 0250 	bic.w	r2, r2, #80	; 0x50
   1011c:	639a      	str	r2, [r3, #56]	; 0x38
   1011e:	e76f      	b.n	10000 <am_hal_uart_configure+0x88>
   10120:	f884 7044 	strb.w	r7, [r4, #68]	; 0x44
   10124:	e7f4      	b.n	10110 <am_hal_uart_configure+0x198>
   10126:	2201      	movs	r2, #1
   10128:	f884 2028 	strb.w	r2, [r4, #40]	; 0x28
   1012c:	f104 002c 	add.w	r0, r4, #44	; 0x2c
   10130:	f7ff fdae 	bl	fc90 <am_hal_queue_init>
   10134:	6823      	ldr	r3, [r4, #0]
   10136:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
   1013a:	42ab      	cmp	r3, r5
   1013c:	d1be      	bne.n	100bc <am_hal_uart_configure+0x144>
   1013e:	6a63      	ldr	r3, [r4, #36]	; 0x24
   10140:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
   10144:	331c      	adds	r3, #28
   10146:	031b      	lsls	r3, r3, #12
   10148:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   1014a:	f042 0220 	orr.w	r2, r2, #32
   1014e:	639a      	str	r2, [r3, #56]	; 0x38
   10150:	2f00      	cmp	r7, #0
   10152:	d1ce      	bne.n	100f2 <am_hal_uart_configure+0x17a>
   10154:	e7d0      	b.n	100f8 <am_hal_uart_configure+0x180>
   10156:	2201      	movs	r2, #1
   10158:	4643      	mov	r3, r8
   1015a:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
   1015e:	4639      	mov	r1, r7
   10160:	f104 0048 	add.w	r0, r4, #72	; 0x48
   10164:	f7ff fd94 	bl	fc90 <am_hal_queue_init>
   10168:	6823      	ldr	r3, [r4, #0]
   1016a:	4a08      	ldr	r2, [pc, #32]	; (1018c <am_hal_uart_configure+0x214>)
   1016c:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
   10170:	4293      	cmp	r3, r2
   10172:	d1a3      	bne.n	100bc <am_hal_uart_configure+0x144>
   10174:	6a63      	ldr	r3, [r4, #36]	; 0x24
   10176:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
   1017a:	331c      	adds	r3, #28
   1017c:	031b      	lsls	r3, r3, #12
   1017e:	2000      	movs	r0, #0
   10180:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   10182:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   10186:	639a      	str	r2, [r3, #56]	; 0x38
   10188:	e73a      	b.n	10000 <am_hal_uart_configure+0x88>
   1018a:	bf00      	nop
   1018c:	01ea9e06 	.word	0x01ea9e06
   10190:	40020000 	.word	0x40020000
   10194:	0016e360 	.word	0x0016e360
   10198:	08000003 	.word	0x08000003
   1019c:	2dc6c000 	.word	0x2dc6c000
   101a0:	00b71b00 	.word	0x00b71b00
   101a4:	5b8d8000 	.word	0x5b8d8000
   101a8:	016e3600 	.word	0x016e3600
   101ac:	0b71b000 	.word	0x0b71b000
   101b0:	002dc6c0 	.word	0x002dc6c0
   101b4:	16e36000 	.word	0x16e36000
   101b8:	005b8d80 	.word	0x005b8d80
   101bc:	08000002 	.word	0x08000002

000101c0 <am_hal_uart_transfer>:
   101c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   101c4:	680f      	ldr	r7, [r1, #0]
   101c6:	b091      	sub	sp, #68	; 0x44
   101c8:	4605      	mov	r5, r0
   101ca:	b13f      	cbz	r7, 101dc <am_hal_uart_transfer+0x1c>
   101cc:	2f01      	cmp	r7, #1
   101ce:	bf18      	it	ne
   101d0:	2707      	movne	r7, #7
   101d2:	d024      	beq.n	1021e <am_hal_uart_transfer+0x5e>
   101d4:	4638      	mov	r0, r7
   101d6:	b011      	add	sp, #68	; 0x44
   101d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   101dc:	f8d1 900c 	ldr.w	r9, [r1, #12]
   101e0:	690b      	ldr	r3, [r1, #16]
   101e2:	f8d1 a004 	ldr.w	sl, [r1, #4]
   101e6:	688e      	ldr	r6, [r1, #8]
   101e8:	9300      	str	r3, [sp, #0]
   101ea:	f1b9 0f00 	cmp.w	r9, #0
   101ee:	d031      	beq.n	10254 <am_hal_uart_transfer+0x94>
   101f0:	2e00      	cmp	r6, #0
   101f2:	f000 819c 	beq.w	1052e <am_hal_uart_transfer+0x36e>
   101f6:	2800      	cmp	r0, #0
   101f8:	f000 8097 	beq.w	1032a <am_hal_uart_transfer+0x16a>
   101fc:	6803      	ldr	r3, [r0, #0]
   101fe:	4aa9      	ldr	r2, [pc, #676]	; (104a4 <am_hal_uart_transfer+0x2e4>)
   10200:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
   10204:	4293      	cmp	r3, r2
   10206:	f000 8092 	beq.w	1032e <am_hal_uart_transfer+0x16e>
   1020a:	46b8      	mov	r8, r7
   1020c:	9b00      	ldr	r3, [sp, #0]
   1020e:	b10b      	cbz	r3, 10214 <am_hal_uart_transfer+0x54>
   10210:	f8c3 8000 	str.w	r8, [r3]
   10214:	2702      	movs	r7, #2
   10216:	4638      	mov	r0, r7
   10218:	b011      	add	sp, #68	; 0x44
   1021a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1021e:	1d0b      	adds	r3, r1, #4
   10220:	e893 0a88 	ldmia.w	r3, {r3, r7, r9, fp}
   10224:	f1b9 0f00 	cmp.w	r9, #0
   10228:	d043      	beq.n	102b2 <am_hal_uart_transfer+0xf2>
   1022a:	2f00      	cmp	r7, #0
   1022c:	f000 8185 	beq.w	1053a <am_hal_uart_transfer+0x37a>
   10230:	2800      	cmp	r0, #0
   10232:	f000 80eb 	beq.w	1040c <am_hal_uart_transfer+0x24c>
   10236:	6802      	ldr	r2, [r0, #0]
   10238:	499a      	ldr	r1, [pc, #616]	; (104a4 <am_hal_uart_transfer+0x2e4>)
   1023a:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
   1023e:	428a      	cmp	r2, r1
   10240:	f000 80e7 	beq.w	10412 <am_hal_uart_transfer+0x252>
   10244:	2600      	movs	r6, #0
   10246:	2702      	movs	r7, #2
   10248:	f1bb 0f00 	cmp.w	fp, #0
   1024c:	d0c2      	beq.n	101d4 <am_hal_uart_transfer+0x14>
   1024e:	f8cb 6000 	str.w	r6, [fp]
   10252:	e7bf      	b.n	101d4 <am_hal_uart_transfer+0x14>
   10254:	2800      	cmp	r0, #0
   10256:	d0dd      	beq.n	10214 <am_hal_uart_transfer+0x54>
   10258:	6803      	ldr	r3, [r0, #0]
   1025a:	4a92      	ldr	r2, [pc, #584]	; (104a4 <am_hal_uart_transfer+0x2e4>)
   1025c:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
   10260:	4293      	cmp	r3, r2
   10262:	d1d7      	bne.n	10214 <am_hal_uart_transfer+0x54>
   10264:	9b00      	ldr	r3, [sp, #0]
   10266:	b10b      	cbz	r3, 1026c <am_hal_uart_transfer+0xac>
   10268:	f8c3 9000 	str.w	r9, [r3]
   1026c:	b1fe      	cbz	r6, 102ae <am_hal_uart_transfer+0xee>
   1026e:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
   10272:	2b00      	cmp	r3, #0
   10274:	f040 8165 	bne.w	10542 <am_hal_uart_transfer+0x382>
   10278:	6a69      	ldr	r1, [r5, #36]	; 0x24
   1027a:	f501 2180 	add.w	r1, r1, #262144	; 0x40000
   1027e:	311c      	adds	r1, #28
   10280:	0309      	lsls	r1, r1, #12
   10282:	698a      	ldr	r2, [r1, #24]
   10284:	f3c2 1240 	ubfx	r2, r2, #5, #1
   10288:	2a00      	cmp	r2, #0
   1028a:	f040 818d 	bne.w	105a8 <am_hal_uart_transfer+0x3e8>
   1028e:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
   10292:	e003      	b.n	1029c <am_hal_uart_transfer+0xdc>
   10294:	6988      	ldr	r0, [r1, #24]
   10296:	0680      	lsls	r0, r0, #26
   10298:	f100 8151 	bmi.w	1053e <am_hal_uart_transfer+0x37e>
   1029c:	3201      	adds	r2, #1
   1029e:	f813 0f01 	ldrb.w	r0, [r3, #1]!
   102a2:	6008      	str	r0, [r1, #0]
   102a4:	4296      	cmp	r6, r2
   102a6:	d1f5      	bne.n	10294 <am_hal_uart_transfer+0xd4>
   102a8:	9b00      	ldr	r3, [sp, #0]
   102aa:	b103      	cbz	r3, 102ae <am_hal_uart_transfer+0xee>
   102ac:	601e      	str	r6, [r3, #0]
   102ae:	2700      	movs	r7, #0
   102b0:	e790      	b.n	101d4 <am_hal_uart_transfer+0x14>
   102b2:	2800      	cmp	r0, #0
   102b4:	d0ae      	beq.n	10214 <am_hal_uart_transfer+0x54>
   102b6:	6802      	ldr	r2, [r0, #0]
   102b8:	497a      	ldr	r1, [pc, #488]	; (104a4 <am_hal_uart_transfer+0x2e4>)
   102ba:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
   102be:	428a      	cmp	r2, r1
   102c0:	d1a8      	bne.n	10214 <am_hal_uart_transfer+0x54>
   102c2:	f1bb 0f00 	cmp.w	fp, #0
   102c6:	d001      	beq.n	102cc <am_hal_uart_transfer+0x10c>
   102c8:	f8cb 9000 	str.w	r9, [fp]
   102cc:	2f00      	cmp	r7, #0
   102ce:	d0ee      	beq.n	102ae <am_hal_uart_transfer+0xee>
   102d0:	f895 4044 	ldrb.w	r4, [r5, #68]	; 0x44
   102d4:	2c00      	cmp	r4, #0
   102d6:	f040 816c 	bne.w	105b2 <am_hal_uart_transfer+0x3f2>
   102da:	6a6a      	ldr	r2, [r5, #36]	; 0x24
   102dc:	f502 2280 	add.w	r2, r2, #262144	; 0x40000
   102e0:	321c      	adds	r2, #28
   102e2:	0312      	lsls	r2, r2, #12
   102e4:	6990      	ldr	r0, [r2, #24]
   102e6:	f3c0 1000 	ubfx	r0, r0, #4, #1
   102ea:	2800      	cmp	r0, #0
   102ec:	f040 819d 	bne.w	1062a <am_hal_uart_transfer+0x46a>
   102f0:	6811      	ldr	r1, [r2, #0]
   102f2:	f411 6470 	ands.w	r4, r1, #3840	; 0xf00
   102f6:	bf08      	it	eq
   102f8:	f103 33ff 	addeq.w	r3, r3, #4294967295	; 0xffffffff
   102fc:	d008      	beq.n	10310 <am_hal_uart_transfer+0x150>
   102fe:	e190      	b.n	10622 <am_hal_uart_transfer+0x462>
   10300:	6991      	ldr	r1, [r2, #24]
   10302:	06c8      	lsls	r0, r1, #27
   10304:	d409      	bmi.n	1031a <am_hal_uart_transfer+0x15a>
   10306:	6811      	ldr	r1, [r2, #0]
   10308:	f411 6f70 	tst.w	r1, #3840	; 0xf00
   1030c:	f040 814e 	bne.w	105ac <am_hal_uart_transfer+0x3ec>
   10310:	3401      	adds	r4, #1
   10312:	42a7      	cmp	r7, r4
   10314:	f803 1f01 	strb.w	r1, [r3, #1]!
   10318:	d1f2      	bne.n	10300 <am_hal_uart_transfer+0x140>
   1031a:	2700      	movs	r7, #0
   1031c:	f1bb 0f00 	cmp.w	fp, #0
   10320:	f43f af58 	beq.w	101d4 <am_hal_uart_transfer+0x14>
   10324:	f8cb 4000 	str.w	r4, [fp]
   10328:	e754      	b.n	101d4 <am_hal_uart_transfer+0x14>
   1032a:	4680      	mov	r8, r0
   1032c:	e76e      	b.n	1020c <am_hal_uart_transfer+0x4c>
   1032e:	9301      	str	r3, [sp, #4]
   10330:	4651      	mov	r1, sl
   10332:	46bb      	mov	fp, r7
   10334:	46b8      	mov	r8, r7
   10336:	f895 2028 	ldrb.w	r2, [r5, #40]	; 0x28
   1033a:	b9f2      	cbnz	r2, 1037a <am_hal_uart_transfer+0x1ba>
   1033c:	6a6a      	ldr	r2, [r5, #36]	; 0x24
   1033e:	b19e      	cbz	r6, 10368 <am_hal_uart_transfer+0x1a8>
   10340:	f502 2280 	add.w	r2, r2, #262144	; 0x40000
   10344:	321c      	adds	r2, #28
   10346:	0312      	lsls	r2, r2, #12
   10348:	3901      	subs	r1, #1
   1034a:	6994      	ldr	r4, [r2, #24]
   1034c:	f3c4 1440 	ubfx	r4, r4, #5, #1
   10350:	b11c      	cbz	r4, 1035a <am_hal_uart_transfer+0x19a>
   10352:	e047      	b.n	103e4 <am_hal_uart_transfer+0x224>
   10354:	6993      	ldr	r3, [r2, #24]
   10356:	069b      	lsls	r3, r3, #26
   10358:	d441      	bmi.n	103de <am_hal_uart_transfer+0x21e>
   1035a:	3401      	adds	r4, #1
   1035c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
   10360:	6013      	str	r3, [r2, #0]
   10362:	42b4      	cmp	r4, r6
   10364:	d1f6      	bne.n	10354 <am_hal_uart_transfer+0x194>
   10366:	44a0      	add	r8, r4
   10368:	9b00      	ldr	r3, [sp, #0]
   1036a:	2b00      	cmp	r3, #0
   1036c:	d09f      	beq.n	102ae <am_hal_uart_transfer+0xee>
   1036e:	4638      	mov	r0, r7
   10370:	f8c3 8000 	str.w	r8, [r3]
   10374:	b011      	add	sp, #68	; 0x44
   10376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1037a:	6baa      	ldr	r2, [r5, #56]	; 0x38
   1037c:	6b6c      	ldr	r4, [r5, #52]	; 0x34
   1037e:	1b14      	subs	r4, r2, r4
   10380:	42b4      	cmp	r4, r6
   10382:	f105 032c 	add.w	r3, r5, #44	; 0x2c
   10386:	bf28      	it	cs
   10388:	4634      	movcs	r4, r6
   1038a:	4622      	mov	r2, r4
   1038c:	4618      	mov	r0, r3
   1038e:	9302      	str	r3, [sp, #8]
   10390:	f7ff fc8a 	bl	fca8 <am_hal_queue_item_add>
   10394:	6a6b      	ldr	r3, [r5, #36]	; 0x24
   10396:	9303      	str	r3, [sp, #12]
   10398:	f7ff fabe 	bl	f918 <am_hal_interrupt_master_disable>
   1039c:	9b03      	ldr	r3, [sp, #12]
   1039e:	9008      	str	r0, [sp, #32]
   103a0:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
   103a4:	331c      	adds	r3, #28
   103a6:	031b      	lsls	r3, r3, #12
   103a8:	9303      	str	r3, [sp, #12]
   103aa:	e00d      	b.n	103c8 <am_hal_uart_transfer+0x208>
   103ac:	f7ff fcb4 	bl	fd18 <am_hal_queue_item_get>
   103b0:	b190      	cbz	r0, 103d8 <am_hal_uart_transfer+0x218>
   103b2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
   103b4:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
   103b8:	331c      	adds	r3, #28
   103ba:	031b      	lsls	r3, r3, #12
   103bc:	699a      	ldr	r2, [r3, #24]
   103be:	0692      	lsls	r2, r2, #26
   103c0:	bf5c      	itt	pl
   103c2:	f89d 201c 	ldrbpl.w	r2, [sp, #28]
   103c6:	601a      	strpl	r2, [r3, #0]
   103c8:	9b03      	ldr	r3, [sp, #12]
   103ca:	9802      	ldr	r0, [sp, #8]
   103cc:	699b      	ldr	r3, [r3, #24]
   103ce:	069b      	lsls	r3, r3, #26
   103d0:	f04f 0201 	mov.w	r2, #1
   103d4:	a907      	add	r1, sp, #28
   103d6:	d5e9      	bpl.n	103ac <am_hal_uart_transfer+0x1ec>
   103d8:	9808      	ldr	r0, [sp, #32]
   103da:	f7ff faa1 	bl	f920 <am_hal_interrupt_master_set>
   103de:	1b36      	subs	r6, r6, r4
   103e0:	44a0      	add	r8, r4
   103e2:	d0c1      	beq.n	10368 <am_hal_uart_transfer+0x1a8>
   103e4:	2010      	movs	r0, #16
   103e6:	f7ff f88d 	bl	f504 <am_hal_flash_delay>
   103ea:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
   103ee:	d001      	beq.n	103f4 <am_hal_uart_transfer+0x234>
   103f0:	f10b 0b01 	add.w	fp, fp, #1
   103f4:	45d9      	cmp	r9, fp
   103f6:	d9b7      	bls.n	10368 <am_hal_uart_transfer+0x1a8>
   103f8:	682a      	ldr	r2, [r5, #0]
   103fa:	9b01      	ldr	r3, [sp, #4]
   103fc:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
   10400:	429a      	cmp	r2, r3
   10402:	eb0a 0108 	add.w	r1, sl, r8
   10406:	f47f af01 	bne.w	1020c <am_hal_uart_transfer+0x4c>
   1040a:	e794      	b.n	10336 <am_hal_uart_transfer+0x176>
   1040c:	4606      	mov	r6, r0
   1040e:	2702      	movs	r7, #2
   10410:	e71a      	b.n	10248 <am_hal_uart_transfer+0x88>
   10412:	9200      	str	r2, [sp, #0]
   10414:	f100 0248 	add.w	r2, r0, #72	; 0x48
   10418:	f04f 0a00 	mov.w	sl, #0
   1041c:	9202      	str	r2, [sp, #8]
   1041e:	465a      	mov	r2, fp
   10420:	4698      	mov	r8, r3
   10422:	469b      	mov	fp, r3
   10424:	4656      	mov	r6, sl
   10426:	4613      	mov	r3, r2
   10428:	f895 2044 	ldrb.w	r2, [r5, #68]	; 0x44
   1042c:	2a00      	cmp	r2, #0
   1042e:	d152      	bne.n	104d6 <am_hal_uart_transfer+0x316>
   10430:	6a69      	ldr	r1, [r5, #36]	; 0x24
   10432:	b3a7      	cbz	r7, 1049e <am_hal_uart_transfer+0x2de>
   10434:	f501 2180 	add.w	r1, r1, #262144	; 0x40000
   10438:	311c      	adds	r1, #28
   1043a:	0309      	lsls	r1, r1, #12
   1043c:	698a      	ldr	r2, [r1, #24]
   1043e:	06d0      	lsls	r0, r2, #27
   10440:	d432      	bmi.n	104a8 <am_hal_uart_transfer+0x2e8>
   10442:	680a      	ldr	r2, [r1, #0]
   10444:	f412 6470 	ands.w	r4, r2, #3840	; 0xf00
   10448:	f040 80aa 	bne.w	105a0 <am_hal_uart_transfer+0x3e0>
   1044c:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
   10450:	e006      	b.n	10460 <am_hal_uart_transfer+0x2a0>
   10452:	698a      	ldr	r2, [r1, #24]
   10454:	06d2      	lsls	r2, r2, #27
   10456:	d41f      	bmi.n	10498 <am_hal_uart_transfer+0x2d8>
   10458:	680a      	ldr	r2, [r1, #0]
   1045a:	f412 6f70 	tst.w	r2, #3840	; 0xf00
   1045e:	d161      	bne.n	10524 <am_hal_uart_transfer+0x364>
   10460:	3401      	adds	r4, #1
   10462:	42bc      	cmp	r4, r7
   10464:	f808 2f01 	strb.w	r2, [r8, #1]!
   10468:	d1f3      	bne.n	10452 <am_hal_uart_transfer+0x292>
   1046a:	469b      	mov	fp, r3
   1046c:	4426      	add	r6, r4
   1046e:	f1bb 0f00 	cmp.w	fp, #0
   10472:	f43f af1c 	beq.w	102ae <am_hal_uart_transfer+0xee>
   10476:	f8cb 6000 	str.w	r6, [fp]
   1047a:	2700      	movs	r7, #0
   1047c:	e6aa      	b.n	101d4 <am_hal_uart_transfer+0x14>
   1047e:	9807      	ldr	r0, [sp, #28]
   10480:	f7ff fa4e 	bl	f920 <am_hal_interrupt_master_set>
   10484:	6d2c      	ldr	r4, [r5, #80]	; 0x50
   10486:	9802      	ldr	r0, [sp, #8]
   10488:	42bc      	cmp	r4, r7
   1048a:	bf28      	it	cs
   1048c:	463c      	movcs	r4, r7
   1048e:	4641      	mov	r1, r8
   10490:	4622      	mov	r2, r4
   10492:	f7ff fc41 	bl	fd18 <am_hal_queue_item_get>
   10496:	9b01      	ldr	r3, [sp, #4]
   10498:	1b3f      	subs	r7, r7, r4
   1049a:	4426      	add	r6, r4
   1049c:	d104      	bne.n	104a8 <am_hal_uart_transfer+0x2e8>
   1049e:	469b      	mov	fp, r3
   104a0:	e7e5      	b.n	1046e <am_hal_uart_transfer+0x2ae>
   104a2:	bf00      	nop
   104a4:	01ea9e06 	.word	0x01ea9e06
   104a8:	2010      	movs	r0, #16
   104aa:	9301      	str	r3, [sp, #4]
   104ac:	f7ff f82a 	bl	f504 <am_hal_flash_delay>
   104b0:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
   104b4:	9b01      	ldr	r3, [sp, #4]
   104b6:	d001      	beq.n	104bc <am_hal_uart_transfer+0x2fc>
   104b8:	f10a 0a01 	add.w	sl, sl, #1
   104bc:	45d1      	cmp	r9, sl
   104be:	d9ee      	bls.n	1049e <am_hal_uart_transfer+0x2de>
   104c0:	682a      	ldr	r2, [r5, #0]
   104c2:	9900      	ldr	r1, [sp, #0]
   104c4:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
   104c8:	428a      	cmp	r2, r1
   104ca:	eb0b 0806 	add.w	r8, fp, r6
   104ce:	d0ab      	beq.n	10428 <am_hal_uart_transfer+0x268>
   104d0:	469b      	mov	fp, r3
   104d2:	2702      	movs	r7, #2
   104d4:	e6b8      	b.n	10248 <am_hal_uart_transfer+0x88>
   104d6:	9301      	str	r3, [sp, #4]
   104d8:	f7ff fa1e 	bl	f918 <am_hal_interrupt_master_disable>
   104dc:	6a6a      	ldr	r2, [r5, #36]	; 0x24
   104de:	9007      	str	r0, [sp, #28]
   104e0:	f502 2080 	add.w	r0, r2, #262144	; 0x40000
   104e4:	301c      	adds	r0, #28
   104e6:	9b01      	ldr	r3, [sp, #4]
   104e8:	0300      	lsls	r0, r0, #12
   104ea:	ac08      	add	r4, sp, #32
   104ec:	2200      	movs	r2, #0
   104ee:	6981      	ldr	r1, [r0, #24]
   104f0:	06c9      	lsls	r1, r1, #27
   104f2:	d409      	bmi.n	10508 <am_hal_uart_transfer+0x348>
   104f4:	6801      	ldr	r1, [r0, #0]
   104f6:	f411 6f70 	tst.w	r1, #3840	; 0xf00
   104fa:	f102 0201 	add.w	r2, r2, #1
   104fe:	d118      	bne.n	10532 <am_hal_uart_transfer+0x372>
   10500:	2a20      	cmp	r2, #32
   10502:	f804 1b01 	strb.w	r1, [r4], #1
   10506:	d1f2      	bne.n	104ee <am_hal_uart_transfer+0x32e>
   10508:	a908      	add	r1, sp, #32
   1050a:	9802      	ldr	r0, [sp, #8]
   1050c:	9301      	str	r3, [sp, #4]
   1050e:	f7ff fbcb 	bl	fca8 <am_hal_queue_item_add>
   10512:	9b01      	ldr	r3, [sp, #4]
   10514:	2800      	cmp	r0, #0
   10516:	d1b2      	bne.n	1047e <am_hal_uart_transfer+0x2be>
   10518:	4f45      	ldr	r7, [pc, #276]	; (10630 <am_hal_uart_transfer+0x470>)
   1051a:	469b      	mov	fp, r3
   1051c:	9807      	ldr	r0, [sp, #28]
   1051e:	f7ff f9ff 	bl	f920 <am_hal_interrupt_master_set>
   10522:	e691      	b.n	10248 <am_hal_uart_transfer+0x88>
   10524:	469b      	mov	fp, r3
   10526:	4426      	add	r6, r4
   10528:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
   1052c:	e68c      	b.n	10248 <am_hal_uart_transfer+0x88>
   1052e:	46b8      	mov	r8, r7
   10530:	e71a      	b.n	10368 <am_hal_uart_transfer+0x1a8>
   10532:	469b      	mov	fp, r3
   10534:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
   10538:	e7f0      	b.n	1051c <am_hal_uart_transfer+0x35c>
   1053a:	463e      	mov	r6, r7
   1053c:	e797      	b.n	1046e <am_hal_uart_transfer+0x2ae>
   1053e:	4616      	mov	r6, r2
   10540:	e6b2      	b.n	102a8 <am_hal_uart_transfer+0xe8>
   10542:	6b6a      	ldr	r2, [r5, #52]	; 0x34
   10544:	6bab      	ldr	r3, [r5, #56]	; 0x38
   10546:	1a9b      	subs	r3, r3, r2
   10548:	429e      	cmp	r6, r3
   1054a:	bf28      	it	cs
   1054c:	461e      	movcs	r6, r3
   1054e:	f105 042c 	add.w	r4, r5, #44	; 0x2c
   10552:	4651      	mov	r1, sl
   10554:	4632      	mov	r2, r6
   10556:	4620      	mov	r0, r4
   10558:	f7ff fba6 	bl	fca8 <am_hal_queue_item_add>
   1055c:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   1055e:	f7ff f9db 	bl	f918 <am_hal_interrupt_master_disable>
   10562:	f507 2780 	add.w	r7, r7, #262144	; 0x40000
   10566:	371c      	adds	r7, #28
   10568:	033f      	lsls	r7, r7, #12
   1056a:	9005      	str	r0, [sp, #20]
   1056c:	e00d      	b.n	1058a <am_hal_uart_transfer+0x3ca>
   1056e:	f7ff fbd3 	bl	fd18 <am_hal_queue_item_get>
   10572:	b188      	cbz	r0, 10598 <am_hal_uart_transfer+0x3d8>
   10574:	6a6b      	ldr	r3, [r5, #36]	; 0x24
   10576:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
   1057a:	331c      	adds	r3, #28
   1057c:	031b      	lsls	r3, r3, #12
   1057e:	699a      	ldr	r2, [r3, #24]
   10580:	0692      	lsls	r2, r2, #26
   10582:	bf5c      	itt	pl
   10584:	f89d 2020 	ldrbpl.w	r2, [sp, #32]
   10588:	601a      	strpl	r2, [r3, #0]
   1058a:	69bb      	ldr	r3, [r7, #24]
   1058c:	069b      	lsls	r3, r3, #26
   1058e:	f04f 0201 	mov.w	r2, #1
   10592:	a908      	add	r1, sp, #32
   10594:	4620      	mov	r0, r4
   10596:	d5ea      	bpl.n	1056e <am_hal_uart_transfer+0x3ae>
   10598:	9805      	ldr	r0, [sp, #20]
   1059a:	f7ff f9c1 	bl	f920 <am_hal_interrupt_master_set>
   1059e:	e683      	b.n	102a8 <am_hal_uart_transfer+0xe8>
   105a0:	469b      	mov	fp, r3
   105a2:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
   105a6:	e64f      	b.n	10248 <am_hal_uart_transfer+0x88>
   105a8:	461e      	mov	r6, r3
   105aa:	e67d      	b.n	102a8 <am_hal_uart_transfer+0xe8>
   105ac:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
   105b0:	e6b4      	b.n	1031c <am_hal_uart_transfer+0x15c>
   105b2:	9300      	str	r3, [sp, #0]
   105b4:	f7ff f9b0 	bl	f918 <am_hal_interrupt_master_disable>
   105b8:	6a6a      	ldr	r2, [r5, #36]	; 0x24
   105ba:	9006      	str	r0, [sp, #24]
   105bc:	f502 2280 	add.w	r2, r2, #262144	; 0x40000
   105c0:	321c      	adds	r2, #28
   105c2:	0311      	lsls	r1, r2, #12
   105c4:	a808      	add	r0, sp, #32
   105c6:	2200      	movs	r2, #0
   105c8:	9b00      	ldr	r3, [sp, #0]
   105ca:	e009      	b.n	105e0 <am_hal_uart_transfer+0x420>
   105cc:	680c      	ldr	r4, [r1, #0]
   105ce:	f414 6f70 	tst.w	r4, #3840	; 0xf00
   105d2:	f102 0201 	add.w	r2, r2, #1
   105d6:	d121      	bne.n	1061c <am_hal_uart_transfer+0x45c>
   105d8:	2a20      	cmp	r2, #32
   105da:	f800 4b01 	strb.w	r4, [r0], #1
   105de:	d002      	beq.n	105e6 <am_hal_uart_transfer+0x426>
   105e0:	698c      	ldr	r4, [r1, #24]
   105e2:	06e4      	lsls	r4, r4, #27
   105e4:	d5f2      	bpl.n	105cc <am_hal_uart_transfer+0x40c>
   105e6:	f105 0648 	add.w	r6, r5, #72	; 0x48
   105ea:	a908      	add	r1, sp, #32
   105ec:	4630      	mov	r0, r6
   105ee:	9300      	str	r3, [sp, #0]
   105f0:	f7ff fb5a 	bl	fca8 <am_hal_queue_item_add>
   105f4:	b920      	cbnz	r0, 10600 <am_hal_uart_transfer+0x440>
   105f6:	4f0e      	ldr	r7, [pc, #56]	; (10630 <am_hal_uart_transfer+0x470>)
   105f8:	9806      	ldr	r0, [sp, #24]
   105fa:	f7ff f991 	bl	f920 <am_hal_interrupt_master_set>
   105fe:	e5e9      	b.n	101d4 <am_hal_uart_transfer+0x14>
   10600:	9806      	ldr	r0, [sp, #24]
   10602:	f7ff f98d 	bl	f920 <am_hal_interrupt_master_set>
   10606:	6d2c      	ldr	r4, [r5, #80]	; 0x50
   10608:	9b00      	ldr	r3, [sp, #0]
   1060a:	42bc      	cmp	r4, r7
   1060c:	bf28      	it	cs
   1060e:	463c      	movcs	r4, r7
   10610:	4619      	mov	r1, r3
   10612:	4630      	mov	r0, r6
   10614:	4622      	mov	r2, r4
   10616:	f7ff fb7f 	bl	fd18 <am_hal_queue_item_get>
   1061a:	e67e      	b.n	1031a <am_hal_uart_transfer+0x15a>
   1061c:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
   10620:	e7ea      	b.n	105f8 <am_hal_uart_transfer+0x438>
   10622:	4604      	mov	r4, r0
   10624:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
   10628:	e678      	b.n	1031c <am_hal_uart_transfer+0x15c>
   1062a:	4627      	mov	r7, r4
   1062c:	e676      	b.n	1031c <am_hal_uart_transfer+0x15c>
   1062e:	bf00      	nop
   10630:	08000001 	.word	0x08000001

00010634 <am_hal_uart_tx_flush>:
   10634:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
   10638:	b570      	push	{r4, r5, r6, lr}
   1063a:	4604      	mov	r4, r0
   1063c:	6a45      	ldr	r5, [r0, #36]	; 0x24
   1063e:	b15b      	cbz	r3, 10658 <am_hal_uart_tx_flush+0x24>
   10640:	6b43      	ldr	r3, [r0, #52]	; 0x34
   10642:	b14b      	cbz	r3, 10658 <am_hal_uart_tx_flush+0x24>
   10644:	4e0e      	ldr	r6, [pc, #56]	; (10680 <am_hal_uart_tx_flush+0x4c>)
   10646:	6e20      	ldr	r0, [r4, #96]	; 0x60
   10648:	fbb6 f0f0 	udiv	r0, r6, r0
   1064c:	0100      	lsls	r0, r0, #4
   1064e:	f7fe ff59 	bl	f504 <am_hal_flash_delay>
   10652:	6b63      	ldr	r3, [r4, #52]	; 0x34
   10654:	2b00      	cmp	r3, #0
   10656:	d1f6      	bne.n	10646 <am_hal_uart_tx_flush+0x12>
   10658:	f505 2580 	add.w	r5, r5, #262144	; 0x40000
   1065c:	351c      	adds	r5, #28
   1065e:	032d      	lsls	r5, r5, #12
   10660:	69ab      	ldr	r3, [r5, #24]
   10662:	071a      	lsls	r2, r3, #28
   10664:	d509      	bpl.n	1067a <am_hal_uart_tx_flush+0x46>
   10666:	4e06      	ldr	r6, [pc, #24]	; (10680 <am_hal_uart_tx_flush+0x4c>)
   10668:	6e20      	ldr	r0, [r4, #96]	; 0x60
   1066a:	fbb6 f0f0 	udiv	r0, r6, r0
   1066e:	0100      	lsls	r0, r0, #4
   10670:	f7fe ff48 	bl	f504 <am_hal_flash_delay>
   10674:	69ab      	ldr	r3, [r5, #24]
   10676:	071b      	lsls	r3, r3, #28
   10678:	d4f6      	bmi.n	10668 <am_hal_uart_tx_flush+0x34>
   1067a:	2000      	movs	r0, #0
   1067c:	bd70      	pop	{r4, r5, r6, pc}
   1067e:	bf00      	nop
   10680:	00b71b00 	.word	0x00b71b00
   10684:	00000004 	.word	0x00000004
   10688:	00000020 	.word	0x00000020
   1068c:	00000020 	.word	0x00000020
   10690:	00000002 	.word	0x00000002
   10694:	00000000 	.word	0x00000000
   10698:	00000032 	.word	0x00000032
   1069c:	00010101 	.word	0x00010101
   106a0:	72617053 	.word	0x72617053
   106a4:	6e75466b 	.word	0x6e75466b
   106a8:	67644520 	.word	0x67644520
   106ac:	6f422065 	.word	0x6f422065
   106b0:	20647261 	.word	0x20647261
   106b4:	74736554 	.word	0x74736554
   106b8:	0000000a 	.word	0x0000000a
   106bc:	313a3230 	.word	0x313a3230
   106c0:	30313a30 	.word	0x30313a30
   106c4:	00000000 	.word	0x00000000
   106c8:	20626546 	.word	0x20626546
   106cc:	32203432 	.word	0x32203432
   106d0:	00303230 	.word	0x00303230
   106d4:	706d6f43 	.word	0x706d6f43
   106d8:	64656c69 	.word	0x64656c69
   106dc:	206e6f20 	.word	0x206e6f20
   106e0:	202c7325 	.word	0x202c7325
   106e4:	0a0a7325 	.word	0x0a0a7325
   106e8:	00000000 	.word	0x00000000
   106ec:	72617053 	.word	0x72617053
   106f0:	6e75466b 	.word	0x6e75466b
   106f4:	6e655420 	.word	0x6e655420
   106f8:	66726f73 	.word	0x66726f73
   106fc:	20776f6c 	.word	0x20776f6c
   10700:	75626544 	.word	0x75626544
   10704:	754f2067 	.word	0x754f2067
   10708:	74757074 	.word	0x74757074
   1070c:	41552820 	.word	0x41552820
   10710:	0d295452 	.word	0x0d295452
   10714:	0000000a 	.word	0x0000000a
   10718:	6c6c6548 	.word	0x6c6c6548
   1071c:	55202c6f 	.word	0x55202c6f
   10720:	21545241 	.word	0x21545241
   10724:	00000a0d 	.word	0x00000a0d
   10728:	75626564 	.word	0x75626564
   1072c:	203d2067 	.word	0x203d2067
   10730:	70206425 	.word	0x70206425
   10734:	7265776f 	.word	0x7265776f
   10738:	75626564 	.word	0x75626564
   1073c:	203d2067 	.word	0x203d2067
   10740:	63206425 	.word	0x63206425
   10744:	69666e6f 	.word	0x69666e6f
   10748:	62654467 	.word	0x62654467
   1074c:	3d206775 	.word	0x3d206775
   10750:	20642520 	.word	0x20642520
   10754:	746f6f62 	.word	0x746f6f62
   10758:	75626544 	.word	0x75626544
   1075c:	203d2067 	.word	0x203d2067
   10760:	70206425 	.word	0x70206425
   10764:	7265776f 	.word	0x7265776f
   10768:	20746573 	.word	0x20746573
   1076c:	6425203d 	.word	0x6425203d
   10770:	000a0d20 	.word	0x000a0d20
   10774:	65746e69 	.word	0x65746e69
   10778:	70757272 	.word	0x70757272
   1077c:	756f4374 	.word	0x756f4374
   10780:	7265746e 	.word	0x7265746e
   10784:	25203d20 	.word	0x25203d20
   10788:	00000064 	.word	0x00000064
   1078c:	0a0a0a0a 	.word	0x0a0a0a0a
   10790:	0a0a0a0a 	.word	0x0a0a0a0a
   10794:	0a0a0a0a 	.word	0x0a0a0a0a
   10798:	0a0a0a0a 	.word	0x0a0a0a0a
   1079c:	00000a0a 	.word	0x00000a0a
   107a0:	6f727245 	.word	0x6f727245
   107a4:	65722072 	.word	0x65722072
   107a8:	6e696461 	.word	0x6e696461
   107ac:	44412067 	.word	0x44412067
   107b0:	6e692043 	.word	0x6e692043
   107b4:	72726574 	.word	0x72726574
   107b8:	20747075 	.word	0x20747075
   107bc:	74617473 	.word	0x74617473
   107c0:	000a7375 	.word	0x000a7375
   107c4:	6f727245 	.word	0x6f727245
   107c8:	6c632072 	.word	0x6c632072
   107cc:	69726165 	.word	0x69726165
   107d0:	4120676e 	.word	0x4120676e
   107d4:	69204344 	.word	0x69204344
   107d8:	7265746e 	.word	0x7265746e
   107dc:	74707572 	.word	0x74707572
   107e0:	61747320 	.word	0x61747320
   107e4:	0a737574 	.word	0x0a737574
   107e8:	00000000 	.word	0x00000000
   107ec:	6f727245 	.word	0x6f727245
   107f0:	202d2072 	.word	0x202d2072
   107f4:	20434441 	.word	0x20434441
   107f8:	706d6173 	.word	0x706d6173
   107fc:	7220656c 	.word	0x7220656c
   10800:	20646165 	.word	0x20646165
   10804:	6d6f7266 	.word	0x6d6f7266
   10808:	46494620 	.word	0x46494620
   1080c:	6166204f 	.word	0x6166204f
   10810:	64656c69 	.word	0x64656c69
   10814:	00000a2e 	.word	0x00000a2e
   10818:	6f727245 	.word	0x6f727245
   1081c:	202d2072 	.word	0x202d2072
   10820:	61736964 	.word	0x61736964
   10824:	20656c62 	.word	0x20656c62
   10828:	20434441 	.word	0x20434441
   1082c:	6c696166 	.word	0x6c696166
   10830:	0a2e6465 	.word	0x0a2e6465
   10834:	00000000 	.word	0x00000000
   10838:	6f727245 	.word	0x6f727245
   1083c:	202d2072 	.word	0x202d2072
   10840:	61736964 	.word	0x61736964
   10844:	6e696c62 	.word	0x6e696c62
   10848:	68742067 	.word	0x68742067
   1084c:	44412065 	.word	0x44412065
   10850:	6f702043 	.word	0x6f702043
   10854:	20726577 	.word	0x20726577
   10858:	616d6f64 	.word	0x616d6f64
   1085c:	66206e69 	.word	0x66206e69
   10860:	656c6961 	.word	0x656c6961
   10864:	000a2e64 	.word	0x000a2e64
   10868:	6f727245 	.word	0x6f727245
   1086c:	202d2072 	.word	0x202d2072
   10870:	75746572 	.word	0x75746572
   10874:	6f206e72 	.word	0x6f206e72
   10878:	68742066 	.word	0x68742066
   1087c:	44412065 	.word	0x44412065
   10880:	6e692043 	.word	0x6e692043
   10884:	6e617473 	.word	0x6e617473
   10888:	66206563 	.word	0x66206563
   1088c:	656c6961 	.word	0x656c6961
   10890:	000a2e64 	.word	0x000a2e64
   10894:	6f727245 	.word	0x6f727245
   10898:	202d2072 	.word	0x202d2072
   1089c:	65736572 	.word	0x65736572
   108a0:	74617672 	.word	0x74617672
   108a4:	206e6f69 	.word	0x206e6f69
   108a8:	7420666f 	.word	0x7420666f
   108ac:	41206568 	.word	0x41206568
   108b0:	69204344 	.word	0x69204344
   108b4:	6174736e 	.word	0x6174736e
   108b8:	2065636e 	.word	0x2065636e
   108bc:	6c696166 	.word	0x6c696166
   108c0:	0a2e6465 	.word	0x0a2e6465
   108c4:	00000000 	.word	0x00000000
   108c8:	6f727245 	.word	0x6f727245
   108cc:	202d2072 	.word	0x202d2072
   108d0:	20434441 	.word	0x20434441
   108d4:	65776f70 	.word	0x65776f70
   108d8:	6e6f2072 	.word	0x6e6f2072
   108dc:	69616620 	.word	0x69616620
   108e0:	2e64656c 	.word	0x2e64656c
   108e4:	0000000a 	.word	0x0000000a
   108e8:	6f727245 	.word	0x6f727245
   108ec:	202d2072 	.word	0x202d2072
   108f0:	666e6f63 	.word	0x666e6f63
   108f4:	72756769 	.word	0x72756769
   108f8:	20676e69 	.word	0x20676e69
   108fc:	20434441 	.word	0x20434441
   10900:	6c696166 	.word	0x6c696166
   10904:	0a2e6465 	.word	0x0a2e6465
   10908:	00000000 	.word	0x00000000
   1090c:	6f727245 	.word	0x6f727245
   10910:	202d2072 	.word	0x202d2072
   10914:	666e6f63 	.word	0x666e6f63
   10918:	72756769 	.word	0x72756769
   1091c:	20676e69 	.word	0x20676e69
   10920:	20434441 	.word	0x20434441
   10924:	746f6c53 	.word	0x746f6c53
   10928:	66203020 	.word	0x66203020
   1092c:	656c6961 	.word	0x656c6961
   10930:	000a2e64 	.word	0x000a2e64
   10934:	6f727245 	.word	0x6f727245
   10938:	202d2072 	.word	0x202d2072
   1093c:	62616e65 	.word	0x62616e65
   10940:	676e696c 	.word	0x676e696c
   10944:	43444120 	.word	0x43444120
   10948:	69616620 	.word	0x69616620
   1094c:	2e64656c 	.word	0x2e64656c
   10950:	0000000a 	.word	0x0000000a

00010954 <g_sBspUartConfig>:
   10954:	0001c200 00000060 00000000 00000000     ....`...........
   10964:	00000000 00000012 00000000 00000000     ................
	...

0001097c <g_AM_BSP_GPIO_COM_UART_RX>:
   1097c:	00000000                                ....

00010980 <g_AM_BSP_GPIO_COM_UART_TX>:
   10980:	00000000                                ....

00010984 <ccitt_table>:
   10984:	80050000 000a800f 001e801b 80110014     ................
   10994:	00368033 8039003c 802d0028 00228027     3.6.<.9.(.-.'.".
   109a4:	00668063 8069006c 807d0078 00728077     c.f.l.i.x.}.w.r.
   109b4:	80550050 005a805f 004e804b 80410044     P.U._.Z.K.N.D.A.
   109c4:	00c680c3 80c900cc 80dd00d8 00d280d7     ................
   109d4:	80f500f0 00fa80ff 00ee80eb 80e100e4     ................
   109e4:	80a500a0 00aa80af 00be80bb 80b100b4     ................
   109f4:	00968093 8099009c 808d0088 00828087     ................
   10a04:	01868183 8189018c 819d0198 01928197     ................
   10a14:	81b501b0 01ba81bf 01ae81ab 81a101a4     ................
   10a24:	81e501e0 01ea81ef 01fe81fb 81f101f4     ................
   10a34:	01d681d3 81d901dc 81cd01c8 01c281c7     ................
   10a44:	81450140 014a814f 015e815b 81510154     @.E.O.J.[.^.T.Q.
   10a54:	01768173 8179017c 816d0168 01628167     s.v.|.y.h.m.g.b.
   10a64:	01268123 8129012c 813d0138 01328137     #.&.,.).8.=.7.2.
   10a74:	81150110 011a811f 010e810b 81010104     ................
   10a84:	03068303 8309030c 831d0318 03128317     ................
   10a94:	83350330 033a833f 032e832b 83210324     0.5.?.:.+...$.!.
   10aa4:	83650360 036a836f 037e837b 83710374     `.e.o.j.{.~.t.q.
   10ab4:	03568353 8359035c 834d0348 03428347     S.V.\.Y.H.M.G.B.
   10ac4:	83c503c0 03ca83cf 03de83db 83d103d4     ................
   10ad4:	03f683f3 83f903fc 83ed03e8 03e283e7     ................
   10ae4:	03a683a3 83a903ac 83bd03b8 03b283b7     ................
   10af4:	83950390 039a839f 038e838b 83810384     ................
   10b04:	82850280 028a828f 029e829b 82910294     ................
   10b14:	02b682b3 82b902bc 82ad02a8 02a282a7     ................
   10b24:	02e682e3 82e902ec 82fd02f8 02f282f7     ................
   10b34:	82d502d0 02da82df 02ce82cb 82c102c4     ................
   10b44:	02468243 8249024c 825d0258 02528257     C.F.L.I.X.].W.R.
   10b54:	82750270 027a827f 026e826b 82610264     p.u...z.k.n.d.a.
   10b64:	82250220 022a822f 023e823b 82310234      .%./.*.;.>.4.1.
   10b74:	02168213 8219021c 820d0208 02028207     ................

00010b84 <am_ble_buffer_patch_data>:
   10b84:	0d382200 0000ffff 00093532 00093965     ."8.....25..e9..
   10b94:	0009452b 000948a9 000953f7 00095c1a     +E...H...S...\..
   10ba4:	0009641c 00096afd 0009751a 00097bde     .d...j...u...{..
   10bb4:	0009854b 00098bb3 0009951f 00099c4f     K...........O...
   10bc4:	0009a2f5 0009ad1e 00000000 00000000     ................
	...
   10c00:	47004800 20004841 bf00bf00 b005bf00     .H.GAH. ........
   10c10:	0000bdf0 20006790 00002710 20001000     .....g. .'..... 
   10c20:	00001388 20001018 000003ff b0ffb5ff     ....... ........
   10c30:	4607b082 4616460c 48302500 99846006     ...F.F.F.%0H.`..
   10c40:	28eed004 2003d002 bd707360 28f17c60     ...(... `sp.`|.(
   10c50:	28f2d006 28f3d004 2002d002 bd707360     ...(...(... `sp.
   10c60:	73602000 0000bd70 20001018 2000100a     . `sp...... ... 
   10c70:	47004800 20004d81 28008870 2014d116     .H.G.M. p..(... 
   10c80:	200b2101 fcc6f7ed 0000bd10 47004800     .!. .........H.G
   10c90:	20004e15 d0022800 28017808 7808d01a     .N. .(...x.(...x
   10ca0:	d0172802 d00e2800 d00c2801 fed9f7f0     .(...(...(......
   10cb0:	d0082800 f816f000 f7ef2032 f7f0f851     .(......2 ..Q...
   10cc0:	e000e180 e000e100 68014802 43912228     .........H.h(".C
   10cd0:	47706001 52c00000 47004800 20004881     .`pG...R.H.G.H. 
   10ce0:	47706001 52c00000 68014802 43912250     .`pG...R.H.hP".C
   10cf0:	47706001 52c00000 47004800 200048a1     .`pG...R.H.G.H. 
   10d00:	508040c0 460bb510 24024611 4350220c     .@.P...F.F.$."PC
   10d10:	18804a06 d0062800 2a006842 4618d003     .J...(..Bh.*...F
   10d20:	fb10f000 46204604 0000bd10 00015698     .....F F.....V..
   10d30:	47084900 20004e99 fd5cf7f3 5b00207c     .I.G.N. ..\.| .[
   10d40:	1940f80b 2900b2c1 3440d003 f7f98fa0     ..@....)..@4....
   10d50:	bd70fd73 e7e12101 47084900 20005081     s.p..!...I.G.P. 
   10d60:	8810f380 f7f34628 2100f94d 8810f381     ....(F..M..!....
   10d70:	d00f2800 460a8881 2a463a0a 1c64d20c     .(.....F.:F*..d.
   10d80:	03d20bd2 84c2430a f3802000 47708810     .....C... ....pG
   10d90:	00000466 50804440 47084900 200050ed     f...@D.P.I.G.P. 
   10da0:	8f809011 9812900e 900d3008 30309812     .........0....00
   10db0:	9812900c 900b3044 900a2000 980c2501     ....D0... ...%..
   10dc0:	f8a4f007 d02d2800 bf00bf00 bf00bf00     .....(-.........
   10dd0:	bf00bf00 bf00bf00 bf00bf00 9a0ce091     ................
   10de0:	232220ff 300a4611 fb9ef7fd 88617007     . "#.F.0.....pa.
   10df0:	88a181c1 88e18201 892180c1 7aa18101     ..........!....z
   10e00:	e02301c0 9802e077 01401a08 42900940     ..#.w.....@.@..B
   10e10:	9802d91c 01401a40 42400940 9802e016     ....@.@.@.@B....
   10e20:	bf00bf00 bf00bf00 bf00bf00 bf00bf00     ................
   10e30:	2000bf00 9802e00a 01401a38 42900940     ... ....8.@.@..B
   10e40:	607565c1 84b88960 20019a04 88607550     .eu``...... Pu`.
   10e50:	9a0485f8 75107860 47004800 200048e1     ....`x.u.H.G.H. 
   10e60:	0000bf00 8d3a8960 b2801e40 d1034282     ....`.:.@....B..
   10e70:	43012008 71819803 bdf0b007 20006160     . .C...q....`a. 
	...
   10e90:	00000021 00000000 00000001 00000000     !...............
   10ea0:	ffffffff 000003ff 1f3c00ff 00000000     ..........<.....
   10eb0:	00002001 00007d89 00002002 000076fd     . ...}... ...v..
   10ec0:	8c001810 9b080bc0 42181e5b 9808d105     ........[..B....
   10ed0:	47004800 200048c1 0000bf00 18d24b80     .H.G.H. .....K..
   10ee0:	20018450 8810f380 280068b8 2000d016     P.. .....h.(... 
   10ef0:	d0192800 28006b38 2000d012 d0132800     .(..8k.(... .(..
   10f00:	1900fc9f 68594b06 088a1809 1b090094     .....KYh........
   10f10:	01416059 18801a08 0000bd10 2000602c     Y`A.........,`. 
   10f20:	200067b8 47084900 20005579 6a80217d     .g. .I.GyU. }!.j
   10f30:	42880209 1a40d302 e0002201 2a001a08     ...B..@..".....*
   10f40:	1a081929 f7ee4621 b288feb1 3028bd70     )...!F......p.(0
   10f50:	7e003060 b4104770 32404602 24068cd3     `0.~pG...F@2...$
   10f60:	8d144363 b29b18e3 30608493 46187541     cC........`0Au.F
   10f70:	4770bc10 30603028 28007d40 20002000     ..pG(0`0@}.(. . 
   10f80:	07007940 2004d502 e0347060 f0056928     @y..... `p4.(i..
   10f90:	2800fb51 2002d002 e02c7060 f0039803     Q..(... `p,.....
   10fa0:	2804fe4d 4668d107 20027901 d0054388     M..(..hF.y. .C..
   10fb0:	28002000 2000d004 e01c7060 e7f82001     . .(... `p... ..
   10fc0:	20006758 50800040 200067b8 04000000     Xg. @..P.g. ....
   10fd0:	200067c8 47084900 200055cd 207d6a81     .g. .I.G.U. .j} 
   10fe0:	42810200 1a08d302 e0002201 2a001a40     ...B....."..@..*
   10ff0:	4360d004 fca4f7eb e0031a20 f7eb4360     ..`C.... ...`C..
   11000:	2400b5f8 7800481c d12d2800 68704e1b     ...$.H.x.(-..Nph
   11010:	28004d1b 4f1bda09 200b2101 210147b8     .M.(...O.!. .G.!
   11020:	47a8200b 28006870 2100dbf6 47a8200b     . .Gph.(...!. .G
   11030:	200a4e15 270547b0 69f8073f 0d2d0505     .N. .G.'?..i..-.
   11040:	d1042d00 68c04811 0e800580 2c64d00c     .-...H.h......d,
   11050:	2014d20a 69f847b0 0d000500 d90442a8     ... .G.i.....B..
   11060:	1c644605 d3f42c64 4903bdf8 70082001     .Fd.d,.....I. .p
   11070:	70084907 0000bdf8 20001001 45800080     .I.p....... ...E
   11080:	00002455 00002391 00003ba1 52c00000     U$...#...;.....R
   11090:	20001000 4818b510 29406801 2140d201     ... ...H.h@)..@!
   110a0:	7a806001 d00107c0 bd102000 47804813     .`.z..... ...H.G
   110b0:	07002005 491269c0 d0040500 28017808     . ...i.I.....x.(
   110c0:	2802d014 7808d012 d0082800 d0062801     ...(...x.(...(..
   110d0:	d0042802 4780480b 2032490b 490b4788     .(...H.G.I2 .G.I
   110e0:	47882004 4780480a bd102000 20044909     . .G.H.G. ...I. 
   110f0:	20014788 0000bd10 200067b8 00009305     .G. .....g. ....
   11100:	20001018 00014b25 00003ba1 00014441     ... %K...;..AD..
   11110:	00014aaf 00014489 b08db5f0 496c4604     .J...D.......FlI
   11120:	4788a804 5b00207c 25009003 90022000     ...G| .[...%. ..
   11130:	f3802001 6c608810 f3812100 46268810     . ....`l.!....&F
   11140:	28003660 4621d06b 910c3144 910b3928     `6.(k.!FD1..(9..
   11150:	910a3164 00ca8881 1851495e 0bc98cc9     d1......^IQ.....
   11160:	d05c2900 f3812101 68008810 495a9001     .)\..!.....h..ZI
   11170:	4788980c 69e04607 d0032800 28002000     ...G.F.i.(... .(
   11180:	e008d002 e7fa2001 980b4953 28004788     ..... ..SI...G.(
   11190:	4952d001 20004788 8810f380 494d88b8     ..RI.G. ......MI
   111a0:	184000c0 0bd28cc2 84c203d2 280788b8     ..@............(
   111b0:	7e30d21e 76301e40 f3802001 6b208810     ..0~@.0v. .... k
   111c0:	d0132800 28002000 980ad005 798021fb     .(... .(.....!.y
   111d0:	990a4008 49417188 47884638 f3802000     .@...qAI8F.G. ..
   111e0:	4a3f8810 98037b39 e0154790 e7ea2001     ..?J9{...G... ..
   111f0:	d90f2809 184000c0 0a008d00 49399000     .(....@.......9I
   11200:	47884638 d0072800 28009800 1c6dd004     8F.G.(.....(..m.
   11210:	e001b2ed b2ed1c6d 28009801 9803d19a     ....m......(....
   11220:	d00e2807 d00c2d00 f3802001 7e308810     .(...-... ....0~
   11230:	76301b40 f3802000 4a2b8810 98034629     @.0v. ....+J)F..
   11240:	20014790 8810f380 4f234828 47b89009     .G. ....(H#O...G
   11250:	20004604 8810f380 d0360020 88e04e1f     .F. .... .6..N..
   11260:	42889903 2807d112 7aa1d007 4f209100     ...B...(...z.. O
   11270:	7b227ae3 47b88921 4b1ee005 89207921     .z"{!..G...K!y .
   11280:	4798462a 46209002 e00347b0 46214a1a     *F.G.. F.G...J!F
   11290:	4790a804 f3802001 490f8810 47889809     ...G. .....I...G
   112a0:	00204604 9804d10c d0032800 28002000     .F ......(... .(
   112b0:	e005d002 e7fa2001 a9044a10 47909809     ..... ...J.....G
   112c0:	f3802000 2c008810 9802d1c9 bdf0b00d     . .....,........
   112d0:	000038b5 50804440 00003945 000093a5     .8..@D.PE9......
   112e0:	0000b809 0000565d 0000b705 200061b8     ....]V.......a. 
   112f0:	0000b729 00012235 00003967 0000390f     )...5"..g9...9..
   11300:	2400b5f1 4e164d15 f3802001 98008810     ...$.M.N. ......
   11310:	210047a8 8810f381 d0172800 460a8881     .G.!.....(.....F
   11320:	2a463a0a 00c9d214 8d091989 21010a0f     .:F*...........!
   11330:	8810f381 4788490b d0032800 d0012f00     .....I.G.(.../..
   11340:	b2e41c64 f3802000 e7dd8810 bdf84620     d.... ...... F..
   11350:	29491fc9 4904d3d8 e7d54788 00003945     ..I)...I.G..E9..
   11360:	50804440 0000565d 000093a5 b092b5f1     @D.P]V..........
   11370:	30409812 8f809011 9812900e 900d3008     ..@0.........0..
   11380:	30309812 9812900c 900b3044 900a2000     ..00....D0... ..
   11390:	980c2501 2c006804 2000d003 d0022800     .%...h.,... .(..
   113a0:	2001e093 980ee7fa 48f900c1 90101808     ... .......H....
   113b0:	0bc08cc0 d06e2800 49f6980e 900f0080     .....(n....I....
   113c0:	30a05808 20017946 d5190771 d0172c00     .X.0Fy. q....,..
   113d0:	06b04ff1 7b20d507 078047b8 2000d401     .O.... {.G..... 
   113e0:	2001e006 7b20e004 07c047b8 2001d003     ... .. {.G..... 
   113f0:	d0022800 2000e004 6824e7fa d1e82c00     .(..... ..$h.,..
   11400:	d0622800 22004be5 980c4621 68a64798     .(b..K."!F...G.h
   11410:	a9094ae3 47904630 d1562800 4fdc88a0     .J..0F.G.(V....O
   11420:	19c000c0 49df8d40 20001841 7912aa08     ....@..IA.. ...y
   11430:	dd062a00 540a5c32 aa081c40 42907912     .*..2\.T@....y.B
   11440:	49d9dbf8 478868a0 980f49d2 30a05808     ...I.h.G.I...X.0
   11450:	07c07940 a908d003 1d007908 a8089009     @y.......y......
   11460:	98107901 02098d02 430ab2d2 21038502     .y.........C...!
   11470:	8d029810 430a438a 98118502 21008f80     .....C.C.......!
   11480:	19c000c0 980b84c1 28006800 2000d004     .........h.(... 
   11490:	d0032800 e018e010 e7f92001 88a1980b     .(....... ......
   114a0:	00ca6840 888049c1 00c01851 8cc219c0     @h...I..Q.......
   114b0:	03d20bd2 84c2430a 46214abd 4790980b     .....C...J!F...G
   114c0:	30609812 1c497e01 98117601 28078f80     ..`0.~I..v.....(
   114d0:	990ed208 49af008a 31a05889 07497949     .......I.X.1IyI.
   114e0:	2500d500 6809990d d01f2900 462a2100     ...%...h.)...!*F
   114f0:	d077438a d2762807 48ae49af 90094788     .Cw..(v..I.H.G..
   11500:	90082000 8f809811 48a20081 30a05840     . .........H@X.0
   11510:	07c07940 90070fc0 6806980d d0092e00     @y.........h....
   11520:	6830990d 28006008 e003d002 e7de2101     ..0h.`.(.....!..
   11530:	6048990d d07d2e00 90062000 90039812     ..H`..}.. ......
   11540:	9004a806 9b099f07 25089705 20005f75     ...........%u_. 
   11550:	90019002 90002001 8e429811 b2d44684     ..... ....B..F..
   11560:	46292001 b2893109 2f009f05 1d09d001     . )F.1...../....
   11570:	00c9b289 b2893108 8e3f4667 d205428f     .....1..gF?..B..
   11580:	05793f50 42a20e0c b2d4d200 dd0142a5     P?y....B.....B..
   11590:	00640864 1a6f4621 42971c62 1909db05     d.d.!Fo.b..B....
   115a0:	b2c01c40 42971a6f 4298daf9 2500d901     @...o..B...B...%
   115b0:	9904e034 4f817008 487e4981 46014788     4....p.O.I~H.G.F
   115c0:	28009800 2000d012 7ab09000 0f800780     ...(... ...z....
   115d0:	d0092801 72882002 88c268f0 88809202     .(... .r.h......
   115e0:	e0099001 e058e062 e7f42001 72882001     ....b.X.. ... .r
   115f0:	19009802 9002b280 dd0142a5 e00072cc     .........B...r..
   11600:	980172cd 980280c8 1b288108 2d00b205     .r........(....-
   11610:	2201dc22 98039b05 250147b8 d0202d00     "..".....G.%.- .
   11620:	7e004668 18099908 9108b2c9 1a089909     hF.~............
   11630:	e000b280 9009e035 69c09812 d01a2800     ....5......i.(..
   11640:	6a009812 98126006 20006206 98086030     ...j.`...b. 0`..
   11650:	d913280a e0242500 9b052200 47b89803     .(...%$..".....G
   11660:	980de7aa 28006800 990dd101 6030604e     .....h.(....N`0`
   11670:	6006980d 9812e015 e7e461c6 6806980d     ...`.....a.....h
   11680:	d0062e00 6830990d 28006008 990dd101     ......0h.`.(....
   11690:	2e006048 e74fd000 4a4ae003 980b990d     H`....O...JJ....
   116a0:	2d004790 4948d002 4788980d 6800980b     .G.-..HI...G...h
   116b0:	d0032800 28002000 e04bd002 e7fa2001     .(... .(..K.. ..
   116c0:	8f809811 d2452807 30809812 280478c0     .....(E....0.x.(
   116d0:	493bd140 47884837 d03b2800 21008882     @.;I7H.G.(;....!
   116e0:	00d24b2b 855118d2 00c98881 8d8a18c9     +K....Q.........
   116f0:	0c640454 858c2200 00c98881 8d0c18c9     T.d.."..........
   11700:	850cb2e4 24018881 18c900c9 08ad8d0d     .......$........
   11710:	432500ad 8881850d 18c900c9 0be48ccc     ..%C............
   11720:	84cc03e4 8884990b 00e56849 88894c1f     ........Ih...L..
   11730:	00c9192c 8ccb18c9 03db0bdb 84cb4323     ,...........#C..
   11740:	6809990b d00d2900 6849990b 990b6008     ...h.)....Ih.`..
   11750:	60026048 6800980b d0062800 29002100     H`.`...h.(...!.)
   11760:	e03cd005 6008990b 2101e7f1 2800e7f7     ..<....`...!...(
   11770:	4a07d00a 00c98881 8cc91889 29000bc9     ...J...........)
   11780:	6800d024 d1f52800 d0262800 0000e027     $..h.(...(&.'...
   11790:	50804440 20006160 0000af81 00003817     @D.P`a. .....8..
   117a0:	00010341 50804000 000093a5 00000466     A....@.P....f...
   117b0:	00003967 200061e4 000039bb 00010011     g9...a. .9......
   117c0:	00003945 0000390f 000038b5 00ca8881     E9...9...8......
   117d0:	18514907 910ab289 2000e7d6 990a900a     .IQ........ ....
   117e0:	225a980e 4a034350 84811880 bdf0b013     ..Z"PC.J........
   117f0:	00000466 50804080 2300b410 46022114     f....@.P...#.!.F
   11800:	4911434a 6809247d 42a10224 1b09d902     JC.I}$.h$..B....
   11810:	e0002301 43481a61 18410081 0c0c0a88     .#..a.HC..A.....
   11820:	0c4c1900 0d4c1900 0e4c1900 0fc91900     ..L...L...L.....
   11830:	08c01840 d0012b00 e0011810 1e401a10     @....+........@.
   11840:	bc101e40 00004770 20006054 2300b4f0     @...pG..T`. ...#
   11850:	6be54c18 227d4918 02126809 d3024291     .L.k.I}".h...B..
   11860:	23011a8a 1a52e000 43564606 435113f2     ...#..R..FVC..QC
   11870:	261e1a71 104f434e 118f19f6 124919f6     q..&NCO.......I.
   11880:	13ce1871 d0012b00 e0001a80 19421810     q....+........B.
   11890:	008d0891 2b001b52 0143d004 18401a18     ....R..+..C...@.
   118a0:	e0031b80 1a180143 19801840 bcf063e2     ....C...@....c..
   118b0:	00004770 20006780 20006054              pG...g. T`. 

000118bc <am_hal_ble_num_default_patches>:
   118bc:	00000003                                ....

000118c0 <am_ble_performance_copy_patch_data>:
   118c0:	006e1100 00000400 00000000 01c50101     ..n.............
   118d0:	00000039 00000000 00000000 00000000     9...............
   118e0:	00000000 ffffffff 2000b570 8849490c     ........p.. .II.
   118f0:	188b4a0c 490c881a 24001c9b 022d2513     .J.....I...$.%-.
   11900:	1c40540c dbfb42a8 2a002000 5c1cdd04     .T@..B... .*...\
   11910:	1c40540c dbfa4290 47804804 bd702000     .T@..B...H.G. p.
   11920:	20004800 20004802 20003500 000133af     .H. .H. .5. .3..
   11930:	b51f08a0 98002400 d243281d 44790001     .....$...(C...yD
   11940:	18497909 130e448f 40251a40 40404040     .yI..D..@.%@@@@@
   11950:	40404040 402a4040 2d404040 35403240     @@@@@@*@@@@-@2@5
   11960:	00404038 b2c09801 fa07f000 9802e02c     8@@.........,...
   11970:	9801b2c1 f000b2c0 e025f8b8 b2839806     ..........%.....
   11980:	b2829803 b2c19802 b2c09801 f971f000     ..............q.
   11990:	9801e01a f000b2c0 e015f90a f829f000     ..............).
   119a0:	9801e012 f000b280 e00df962 fb3bf000     ........b.....;.
   119b0:	f000e00a e007fb94 b2c09801 fac7f000     ................
   119c0:	e0014604 43e42400 b0044620 b403bd10     .F...$.C F......
   119d0:	90014801 2739bd01 b4030000 90014801     .H....9'.....H..
   119e0:	2895bd01 b4030000 90014801 0101bd01     ...(.....H......
   119f0:	b4f00000 22432000 68510612 340124ff     ..... C"..Qh.$.4
   11a00:	60514321 03236851 60514319 05db23a3     !CQ`Qh#..CQ`.#..
   11a10:	08496819 60190049 6909492a 4d29b2ce     .hI.I..`*I.i..)M
   11a20:	88294f2a d30142b9 e00d2004 42b94f28     *O)..B... ..(O.B
   11a30:	2003d301 4f26e008 d30142b9 e0032002     ... ..&O.B... ..
   11a40:	42b94f25 2001d300 18394f24 7e093120     %O.B... $O9. 1.~
   11a50:	da0942b1 dd012800 b2401e40 7a091839     .B...(..@.@.9..z
   11a60:	19c00040 e00b8b00 da042804 42b15c39     @........(..9\.B
   11a70:	1c40db01 1839b240 00407a09 8b0019c0     ..@.@.9..z@.....
   11a80:	62314e17 08496819 60190049 6b314e15     .N1b.hI.I..`.N1k
   11a90:	4327460f 62986337 633143a1 68518028     .F'C7c.b.C1c(.Qh
   11aa0:	438103b0 78004810 0fc007c0 43190503     ...C.H.x.......C
   11ab0:	68516051 43a10200 60514301 4770bcf0     Q`Qh...C.CQ`..pG
   11ac0:	00800000 604e4580 3ff62000 38f60000     .....EN`. .?...8
   11ad0:	2df60000 09f60000 67fc0000 04802000     ...-.......g. ..
   11ae0:	004050c0 603a4580 b5f02000 2243b082     .P@..E:`. ....C"
   11af0:	68530612 04642401 60534323 0fd207ca     ..Sh.$d.#CS`....
   11b00:	078a4696 074a0fd3 070a0fd4 92010fd2     .F....J.........
   11b10:	0fd206ca 068a9200 46940fd2 0fd5064a     ...........FJ...
   11b20:	4a1f09ce 27036811 43b9057f 4f1d6912     ...J.h.'...C.i.O
   11b30:	2800403a 2801d006 2701d009 280205bf     :@.(...(...'...(
   11b40:	4339d003 d0062800 4339e01b 2701e7fa     ..9C.(....9C...'
   11b50:	4339057f 0330e7f6 016a4310 46624310     ..9C..0..Cj..CbF
   11b60:	431002d2 01d29a00 9a014310 43100192     ...C.....C.....C
   11b70:	431002a2 4310025a 02124672 4a084310     ...CZ..CrF...C.J
   11b80:	48076110 20436001 68410600 04522201     .a.H.`C ..Ah."R.
   11b90:	4a054391 07d27812 43110b92 b0026041     .C.J.x.....CA`..
   11ba0:	0000bdf0 e00343c0 603affff b5f82000     .....C....:`. ..
   11bb0:	20432400 68410600 03bf2701 60414339     .$C ..Ah.'..9CA`
   11bc0:	00ba6841 60414311 68054821 430d1c51     Ah...CA`!H.hQ..C
   11bd0:	4e1f6005 47b020c8 6888491f 60884338     .`.N. .G.I.h8C.`
   11be0:	68f0460e 0fc70400 2001491a 46204788     .F.h.....I. .G F
   11bf0:	1c64491a d8014288 d0f22f00 40054818     .Id..B.../...H.@
   11c00:	60054813 03402001 68f160b0 40014815     .H.`. @..`.h.H.@
   11c10:	4a146870 43084010 68306070 0289213f     ph.J.@.Cp`0h?!..
   11c20:	60304388 06092143 2001684a 43820380     .C0`C!..Jh. ...C
   11c30:	7800480e 0fc007c0 431a0383 684a604a     .H.x.......CJ`Jh
   11c40:	041b2301 0400439a 604a4302 0000bdf8     .#...C...CJ`....
   11c50:	3ba15240 00000000 271051c0 fffe0000     @R.;.....Q.'....
   11c60:	3f3ffffe c0c00000 603affff 47702000     ..??......:`. pG
   11c70:	b5f00000 2508b083 2000493c 20437008     .......%<I. .pC 
   11c80:	68410600 431102aa 27296041 067f4938     ..Ah...CA`)'8I..
   11c90:	684160f9 43914b37 07db781b 43190c9b     .`Ah7K.C.x.....C
   11ca0:	24256041 684101a4 60414311 10526841     A`%$..Ah.CA`AhR.
   11cb0:	60414311 210368f8 43880649 43060356     .CA`.h.!I..CV..C
   11cc0:	43060390 200168b8 fe81f7ff 20104621     ...C.h. ....!F. 
   11cd0:	fe83f7ff 43060328 2d002400 60fed90c     ....(..C.$.-...`
   11ce0:	20644925 68f84788 0a004669 55081c80     %Id .G.hiF.....U
   11cf0:	b2e41c64 d3f242ac 79d0466a 18407991     d....B..jF.y.y@.
   11d00:	79127951 18401889 78d1466a 78901841     Qy.y..@.jF.xA..x
   11d10:	78501809 78101809 46291808 fe63f7ff     ..Px...x..)F..c.
   11d20:	b2c04912 68397008 02922201 60394311     .I...p9h."...C9`
   11d30:	1c400040 20006178 fe49f7ff 06092143     @.@.xa. ..I.C!..
   11d40:	2001684a 43820300 7800480a 0fc007c0     Jh. ...C.H.x....
   11d50:	431a0303 684a604a 035b2301 0340439a     ...CJ`Jh.#[..C@.
   11d60:	604a4302 bdf0b003 60700000 34cc2000     .CJ`......p`. .4
   11d70:	603a0263 3ba12000 b4700000 06092143     c.:`. .;..p.C!..
   11d80:	24016848 432004a4 20c46048 05d22287     Hh.$.. CH`. ."..
   11d90:	485c6010 68486150 43a04a5c 07d27812     .`\HPaHh\J.C.x..
   11da0:	04930fd2 60484318 4b58208b 634305c0     .....CH`. XK..Cc
   11db0:	25014b58 250660dd 250560cd 688563c5     XK.%.`.%.`.%.c.h
   11dc0:	3df0086d 68c56085 355d086d 690560c5     m..=.`.hm.]5.`.i
   11dd0:	6105086d 086d6945 69856145 6185086d     m..aEim.Ea.im..a
   11de0:	086d69c5 6a0561c5 6205086d 086d6a45     .im..a.jm..bEjm.
   11df0:	6a856245 6285086d 086d6ac5 250162c5     Eb.jm..b.jm..b.%
   11e00:	625d611d 4b43639d 4d43601d 6a1d615d     .a]b.cCK.`CM]a.j
   11e10:	621d086d 25016ac3 62c3432b 10a36848     m..b.j.%+C.bHh..
   11e20:	60484318 109b6848 60484318 4b3b483d     .CH`Hh...CH`=H;K
   11e30:	68836143 05ad253f 6083432b 60c32300     Ca.h?%..+C.`.#.`
   11e40:	61834b39 682b4d39 43b3261e 6a83602b     9K.a9M+h.&.C+`.j
   11e50:	43ab03f5 6283191b 10a36848 04134398     ...C...bHh...C..
   11e60:	60484318 11236848 03934398 60484318     .CH`Hh#..C...CH`
   11e70:	11636848 60484318 06402029 09246a04     Hhc..CH`) @..j$.
   11e80:	34080124 68486204 03534398 60484318     $..4.bHh.CS..CH`
   11e90:	23016848 4318051b 24286048 05c020a3     Hh.#...CH`($. ..
   11ea0:	4d226004 6285882d 05126848 43104398     .`"M-..bHh...C.C
   11eb0:	481f6048 700121e6 4a1d7204 8310481e     H`.H.!.p.r.J.H..
   11ec0:	23e0481e 4c1a7603 706222d4 7262223c     .H.#.v.L."bp<"br
   11ed0:	83624a1b 22c87641 4d1570a2 72ac2446     .Jb.Av.".p.MF$.r
   11ee0:	83ac4c18 46297681 215070ca 72d1462a     .L...v)F.pP!*F.r
   11ef0:	83d14915 215a76c3 49137311 77038411     .I...vZ!.s.I...w
   11f00:	4770bc70 7fff0000 603a0000 02492000     p.pG......:`. I.
   11f10:	00400000 00804580 021e4580 00030000     ..@..E...E......
   11f20:	0000003c 00085240 0000000f 604e51c0     <...@R.......QN`
   11f30:	67fc2000 07f62000 681c0000 09f62000     . .g. .....h. ..
   11f40:	2df60000 38f60000 3ff60000 b5f80000     ...-...8...?....
   11f50:	6800482d d1542800 06122243 21016850     -H.h.(T.C"..Ph.!
   11f60:	430803c9 4f286050 2501683c 06002003     ...CP`(O<h.%. ..
   11f70:	60384320 49252600 4788201e 20014924      C8`.&%I. .G$I. 
   11f80:	68784788 0fc007c0 4a214631 42911c76     .Gxh....1F!Jv..B
   11f90:	2800d801 481cd0f2 481e6881 20006001     ...(...H.h.H.`. 
   11fa0:	2d002600 4b1cd011 25004632 41aa1acb     .&.-...K2F.%...A
   11fb0:	1c40da14 4f184605 4633434d 1b7d2200     ..@..F.OMC3F."}.
   11fc0:	1b4d419a dbf44193 4b14e008 d2054299     .AM..A.....K.B..
   11fd0:	46021c40 1a9a434a d8f9428a 06092101     @..FJC...B...!..
   11fe0:	0049438c 4908430c 2243600c 68510612     .CI..C.I.`C"..Qh
   11ff0:	03db2301 4b0a4399 07db781b 43190c1b     .#...C.K.x.....C
   12000:	bdf86051 605c0000 00002000 3ba14440     Q`....\`. ..@D.;
   12010:	27100000 60600000 20002000 d000bebc     ...'..``. . ....
   12020:	603a1312 b5702000 47804823 06242443     ..:`. p.#H.GC$$.
   12030:	68602101 43080489 481f6060 481f4780     .!`h...C``.H.G.H
   12040:	28aa7800 68a0d106 d1030780 4788491d     .x.(...h.....I.G
   12050:	6008491d 05c020a1 21026b02 430a438a     .I.`. ...k.!.C.C
   12060:	21016302 438a6b02 6302430a 26046b01     .c.!.k.C.C.c.k.&
   12070:	433143b1 4c146301 4d146860 d5040080     .C1C.c.L`h.M....
   12080:	47a82001 00806860 4c11d4fa 6060200f     . .G`h.....L. ``
   12090:	47a82001 60602007 47a82004 60602006     . .G. ``. .G. ``
   120a0:	480c218b 600805c9 6901480c 61014331     .!.H...`.H.i1C.a
   120b0:	bd70bf30 37350000 9c390000 602c0000     0.p...57..9...,`
   120c0:	39d12000 60540000 00802000 3ba14580     . .9..T`. ...E.;
   120d0:	00400000 03264580 ed000000 b570e000     ..@..E&.......p.
   120e0:	200f4d2f 248b6068 682005e4 02492101     /M. h`.$.. h.!I.
   120f0:	60204388 4780482b f3802001 48298810     .C `+H.G. ....)H
   12100:	49296840 d4060080 22086820 60204310     @h)I.... h.".C `
   12110:	47882001 2001e001 48244788 48244780     . .G... .G$H.G$H
   12120:	78004925 200d4788 48236068 20434780     %I.x.G. h`#H.GC 
   12130:	68410600 035b2301 60414319 4a1f2129     ..Ah.#[..CA`)!.J
   12140:	60ca0649 09126a0a 32080112 680a620a     I..`.j.....2.b.h
   12150:	432210dc 4a1a600a 00527812 614a1c52     .."C.`.J.xR.R.Ja
   12160:	49186842 7809439a 0fc907c9 431a034b     Bh.I.C.x....K..C
   12170:	68436042 431302a2 24286043 05db23a3     B`Ch...CC`($.#..
   12180:	4c11601c 629c8824 05096843 430b4393     .`.L$..bCh...C.C
   12190:	20006043 8810f380 4780480d 0040bd70     C`. .....H.Gp.@.
   121a0:	3b854580 00800001 44894580 346d0001     .E.;.....E.D..m4
   121b0:	60400001 3ba12000 4d990000 34cc0001     ..@`. .;...M...4
   121c0:	60700463 603a2000 604e2000 34ad2000     c.p`. :`. N`. .4
   121d0:	00000001                                ....

000121d4 <am_hal_ble_num_default_patches_b0>:
   121d4:	00000003                                ....

000121d8 <am_hal_cachectrl_defaults>:
   121d8:	00000308                                ....

000121dc <g_AM_HAL_GPIO_INPUT>:
   121dc:	00001003                                ....

000121e0 <g_ui8Bit76Capabilities>:
   121e0:	02800101 80010180 80800101 80808080     ................
   121f0:	80808080 80808008 01800180 80808080     ................
   12200:	80808080 01800402 01010401 80808080     ................
   12210:	00000101                                ....

00012214 <g_ui8NCEtable>:
   12214:	13524232 60221202 21534333 20504030     2BR..."`3CS!0@P 
   12224:	11514131 ffffffff ffffffff 60514131     1AQ.........1AQ`
   12234:	00504030 23534333 60524232 30201000     0@P.3CS#2BR`.. 0
   12244:	61504030 01514131 42221202 60231303     0@Pa1AQ..."B..#`
   12254:	50201000 41211101 32221202 60331303     .. P..!A.."2..3`
   12264:	21514131 22524232 03534333 40201000     1AQ!2BR"3CS... @
   12274:	51211101 02524232 13534333 10504030     ..!Q2BR.3CS.0@P.
   12284:	60514131 12524232 03534333 40201000     1AQ`2BR.3CS... @
   12294:	61211101 52221202 33231303 30201000     ..!a.."R..#3.. 0
   122a4:	61514131 02524232 53331303 ffffffff     1AQa2BR...3S....
   122b4:	ffffffff 61211101 50201000 61211101     ......!a.. P..!a
   122c4:	52221202 13534333 61504030 31211101     .."R3CS.0@Pa..!1
   122d4:	32221202 43231303                       .."2..#C

000122dc <g_ui8Inpen>:
   122dc:	62272323 108703a1 e1005303 55418151     ##'b.....S..Q.AU
   122ec:	4080c405 4140b101 31a03114 1180f100     ...@..@A.1.1....
   122fc:	11c12191 304511e5 31300037 40007100     .!....E07.01.q.@
   1230c:	00003130                                01..

00012310 <g_AM_HAL_GPIO_DISABLE>:
   12310:	00000003                                ....

00012314 <g_AM_HAL_GPIO_OUTPUT>:
   12314:	00000403                                ....

00012318 <g_ui8nCEpins>:
   12318:	02070707 00080802 01020202 01010101     ................
   12328:	01010101 01010101 01010101 01010101     ................
   12338:	01010101 08010101 01010008 01010101     ................
   12348:	00000101                                ....

0001234c <g_AM_HAL_GPIO_OUTPUT_12>:
   1234c:	00000703                                ....

00012350 <g_am_hal_mcuctrl_flash_size>:
   12350:	00004000 00008000 00010000 00020000     .@..............
   12360:	00040000 00080000 00100000 00200000     .............. .
   12370:	00180000 00000000 00000000 00000000     ................
	...

00012390 <g_am_hal_mcuctrl_sram_size>:
   12390:	00004000 00008000 00010000 00020000     .@..............
   123a0:	00040000 00080000 00100000 00060000     ................
   123b0:	000c0000 00000000 00000000 00000000     ................
	...

000123d0 <am_hal_pwrctrl_peripheral_control>:
	...
   123dc:	00000001 00000004 00000004 00000002     ................
   123ec:	00000008 00000008 00000004 00000008     ................
   123fc:	00000008 00000008 00000008 00000008     ................
   1240c:	00000010 00000010 00000010 00000020     ............ ...
   1241c:	00000010 00000010 00000040 00000010     ........@.......
   1242c:	00000010 00000080 00000004 00000004     ................
   1243c:	00000100 00000004 00000004 00000200     ................
   1244c:	00000020 00000020 00000400 00000004      ... ...........
   1245c:	00000004 00000800 00000040 00000040     ........@...@...
   1246c:	00001000 00000080 00000080 00002000     ............. ..
   1247c:	00000100 00000100                       ........
